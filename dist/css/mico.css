/**
 * Mico CSS Framework
 * A lightweight and versatile CSS framework focused on utility classes
 * Version: 1.0.0
 * Author: Michael Katiba
 */

/* Base and Theming */

/**
 * Mico CSS Framework - Core Variables
 *
 * This file defines the foundational CSS variables that power the Mico CSS framework.
 * These variables create a consistent design system that can be used throughout your project.
 *
 * USAGE:
 * Variables are accessed using the var() function:
 * Example: font-size: var(--mico-text-md);
 */

/* ========================================================================== */

/* RESPONSIVE BREAKPOINTS                                                     */

/* ========================================================================== */

:root {
  /**
   * Breakpoints define the viewport width thresholds for responsive design.
   * These values align with common device sizes and provide a consistent
   * foundation for responsive layouts.
   *
   * Usage: @media (min-width: var(--mico-breakpoint-md)) { ... }
   */
  --mico-xxs-breakpoint: 1600px;  /* Super large devices (wider screens) */
  --mico-xs-breakpoint: 320px;   /* Extra small devices (phones) */
  --mico-sm-breakpoint: 576px;   /* Small devices (large phones, portrait tablets) */
  --mico-md-breakpoint: 768px;   /* Medium devices (tablets) */
  --mico-lg-breakpoint: 992px;   /* Large devices (desktops) */
  --mico-xl-breakpoint: 1280px;  /* Extra large devices (large desktops) */
  --mico-xxl-breakpoint: 1440px; /* Ultra large devices (wide screens) */
  --mico-xxxl-breakpoint: 1600px;  /* Super large devices (wider screens) */


  /* ====================================================================== */
  /* COMMON VALUES SYSTEM                                                   */
  /* ====================================================================== */

  /**
   * Common Values
   *
   * These variables define frequently used values to ensure consistency
   * and reduce repetition throughout the framework.
   */
  --mico-value-auto: auto;
  --mico-value-none: none;
  --mico-value-normal: normal;
  --mico-value-inherit: inherit;
  --mico-value-initial: initial;
  --mico-value-unset: unset;
  --mico-value-current: currentColor;
  --mico-value-transparent: transparent;
  --mico-value-0: 0;

  /* ====================================================================== */
  /* TYPOGRAPHY SYSTEM                                                      */
  /* ====================================================================== */

  /**
   * ======================================================================
   * FLUID TYPOGRAPHY SYSTEM (Based on a Major Third scale)
   * ======================================================================
   * Base Font Size: 1rem (16px)
   * Typographic Ratio: 1.250
   *
   * This system uses clamp() to create font sizes that scale smoothly
   * with the viewport, while maintaining accessible minimum and maximum sizes.
   */

  /* Captions & tiny text. Min: 12.8px, Max: 14px. */
  --mico-fs-xxs: clamp(0.8rem, calc(0.7rem + 0.5vw), 0.875rem);

  /* Small text. Min: 14px, Max: 16px. */
  --mico-fs-xs: clamp(0.875rem, calc(0.775rem + 0.5vw), 1rem);
  
  /* Slightly smaller body text. Min: 15px, Max: 17.6px. */
  --mico-fs-sm: clamp(0.9375rem, calc(0.8125rem + 0.625vw), 1.1rem);

  /* Standard body text. Min: 16px, Max: 18px. */
  --mico-fs-md: clamp(1rem, calc(0.85rem + 0.75vw), 1.125rem);

  /* Small headings (h4, h5). Min: 20px, Max: 24px. */
  --mico-fs-lg: clamp(1.25rem, calc(1.0rem + 1.25vw), 1.45rem);

  /* Medium headings (h3). Min: 24px, Max: 32px. */
  --mico-fs-xl: clamp(1.563rem, calc(1.208rem + 1.77vw), 1.85rem);

  /* Large headings (h2). Min: 32px, Max: 48px. */
  --mico-fs-xxl: clamp(1.953rem, calc(1.453rem + 2.5vw), 3rem);

  /* Extra-large headings (h1). Min: 48px, Max: 80px. */
  --mico-fs-xxxl: clamp(3rem, calc(1.875rem + 3.63vw), 5rem);
  

  /**
   * Font Weights
   *
   * Standard font weight values from 100 (thinnest) to 900 (boldest)
   * Using consistent naming pattern with descriptive suffixes
   */
  --mico-fw-100: 100;  /* Thinnest */
  --mico-fw-200: 200;  /* Extra light */
  --mico-fw-300: 300;  /* Light */
  --mico-fw-400: 400;  /* Normal/Regular */
  --mico-fw-500: 500;  /* Medium */
  --mico-fw-600: 600;  /* Semi bold */
  --mico-fw-700: 700;  /* Bold */
  --mico-fw-800: 800;  /* Extra bold */
  --mico-fw-900: 900;  /* Black/Heaviest */

  /**
   * Font Stretch Properties
   *
   * Controls the width of glyphs if the font family has variable widths.
   * Values represent percentage of normal width.
   */
  --mico-font-stretch-ultra-condensed: ultra-condensed; /* 50% */
  --mico-font-stretch-extra-condensed: extra-condensed; /* 62.5% */
  --mico-font-stretch-condensed: condensed;             /* 75% */
  --mico-font-stretch-semi-condensed: semi-condensed;   /* 87.5% */
  --mico-font-stretch-normal: var(--mico-value-normal); /* 100% */
  --mico-font-stretch-semi-expanded: semi-expanded;     /* 112.5% */
  --mico-font-stretch-expanded: expanded;               /* 125% */
  --mico-font-stretch-extra-expanded: extra-expanded;   /* 150% */
  --mico-font-stretch-ultra-expanded: ultra-expanded;   /* 200% */

  /**
   * Font Style Properties
   *
   * Standard font style values for consistent usage.
   */
  --mico-font-style-normal: var(--mico-value-normal);
  --mico-font-style-italic: italic;

  /**
   * Font Variant Numeric Properties
   *
   * Controls numeric font features for enhanced typography.
   */
  --mico-font-variant-numeric-normal: var(--mico-value-normal);
  --mico-font-variant-numeric-ordinal: ordinal;
  --mico-font-variant-numeric-slashed-zero: slashed-zero;
  --mico-font-variant-numeric-lining-nums: lining-nums;
  --mico-font-variant-numeric-oldstyle-nums: oldstyle-nums;
  --mico-font-variant-numeric-proportional-nums: proportional-nums;
  --mico-font-variant-numeric-tabular-nums: tabular-nums;
  --mico-font-variant-numeric-diagonal-fractions: diagonal-fractions;
  --mico-font-variant-numeric-stacked-fractions: stacked-fractions;

  /**
   * Font Variant Ligatures Properties
   *
   * Controls ligature rendering for enhanced typography.
   */
  --mico-font-variant-ligatures-common: common-ligatures;
  --mico-font-variant-ligatures-no-common: no-common-ligatures;
  --mico-font-variant-ligatures-discretionary: discretionary-ligatures;
  --mico-font-variant-ligatures-no-discretionary: no-discretionary-ligatures;
  --mico-font-variant-ligatures-historical: historical-ligatures;
  --mico-font-variant-ligatures-no-historical: no-historical-ligatures;
  --mico-font-variant-ligatures-contextual: contextual;
  --mico-font-variant-ligatures-no-contextual: no-contextual;

  /**
   * Font Variant Caps Properties
   *
   * Controls capitalization rendering for enhanced typography.
   */
  --mico-font-variant-caps-normal: var(--mico-value-normal);
  --mico-font-variant-caps-small-caps: small-caps;
  --mico-font-variant-caps-all-small-caps: all-small-caps;
  --mico-font-variant-caps-petite-caps: petite-caps;
  --mico-font-variant-caps-all-petite-caps: all-petite-caps;
  --mico-font-variant-caps-unicase: unicase;
  --mico-font-variant-caps-titling-caps: titling-caps;

  /**
   * Line Heights
   *
   * Line height controls the vertical spacing between lines of text.
   * - Values below 1.5 are good for headings
   * - Values 1.5-1.7 are ideal for body text for readability
   * - Larger values create more spacing for easier reading
   */
  --mico-lh-xxs: 0.55;       /* Compact (headings) */
  --mico-lh-xs: 1;       /* Compact (headings) */
  --mico-lh-sm: 1.25;    /* Slightly compact */
  --mico-lh-md: 1.5;     /* Standard body text */
  --mico-lh-lg: 1.625;   /* Slightly relaxed */
  --mico-lh-xl: 2;       /* Loose (easy reading) */
  --mico-lh-xxl: 0.75rem; /* Fixed line height for small text */
  --mico-lh-xxxl: 1rem;    /* Fixed line height */

  /**
   * Letter Spacing
   *
   * Controls the horizontal spacing between characters.
   * - Negative values bring letters closer together
   * - Positive values spread letters apart
   * - 'em' units scale with the font size
   */
  --mico-ls-xxs: -0.05em;   /* Tighter spacing */
  --mico-ls-xs: -0.10em;   /* Tighter spacing */
  --mico-ls-sm: -0.025em;  /* Slightly tighter */
  --mico-ls-md: 0em;       /* Normal spacing */
  --mico-ls-lg: 0.025em;   /* Slightly wider */
  --mico-ls-xl: 0.05em;    /* Wider spacing */
  --mico-ls-xxl: 0.1em;    /* Widest spacing */
  --mico-ls-xxxl: 0.2em;    /* Widest spacing */

  /**
   * Text Decoration Properties
   *
   * Controls the appearance of underlines and other text decorations
   */
  --mico-underline-offset-auto: var(--mico-value-auto);
  --mico-underline-offset-0: var(--mico-value-0);
  --mico-underline-offset-xxs: 0.5px;
  --mico-underline-offset-xs: 1px;
  --mico-underline-offset-sm: 2px;
  --mico-underline-offset-md: 0.15em;
  --mico-underline-offset-lg: 8px;
  --mico-underline-offset-xl: 10px;  /* Default distance between text and underline */
  --mico-underline-offset-xxl: 12px;  /* Default distance between text and underline */
  --mico-underline-offset-xxxl: 14px;  /* Default distance between text and underline */

  --mico-decoration-thickness-auto: var(--mico-value-auto);
  --mico-decoration-thickness-from-font: from-font;
  --mico-decoration-thickness-0: 0px;
  --mico-decoration-thickness-1: 1px;
  --mico-decoration-thickness-2: 2px;
  --mico-decoration-thickness-4: 4px;
  --mico-decoration-thickness-8: 8px;
  --mico-underline-thickness: 0.05em; /* Default thickness of the underline */

  --mico-decoration-style-solid: solid;
  --mico-decoration-style-double: double;
  --mico-decoration-style-dotted: dotted;
  --mico-decoration-style-dashed: dashed;
  --mico-decoration-style-wavy: wavy;

  --mico-underline-position-auto: var(--mico-value-auto);
  --mico-underline-position-under: under;
  --mico-underline-position-left: left;
  --mico-underline-position-right: right;

  /**
   * Text Transform Properties
   *
   * Controls text case transformation
   */
  --mico-text-transform-uppercase: uppercase;
  --mico-text-transform-lowercase: lowercase;
  --mico-text-transform-capitalize: capitalize;
  --mico-text-transform-none: var(--mico-value-none);

  /**
   * Text Alignment Properties
   *
   * These variables define text alignment values for consistent usage.
   */
  --mico-text-align-left: left;
  --mico-text-align-center: center;
  --mico-text-align-right: right;
  --mico-text-align-justify: justify;
  --mico-text-align-start: start;
  --mico-text-align-end: end;

  /**
   * Text Overflow Properties
   *
   * Controls how overflowing text is handled
   */
  --mico-text-overflow-ellipsis: ellipsis;
  --mico-text-overflow-clip: clip;

  /**
   * White Space Properties
   *
   * Controls how whitespace is handled
   */
  --mico-whitespace-normal: var(--mico-value-normal);
  --mico-whitespace-nowrap: nowrap;
  --mico-whitespace-pre: pre;
  --mico-whitespace-pre-line: pre-line;
  --mico-whitespace-pre-wrap: pre-wrap;
  --mico-whitespace-break-spaces: break-spaces;



  /**
   * Text Indent Properties
   *
   * Controls the indentation of the first line of text
   */
  --mico-indent-0: var(--mico-value-0);
  --mico-indent-xxs: 0.0325rem;
  --mico-indent-xs: 0.0625rem;
  --mico-indent-sm: 0.25rem;
  --mico-indent-md: 0.5rem;
  --mico-indent-lg: 1rem;
  --mico-indent-xl: 2rem;
  --mico-indent-xxl: 2.5rem;
  --mico-indent-xxxl: 3rem;

  /**
   * Text Shadow Properties
   *
   * Controls text shadow effects
   */
  --mico-text-shadow-none: var(--mico-value-none);
  --mico-text-shadow-xxs: 1px 1px 2px rgba(0, 0, 0, 0.1);
  --mico-text-shadow-xs: 1px 1px 2px rgba(0, 0, 0, 0.1);
  --mico-text-shadow-sm: 2px 2px 4px rgba(0, 0, 0, 0.1);
  --mico-text-shadow-md: 4px 4px 6px rgba(0, 0, 0, 0.1);
  --mico-text-shadow-lg: 6px 6px 8px rgba(0, 0, 0, 0.15);
  --mico-text-shadow-xl: 8px 8px 10px rgba(0, 0, 0, 0.15);
  --mico-text-shadow-xxl: 10px 10px 12px rgba(0, 0, 0, 0.15);
  --mico-text-shadow-xxl: 12px 12px 14px rgba(0, 0, 0, 0.15);

  /**
   * Text Stroke Properties
   *
   * Controls text stroke (outline) effects
   */
  --mico-text-stroke-xxs: 0.5px;
  --mico-text-stroke-xs: 1px;
  --mico-text-stroke-sm: 2px;
  --mico-text-stroke-md: 4px;
  --mico-text-stroke-lg: 6px;
  --mico-text-stroke-xl: 8px;
  --mico-text-stroke-xxl: 10px;
  --mico-text-stroke-xxxl: 12px;

  /**
   * List Style Properties
   *
   * Controls list styling
   */
  --mico-list-style-type-none: var(--mico-value-none);
  --mico-list-style-type-disc: disc;
  --mico-list-style-type-decimal: decimal;
  --mico-list-style-type-square: square;
  --mico-list-style-type-upper-roman: upper-roman;
  --mico-list-style-type-lower-roman: lower-roman;
  --mico-list-style-type-upper-alpha: upper-alpha;
  --mico-list-style-type-lower-alpha: lower-alpha;

  --mico-list-style-position-inside: inside;
  --mico-list-style-position-outside: outside;

  /**
   * Text Direction Properties
   *
   * Controls text direction for internationalization
   */
  --mico-text-direction-ltr: ltr;
  --mico-text-direction-rtl: rtl;

  /**
   * Writing Mode Properties
   *
   * Controls text writing direction
   */
  --mico-writing-mode-horizontal-tb: horizontal-tb;
  --mico-writing-mode-vertical-rl: vertical-rl;
  --mico-writing-mode-vertical-lr: vertical-lr;

  /**
   * Text Orientation Properties
   *
   * Controls text orientation in vertical writing modes
   */
  --mico-text-orientation-mixed: mixed;
  --mico-text-orientation-upright: upright;
  --mico-text-orientation-sideways: sideways;

  /**
   * Hyphens Properties
   *
   * Controls automatic hyphenation
   */
  --mico-hyphens-none: var(--mico-value-none);
  --mico-hyphens-manual: manual;
  --mico-hyphens-auto: var(--mico-value-auto);

  /**
   * Text Align Last Properties
   *
   * Controls alignment of the last line in a block
   */
  --mico-text-align-last-auto: var(--mico-value-auto);
  --mico-text-align-last-start: start;
  --mico-text-align-last-end: end;
  --mico-text-align-last-left: left;
  --mico-text-align-last-right: right;
  --mico-text-align-last-center: center;
  --mico-text-align-last-justify: justify;

  /**
   * Text Justify Properties
   *
   * Controls how justified text is spaced
   */
  --mico-text-justify-auto: var(--mico-value-auto);
  --mico-text-justify-inter-word: inter-word;
  --mico-text-justify-inter-character: inter-character;
  --mico-text-justify-none: var(--mico-value-none);

  /**
   * User Select Properties
   *
   * Controls whether text can be selected
   */
  --mico-user-select-none: var(--mico-value-none);
  --mico-user-select-text: text;
  --mico-user-select-all: all;
  --mico-user-select-auto: var(--mico-value-auto);

  /**
   * Word Break Properties
   *
   * Controls how words break at line endings
   */
  --mico-word-break-normal: var(--mico-value-normal);
  --mico-word-break-break-all: break-all;
  --mico-word-break-keep-all: keep-all;
  --mico-overflow-wrap-normal: var(--mico-value-normal);
  --mico-overflow-wrap-break-word: break-word;

  /* ====================================================================== */
/* SPACING SYSTEM (2px Granular Scale)                                    */
/* ====================================================================== */

/**
 * Spacing Scale
 *
 * A comprehensive and granular spacing system based on a 2px unit.
 * This provides fine-grained control for precise layouts, with variables
 * for every 2px increment up to 400px.
 */
  --mico-size-unit: 2px;            /* Base unit for spacing system */

  /* Core spacing values */
  --mico-size-0: 0;                 /* No spacing */
  --mico-size-1: 1px;               /* Pixel-perfect adjustments */

  /* --- Granular 2px Scale --- */
  --mico-size-2: calc(var(--mico-size-unit) * 1);    /* 2px */
  --mico-size-4: calc(var(--mico-size-unit) * 2);    /* 4px */
  --mico-size-6: calc(var(--mico-size-unit) * 3);    /* 6px */
  --mico-size-8: calc(var(--mico-size-unit) * 4);    /* 8px */
  --mico-size-10: calc(var(--mico-size-unit) * 5);   /* 10px */
  --mico-size-12: calc(var(--mico-size-unit) * 6);   /* 12px */
  --mico-size-14: calc(var(--mico-size-unit) * 7);   /* 14px */
  --mico-size-16: calc(var(--mico-size-unit) * 8);   /* 16px */
  --mico-size-18: calc(var(--mico-size-unit) * 9);   /* 18px */
  --mico-size-20: calc(var(--mico-size-unit) * 10);  /* 20px */
  --mico-size-22: calc(var(--mico-size-unit) * 11);  /* 22px */
  --mico-size-24: calc(var(--mico-size-unit) * 12);  /* 24px */
  --mico-size-26: calc(var(--mico-size-unit) * 13);  /* 26px */
  --mico-size-28: calc(var(--mico-size-unit) * 14);  /* 28px */
  --mico-size-30: calc(var(--mico-size-unit) * 15);  /* 30px */
  --mico-size-32: calc(var(--mico-size-unit) * 16);  /* 32px */
  --mico-size-34: calc(var(--mico-size-unit) * 17);  /* 34px */
  --mico-size-36: calc(var(--mico-size-unit) * 18);  /* 36px */
  --mico-size-38: calc(var(--mico-size-unit) * 19);  /* 38px */
  --mico-size-40: calc(var(--mico-size-unit) * 20);  /* 40px */
  --mico-size-42: calc(var(--mico-size-unit) * 21);  /* 42px */
  --mico-size-44: calc(var(--mico-size-unit) * 22);  /* 44px */
  --mico-size-46: calc(var(--mico-size-unit) * 23);  /* 46px */
  --mico-size-48: calc(var(--mico-size-unit) * 24);  /* 48px */
  --mico-size-50: calc(var(--mico-size-unit) * 25);  /* 50px */
  --mico-size-52: calc(var(--mico-size-unit) * 26);  /* 52px */
  --mico-size-54: calc(var(--mico-size-unit) * 27);  /* 54px */
  --mico-size-56: calc(var(--mico-size-unit) * 28);  /* 56px */
  --mico-size-58: calc(var(--mico-size-unit) * 29);  /* 58px */
  --mico-size-60: calc(var(--mico-size-unit) * 30);  /* 60px */
  --mico-size-62: calc(var(--mico-size-unit) * 31);  /* 62px */
  --mico-size-64: calc(var(--mico-size-unit) * 32);  /* 64px */
  --mico-size-66: calc(var(--mico-size-unit) * 33);  /* 66px */
  --mico-size-68: calc(var(--mico-size-unit) * 34);  /* 68px */
  --mico-size-70: calc(var(--mico-size-unit) * 35);  /* 70px */
  --mico-size-72: calc(var(--mico-size-unit) * 36);  /* 72px */
  --mico-size-74: calc(var(--mico-size-unit) * 37);  /* 74px */
  --mico-size-76: calc(var(--mico-size-unit) * 38);  /* 76px */
  --mico-size-78: calc(var(--mico-size-unit) * 39);  /* 78px */
  --mico-size-80: calc(var(--mico-size-unit) * 40);  /* 80px */
  --mico-size-82: calc(var(--mico-size-unit) * 41);  /* 82px */
  --mico-size-84: calc(var(--mico-size-unit) * 42);  /* 84px */
  --mico-size-86: calc(var(--mico-size-unit) * 43);  /* 86px */
  --mico-size-88: calc(var(--mico-size-unit) * 44);  /* 88px */
  --mico-size-90: calc(var(--mico-size-unit) * 45);  /* 90px */
  --mico-size-92: calc(var(--mico-size-unit) * 46);  /* 92px */
  --mico-size-94: calc(var(--mico-size-unit) * 47);  /* 94px */
  --mico-size-96: calc(var(--mico-size-unit) * 48);  /* 96px */
  --mico-size-98: calc(var(--mico-size-unit) * 49);  /* 98px */
  --mico-size-100: calc(var(--mico-size-unit) * 50); /* 100px */
  /* ... this pattern continues ... */
  --mico-size-102: calc(var(--mico-size-unit) * 51);  /* 102px */
  --mico-size-104: calc(var(--mico-size-unit) * 52);  /* 104px */
  --mico-size-106: calc(var(--mico-size-unit) * 53);  /* 106px */
  --mico-size-108: calc(var(--mico-size-unit) * 54);  /* 108px */
  --mico-size-110: calc(var(--mico-size-unit) * 55);  /* 110px */
  --mico-size-112: calc(var(--mico-size-unit) * 56);  /* 112px */
  --mico-size-114: calc(var(--mico-size-unit) * 57);  /* 114px */
  --mico-size-116: calc(var(--mico-size-unit) * 58);  /* 116px */
  --mico-size-118: calc(var(--mico-size-unit) * 59);  /* 118px */
  --mico-size-120: calc(var(--mico-size-unit) * 60);  /* 120px */
  --mico-size-122: calc(var(--mico-size-unit) * 61);  /* 122px */
  --mico-size-124: calc(var(--mico-size-unit) * 62);  /* 124px */
  --mico-size-126: calc(var(--mico-size-unit) * 63);  /* 126px */
  --mico-size-128: calc(var(--mico-size-unit) * 64);  /* 128px */
  --mico-size-130: calc(var(--mico-size-unit) * 65);  /* 130px */
  --mico-size-132: calc(var(--mico-size-unit) * 66);  /* 132px */
  --mico-size-134: calc(var(--mico-size-unit) * 67);  /* 134px */
  --mico-size-136: calc(var(--mico-size-unit) * 68);  /* 136px */
  --mico-size-138: calc(var(--mico-size-unit) * 69);  /* 138px */
  






  /* ... pattern continues up to 400 ... */
  --mico-size-380: calc(var(--mico-size-unit) * 190); /* 380px */
  --mico-size-382: calc(var(--mico-size-unit) * 191); /* 382px */
  --mico-size-384: calc(var(--mico-size-unit) * 192); /* 384px */
  --mico-size-386: calc(var(--mico-size-unit) * 193); /* 386px */
  --mico-size-388: calc(var(--mico-size-unit) * 194); /* 388px */
  --mico-size-390: calc(var(--mico-size-unit) * 195); /* 390px */
  --mico-size-392: calc(var(--mico-size-unit) * 196); /* 392px */
  --mico-size-394: calc(var(--mico-size-unit) * 197); /* 394px */
  --mico-size-396: calc(var(--mico-size-unit) * 198); /* 396px */
  --mico-size-398: calc(var(--mico-size-unit) * 199); /* 398px */
  --mico-size-400: calc(var(--mico-size-unit) * 200); /* 400px */

  /**
   * Main & Section Fluid Spacing Gutter
   *
   * Responsive spacing that adapts to viewport size.
   * Uses clamp() to create spacing that scales between a minimum and maximum value.
   *
   * Format: clamp(min-size, viewport-based-size, max-size)
   */
  /* --mico-size-fluid-xxs: clamp(var(--mico-size-8), 3vw, var(--mico-size-24));
  --mico-size-fluid-xs: clamp(var(--mico-size-16), 3vw, var(--mico-size-32));
  --mico-size-fluid-sm: clamp(var(--mico-size-16), 4vw, var(--mico-size-56));
  --mico-size-fluid-md: clamp(var(--mico-size-16), 6vw, var(--mico-size-80));
  --mico-size-fluid-lg: clamp(var(--mico-size-16), 8vw, var(--mico-size-100));
  --mico-size-fluid-xl: clamp(var(--mico-size-16), 10vw, var(--mico-size-128));
  --mico-size-fluid-xxl: clamp(var(--mico-size-16), 12vw, var(--mico-size-192));
  --mico-size-fluid-xxxl: clamp(var(--mico-size-16), 12vw, var(--mico-size-224)); */

/* ========================================================================== */
/* FLUID SYSTEM ENGINE                                                        */
/* ========================================================================== */
/*
 * DO NOT EDIT THIS SECTION.
 * This engine holds the global configuration and the master calculation
 * for creating all fluid values (typography, spacing, etc.).
*/
  /* --- Global Configuration --- */
  /* Set the viewport widths where fluid scaling should start and stop. */
  --fluid-min-vw: 320;  /* in pixels */
  --fluid-max-vw: 1600; /* in pixels */

  /* --- Engine Internals (Do Not Modify) --- */
  /* These variables are used by the master formula. */
  --fluid-screen-range: calc(var(--fluid-max-vw) - var(--fluid-min-vw));
  --fluid-rem-factor: calc((100vw - var(--fluid-min-vw) * 1px) / var(--fluid-screen-range));



/* ========================================================================== */
/* USER-EDITABLE FLUID VALUES                                                 */
/* ========================================================================== */
/*
 * This is the ONLY section to edit for fluid values.
 * For each variable, simply choose your min and max values and plug them
 * into the master clamp() formula.
*/
/**
   * Main & Section Fluid Spacing Gutter
   * Each variable defines a min/max value and uses the central engine to calculate the fluid behavior.
   */

  /* Min: 8px | Max: 16px */
  --mico-size-fluid-xxs: clamp(0.5rem, calc(0.5rem + (1 - 0.5) * var(--fluid-rem-factor)), 1rem);

  /* Min: 16px | Max: 24px */
  --mico-size-fluid-xs: clamp(1rem, calc(1rem + (1.5 - 1) * var(--fluid-rem-factor)), 1.5rem);

  /* Min: 24px | Max: 44px */
  --mico-size-fluid-sm: clamp(1.5rem, calc(1.5rem + (2.75 - 1.5) * var(--fluid-rem-factor)), 2.75rem);
  
  /* Min: 44px | Max: 68px */
  --mico-size-fluid-md: clamp(2.75rem, calc(2.75rem + (4.25 - 2.75) * var(--fluid-rem-factor)), 4.25rem);

  /* Min: 68px | Max: 96px */
  --mico-size-fluid-lg: clamp(4.25rem, calc(4.25rem + (6 - 4.25) * var(--fluid-rem-factor)), 6rem);

  /* Min: 96px | Max: 128px */
  --mico-size-fluid-xl: clamp(6rem, calc(6rem + (8 - 6) * var(--fluid-rem-factor)), 8rem);

  /* Min: 128px | Max: 164px */
  --mico-size-fluid-xxl: clamp(8rem, calc(8rem + (10.25 - 8) * var(--fluid-rem-factor)), 10.25rem);
  
  /* Min: 164px | Max: 204px */
  --mico-size-fluid-xxxl: clamp(10.25rem, calc(10.25rem + (12.75 - 10.25) * var(--fluid-rem-factor)), 12.75rem);










  /* ====================================================================== */
  /* BORDER SYSTEM                                                          */
  /* ====================================================================== */

  /**
   * Border Radius
   *
   * Controls the roundness of element corners.
   * Consistent border radius values create a cohesive design language.
   */
  --mico-rounded-0: 0px;            /* No rounding */
  --mico-rounded-xxs: 1px;            /* Barely visible rounding */
  --mico-rounded-xs: 2px;            /* Barely visible rounding */
  --mico-rounded-sm: 4px;            /* Subtle rounding */
  --mico-rounded-md: 8px;            /* Standard rounding */
  --mico-rounded-lg: 12px;            /* Prominent rounding */
  --mico-rounded-xl: 16px;           /* Very rounded corners */
  --mico-rounded-xxl: 20px;          /* Extra rounded corners */
  --mico-rounded-xxxl: 24px;          /* Extra rounded corners */
  --mico-rounded-full: 9999px;       /* Fully rounded (circles/pills) */

  /**
   * Border Styles
   *
   * Standard CSS border styles for consistent usage.
   * These variables make it easier to maintain consistent border styles.
   */
   
  --mico-border-0: 0;
  --mico-border-none: none;
  --mico-border-solid: solid;
  --mico-border-dashed: dashed;
  --mico-border-dotted: dotted;
  --mico-border-double: double;
  --mico-border-groove: groove;
  --mico-border-ridge: ridge;
  --mico-border-inset: inset;
  --mico-border-outset: outset;

  /**
   * Border Widths
   *
   * Standard border thickness values.
   * These follow the same scale pattern as other properties.
   */
  --mico-border-width-0: 0px;       /* No border */
  --mico-border-width-xxs: 1px;       /* Thin border (standard) */
  --mico-border-width-xs: 2px;       /* Thin border (standard) */
  --mico-border-width-sm: 4px;       /* Medium border */
  --mico-border-width-md: 8px;       /* Thick border */
  --mico-border-width-lg: 12px;       /* Very thick border */
  --mico-border-width-xl: 16px;       /* Very thick border */
  --mico-border-width-xxl: 20px;       /* Very thick border */
  --mico-border-width-xxxl: 24px;       /* Very thick border */
  

  /**
   * Outline Properties
   *
   * These variables define outline styles for accessibility and focus states.
   */
  --mico-outline-width-none: none;      /* No outline */
  --mico-outline-width-0: none;      /* No outline */
  --mico-outline-width-xxs: 1px;      /* Thin outline */
  --mico-outline-width-xs: 2px;      /* Thin outline */
  --mico-outline-width-sm: 4px;      /* Medium outline */
  --mico-outline-width-md: 8px;      /* Thick outline */
  --mico-outline-width-lg: 12px;      /* Very thick outline */
  --mico-outline-width-xl: 16px;      /* Very thick outline */
  --mico-outline-width-xxl: 20px;      /* Very thick outline */
  --mico-outline-width-xxxl: 24px;      /* Very thick outline */

  --mico-outline-style-none: none;  /* No outline */
  --mico-outline-style-solid: solid; /* Solid outline */
  --mico-outline-style-dashed: dashed; /* Dashed outline */
  --mico-outline-style-dotted: dotted; /* Dotted outline */
  --mico-outline-style-double: double; /* Double outline */

  --mico-outline-offset-0: 0px;     /* No offset */
  --mico-outline-offset-xxs: 1;     /* Small offset */
  --mico-outline-offset-xs: 2px;     /* Small offset */
  --mico-outline-offset-sm: 4px;     /* Medium offset */
  --mico-outline-offset-md: 8px;     /* Large offset */
  --mico-outline-offset-lg: 12px;     /* Extra large offset */
  --mico-outline-offset-xl: 16px;     /* Extra large offset */
  --mico-outline-offset-xxl: 20px;     /* Extra large offset */
  --mico-outline-offset-xxxl: 24px;     /* Extra large offset */

  /**
   * Divide Properties
   *
   * These variables define border styles for dividing child elements.
   */
  --mico-divide-width-0: 0px;       /* No divide border */
  --mico-divide-width-1: 1px;       /* Thin divide border */
  --mico-divide-width-2: 2px;       /* Medium divide border */
  --mico-divide-width-4: 4px;       /* Thick divide border */
  --mico-divide-width-8: 8px;       /* Very thick divide border */

  /* ====================================================================== */
  /* SHADOW SYSTEM                                                          */
  /* ====================================================================== */

  /**
   * Box Shadows
   *
   * Creates depth and elevation in the interface.
   * Different shadow intensities represent different elevation levels.
   *
   * Light mode shadows use black with opacity for a subtle effect.
   * Dark mode shadows use white with opacity for a subtle effect.
   */
--mico-shadow-primary: 0px 4.5px 4px -2.8px hsl(from var(--mico-color-primary-3xlight) h calc(s * 0.55) l);
--mico-shadow-secondary: 0px 4.5px 4px -2.8px hsl(from var(--mico-color-secondary-3xlight) h calc(s * 0.55) l);
--mico-shadow-accent: 0px 4.5px 4px -2.8px hsl(from var(--mico-color-accent-3xlight) h calc(s * 0.55) l);
--mico-shadow-success: 0px 4.5px 4px -2.8px hsl(from var(--mico-color-success-3xlight) h calc(s * 0.55) l);
--mico-shadow-error: 0px 4.5px 4px -2.8px hsl(from var(--mico-color-error-3xlight) h calc(s * 0.55) l);
--mico-shadow-warning: 0px 4.5px 4px -2.8px hsl(from var(--mico-color-warning-3xlight) h calc(s * 0.55) l);
--mico-shadow-info: 0px 4.5px 4px -2.8px hsl(from var(--mico-color-info-3xlight) h calc(s * 0.55) l);

--mico-shadow-hover-primary: 0px 4.5px 4px -3.8px hsl(from var(--mico-color-primary) h calc(s * 0.9) l) !important; 
--mico-shadow-hover-secondary: 0px 4.5px 4px -3.8px hsl(from var(--mico-color-secondary) h calc(s * 0.9) l) !important; 
--mico-shadow-hover-accent: 0px 4.5px 4px -3.8px hsl(from var(--mico-color-accent) h calc(s * 0.9) l) !important; 
--mico-shadow-hover-success: 0px 4.5px 4px -3.8px hsl(from var(--mico-color-success) h calc(s * 0.9) l) !important;
--mico-shadow-hover-error: 0px 4.5px 4px -3.8px hsl(from var(--mico-color-error) h calc(s * 0.9) l) !important;
--mico-shadow-hover-warning: 0px 4.5px 4px -3.8px hsl(from var(--mico-color-warning) h calc(s * 0.9) l) !important;
  
--mico-shadow-focus-primary: 0px 4.6px 4px -3.8px hsl(from var(--mico-color-primary) h calc(s * 0.8) l) !important; 
--mico-shadow-focus-secondary: 0px 4.6px 4px -3.8px hsl(from var(--mico-color-secondary) h calc(s * 0.8) l) !important; 
--mico-shadow-focus-accent: 0px 4.6px 4px -3.8px hsl(from var(--mico-color-accent) h calc(s * 0.8) l) !important; 
--mico-shadow-focus-success: 0px 4.6px 4px -3.8px hsl(from var(--mico-color-success) h calc(s * 0.8) l) !important;
--mico-shadow-focus-error: 0px 4.6px 4px -3.8px hsl(from var(--mico-color-error) h calc(s * 0.8) l) !important;
--mico-shadow-focus-warning: 0px 4.6px 4px -3.8px hsl(from var(--mico-color-warning) h calc(s * 0.8) l) !important;
  
--mico-shadow-active-primary: 0px 4.8px 4px -2.8px hsl(from var(--mico-color-primary) h calc(s * 0.7) l) !important; 
--mico-shadow-active-secondary: 0px 4.8px 4px -2.8px hsl(from var(--mico-color-secondary) h calc(s * 0.7) l) !important; 
--mico-shadow-active-accent: 0px 4.8px 4px -2.8px hsl(from var(--mico-color-accent) h calc(s * 0.7) l) !important; 
--mico-shadow-active-success: 0px 4.8px 4px -2.8px hsl(from var(--mico-color-success) h calc(s * 0.7) l) !important;
--mico-shadow-active-error: 0px 4.8px 4px -2.8px hsl(from var(--mico-color-error) h calc(s * 0.7) l) !important;
--mico-shadow-active-warning: 0px 4.8px 4px -2.8px hsl(from var(--mico-color-warning) h calc(s * 0.7) l) !important;

  
/* Light Mode Shadows */
  --mico-shadow-none: var(--mico-value-none);
  --mico-shadow-dark: 0 2px 2px rgba(0, 0, 0, 0.05);  /* Subtle shadow */
  --mico-shadow-2xdark: 0 2px 4px rgba(0, 0, 0, 0.07);  /* Slightly stronger shadow */
  --mico-shadow-3xdark: 0 4px 6px rgba(0, 0, 0, 0.10);   /* Medium shadow */
  --mico-shadow-4xdark: 0 10px 15px rgba(0, 0, 0, 0.12); /* Large shadow */
  --mico-shadow-5xdark: 0 20px 25px rgba(0, 0, 0, 0.15); /* Extra large shadow */
  --mico-shadow-6xdark: 0 24px 32px rgba(0, 0, 0, 0.18); /* Extra extra large shadow */
  --mico-shadow-7xdark: 0 32px 40px rgba(0, 0, 0, 0.22); /* Ultra large shadow */
  --mico-shadow-8xdark: 0 40px 56px rgba(0, 0, 0, 0.28); /* Maximum shadow */

  /* Inset Shadows (for pressed/inset effects) */
  --mico-shadow-inset-none: inset var(--mico-value-none);
  --mico-shadow-inset-dark: inset 0 2px 2px rgba(0, 0, 0, 0.05);  /* Subtle shadow */
  --mico-shadow-inset-2xdark: inset 0 2px 4px rgba(0, 0, 0, 0.07); /* Slightly stronger shadow */
  --mico-shadow-inset-3xdark: inset 0 4px 6px rgba(0, 0, 0, 0.10); /* Medium shadow */
  --mico-shadow-inset-4xdark: inset 0 10px 15px rgba(0, 0, 0, 0.12); /* Large shadow */
  --mico-shadow-inset-5xdark: inset 0 20px 25px rgba(0, 0, 0, 0.15); /* Extra large shadow */
  --mico-shadow-inset-6xdark: inset 0 24px 32px rgba(0, 0, 0, 0.18); /* Extra extra large shadow */
  --mico-shadow-inset-7xdark: inset 0 32px 40px rgba(0, 0, 0, 0.22); /* Ultra large shadow */
  --mico-shadow-inset-8xdark: inset 0 40px 56px rgba(0, 0, 0, 0.28); /* Maximum shadow */

  /* Focus Shadow for accessibility */
  --mico-shadow-focus: 0 0 0 3px rgba(66, 153, 225, 0.5);

  /**
   * Media Queries for Adaptive Shadows
   *
   * These media queries automatically adjust shadow styles based on user preferences.
   * - Dark mode: Uses lighter shadows on dark backgrounds
   * - High contrast mode: Uses more visible focus indicators
   */
  /* Dark Mode Shadows */
  --mico-shadow-light: 0 1px 2px rgba(255, 255, 255, 0.05); /* Subtle light shadow */
  --mico-shadow-2xlight: 0 2px 4px rgba(255, 255, 255, 0.07); /* Slightly stronger light shadow */
  --mico-shadow-3xlight: 0 4px 6px rgba(255, 255, 255, 0.10); /* Medium light shadow */
  --mico-shadow-4xlight: 0 10px 15px rgba(255, 255, 255, 0.12); /* Large light shadow */
  --mico-shadow-5xlight: 0 20px 25px rgba(255, 255, 255, 0.15); /* Extra large light shadow */
  --mico-shadow-6xlight: 0 24px 32px rgba(255, 255, 255, 0.18); /* Extra extra large light shadow */
  --mico-shadow-7xlight: 0 32px 40px rgba(255, 255, 255, 0.22); /* Ultra large light shadow */
  --mico-shadow-8xlight: 0 40px 56px rgba(255, 255, 255, 0.28); /* Maximum light shadow */

  --mico-shadow-inset-light: inset 0 1px 2px rgba(255, 255, 255, 0.05);
  --mico-shadow-inset-2xlight: inset 0 2px 4px rgba(255, 255, 255, 0.07);
  --mico-shadow-inset-3xlight: inset 0 4px 6px rgba(255, 255, 255, 0.10);
  --mico-shadow-inset-4xlight: inset 0 10px 15px rgba(255, 255, 255, 0.12);
  --mico-shadow-inset-5xlight: inset 0 20px 25px rgba(255, 255, 255, 0.15);
  --mico-shadow-inset-6xlight: inset 0 24px 32px rgba(255, 255, 255, 0.18);
  --mico-shadow-inset-7xlight: inset 0 32px 40px rgba(255, 255, 255, 0.22);
  --mico-shadow-inset-8xlight: inset 0 40px 56px rgba(255, 255, 255, 0.28);

  --mico-shadow-focus: 0 0 0 3px rgba(191, 219, 254, 0.6);

  /* High Contrast Mode Shadows */
  @media (prefers-contrast: high) {
    --mico-shadow-focus: 0 0 0 4px rgba(0, 0, 0, 1);
    --mico-shadow-contrast-sm: 0 0 0 1px currentColor;
    --mico-shadow-contrast-md: 0 0 0 2px currentColor;
    --mico-shadow-contrast-lg: 0 0 0 3px currentColor;
    --mico-shadow-contrast-xl: 0 0 0 4px currentColor;
  }

  /* ====================================================================== */
  /* LAYOUT SYSTEM                                                          */
  /* ====================================================================== */

  /**
   * Layout Properties
   *
   * These variables define common layout values for consistent usage.
   * Using variables for these properties ensures consistency across the codebase.
   */

  /**
   * Position Properties
   *
   * These variables define CSS position values for consistent usage.
   * Position determines how an element is positioned in the document flow.
   */
  --mico-position-static: static;     /* Default positioning in document flow */
  --mico-position-relative: relative; /* Positioned relative to normal position */
  --mico-position-absolute: absolute; /* Positioned relative to nearest positioned ancestor */
  --mico-position-fixed: fixed;       /* Positioned relative to viewport */
  --mico-position-sticky: sticky;     /* Positioned based on scroll position */

  /**
   * Display Properties
   *
   * These variables define CSS display values for consistent usage.
   * Display determines how an element is rendered in the layout.
   */
  --mico-display-block: block;           /* Element generates a block box */
  --mico-display-inline: inline;         /* Element generates an inline box */
  --mico-display-inline-block: inline-block; /* Inline-level block container */
  --mico-display-flex: flex;             /* Flexible box layout */
  --mico-display-inline-flex: inline-flex; /* Inline-level flex container */
  --mico-display-grid: grid;             /* Grid layout */
  --mico-display-none: none;             /* Element is not displayed */

  /**
   * Box Model Properties
   *
   * These variables define box model behavior for consistent usage.
   */
  --mico-box-sizing-border: border-box;  /* Width/height includes padding and border */
  --mico-box-sizing-content: content-box; /* Width/height excludes padding and border */
  --mico-box-decoration-slice: slice;    /* Background doesn't extend across fragments */
  --mico-box-decoration-clone: clone;    /* Background extends across fragments */

  /**
   * Overflow Properties
   *
   * These variables define how content that overflows the element's box is handled.
   */
  --mico-overflow-auto: auto;           /* Add scrollbars when needed */
  --mico-overflow-hidden: hidden;       /* Clip overflow content */
  --mico-overflow-visible: visible;     /* Content not clipped, may overflow */
  --mico-overflow-scroll: scroll;       /* Always show scrollbars */
  --mico-overscroll-auto: auto;         /* Default overscroll behavior */
  --mico-overscroll-contain: contain;   /* Prevent scroll chaining */
  --mico-overscroll-none: none;         /* Prevent overscroll effects */

  /**
   * Aspect Ratio Properties
   *
   * These variables define common aspect ratios for responsive elements.
   * Useful for maintaining proportional dimensions for images, videos, etc.
   */
  --mico-aspect-ratio-square: 1 / 1;        /* 1:1 ratio (square) */
  --mico-aspect-ratio-video: 16 / 9;        /* 16:9 ratio (standard video) */
  --mico-aspect-ratio-portrait: 3 / 4;      /* 3:4 ratio (portrait) */
  --mico-aspect-ratio-landscape: 4 / 3;     /* 4:3 ratio (landscape) */
  --mico-aspect-ratio-widescreen: 21 / 9;   /* 21:9 ratio (ultrawide) */
  --mico-aspect-ratio-golden: 1.618 / 1;    /* Golden ratio (aesthetically pleasing) */

  /**
   * Float and Clear Properties
   *
   * These variables define float and clear values for consistent usage.
   * Float allows elements to be placed to the left or right of their container.
   */
  --mico-float-left: left;              /* Float element to the left */
  --mico-float-right: right;            /* Float element to the right */
  --mico-float-none: none;              /* Do not float element */
  --mico-clear-left: left;              /* Clear left floats */
  --mico-clear-right: right;            /* Clear right floats */
  --mico-clear-both: both;              /* Clear both left and right floats */

  /**
   * Object Fit Properties
   *
   * These variables define how replaced elements (like images) should be resized.
   */
  --mico-object-fit-contain: contain;    /* Preserve aspect ratio, fit within box */
  --mico-object-fit-cover: cover;        /* Fill box, may crop image */
  --mico-object-fit-fill: fill;          /* Stretch to fill box */
  --mico-object-fit-scale-down: scale-down; /* Smaller of contain or none */
  --mico-object-position-center: center; /* Center the object within its box */

  /**
   * Visibility and Isolation Properties
   *
   * These variables define visibility and stacking context behavior.
   */
  --mico-visibility-visible: visible;    /* Element is visible */
  --mico-visibility-hidden: hidden;      /* Element is hidden but takes up space */
  --mico-visibility-collapse: collapse;  /* Element is hidden (for table rows/columns) */
  --mico-isolation-isolate: isolate;     /* Create new stacking context */
  --mico-isolation-auto: auto;           /* Default stacking context behavior */

  /**
   * Positioning Properties
   *
   * These variables define common inset values for positioned elements.
   */
  --mico-inset-0: 0;                     /* No offset from container edges */
  --mico-inset-auto: auto;               /* Automatic positioning */

  /* ====================================================================== */
  /* FLEXBOX SYSTEM                                                          */
  /* ====================================================================== */

  /**
   * Flexbox Properties
   *
   * These variables define common flexbox values for consistent usage.
   * Flexbox is a one-dimensional layout method for arranging items.
   */

  /* Flex Direction */
  --mico-flex-row: row;               /* Items arranged in a row */
  --mico-flex-row-reverse: row-reverse; /* Items arranged in a row, reversed */
  --mico-flex-col: column;            /* Items arranged in a column */
  --mico-flex-col-reverse: column-reverse; /* Items arranged in a column, reversed */

  /* Flex Wrap */
  --mico-flex-wrap: wrap;             /* Items wrap to multiple lines */
  --mico-flex-nowrap: nowrap;         /* Items forced into a single line */
  --mico-flex-wrap-reverse: wrap-reverse; /* Items wrap to multiple lines, reversed */

  /* Justify Content (main axis) */
  --mico-justify-start: flex-start;   /* Items packed at start of container */
  --mico-justify-end: flex-end;       /* Items packed at end of container */
  --mico-justify-center: center;      /* Items centered in container */
  --mico-justify-between: space-between; /* Items evenly distributed with space between */
  --mico-justify-around: space-around; /* Items evenly distributed with space around */
  --mico-justify-evenly: space-evenly; /* Items evenly distributed with equal space */

  /* Align Items (cross axis) */
  --mico-items-start: flex-start;     /* Items aligned at start of cross axis */
  --mico-items-end: flex-end;         /* Items aligned at end of cross axis */
  --mico-items-center: center;        /* Items centered on cross axis */
  --mico-items-baseline: baseline;    /* Items aligned by text baseline */
  --mico-items-stretch: stretch;      /* Items stretched to fill container */

  /* ====================================================================== */
  /* GRID SYSTEM                                                            */
  /* ====================================================================== */
  /**
   * Grid Auto Properties
   *
   * These variables define how grid items are automatically placed and sized.
   * Auto-fit and auto-fill create responsive layouts without media queries.
   */
  --mico-grid-auto-columns: auto;      /* Automatically sized columns */
  --mico-grid-auto-fit: repeat(auto-fit, minmax(min(var(--mico-grid-min-column-width), 100%), 1fr));    /* Expands items to fill available space */
  --mico-grid-auto-fill: repeat(auto-fill, minmax(min(var(--mico-grid-min-column-width), 100%), 1fr));  /* Creates as many tracks as possible */

  /**
   * Grid Placement Properties
   *
   * These variables define how grid items are placed within the grid container.
   * They control both individual items and groups of items.
   */
  --mico-place-items-start: start;    /* Items placed at start of their area */
  --mico-place-items-end: end;        /* Items placed at end of their area */
  --mico-place-items-center: center;  /* Items placed at center of their area */
  --mico-place-items-stretch: stretch; /* Items stretched to fill their area */

  --mico-place-content-start: start;    /* Content placed at start of grid */
  --mico-place-content-end: end;        /* Content placed at end of grid */
  --mico-place-content-center: center;  /* Content placed at center of grid */
  --mico-place-content-stretch: stretch; /* Content stretched to fill grid */
  --mico-place-content-around: space-around; /* Content evenly distributed with space around */
  --mico-place-content-between: space-between; /* Content evenly distributed with space between */
  --mico-place-content-evenly: space-evenly;   /* Content evenly distributed with equal space */

/* Grid Item Alignment (for individual items) */
--mico-align-self-start: start;         /* Item aligned at start of grid area */
--mico-align-self-end: end;             /* Item aligned at end of grid area */
--mico-align-self-center: center;       /* Item aligned at center of grid area */
--mico-align-self-stretch: stretch;     /* Item stretched to fill grid area */

/* Grid Item Justification (for individual items) */
--mico-justify-self-start: start;       /* Item justified at start of grid area */
--mico-justify-self-end: end;           /* Item justified at end of grid area */
--mico-justify-self-center: center;     /* Item justified at center of grid area */
--mico-justify-self-stretch: stretch;   /* Item stretched to fill grid area */

  /**
   * Grid Properties
   *
   * These variables define common grid layout values for consistent usage.
   * CSS Grid is a two-dimensional layout system for complex layouts.
   */

  /* Grid Configuration */
  --mico-grid-column-count: 12;       /* Default number of columns */
  --mico-grid-min-column-width: 250px; /* Minimum column width for responsive grids */
  --mico-grid-row-count: 1;           /* Default number of rows */
  --mico-grid-min-row-height: 100px;  /* Minimum row height for responsive grids */

  /* Grid Item Placement */
  --mico-column-span: 1;              /* Default column span for grid items */
  --mico-row-span: 1;                 /* Default row span for grid items */
  --mico-min-column-width: 0;         /* Minimum width for auto columns */
  --mico-max-column-width: 1fr;       /* Maximum width for auto columns */
  --mico-min-row-height: 0;           /* Minimum height for auto rows */
  --mico-max-row-height: 1fr;         /* Maximum height for auto rows */

  /* Grid Templates */
  --mico-grid-cols: repeat(var(--mico-grid-column-count, 12), minmax(0, 1fr)); /* Equal columns */
  --mico-grid-cols-auto-fit: repeat(auto-fit, minmax(var(--mico-grid-min-column-width, 200px), 1fr)); /* Responsive columns */
  --mico-grid-rows: repeat(var(--mico-grid-row-count, 1), minmax(0, 1fr)); /* Equal rows */

  /* Grid Item Placement */
  --mico-col-span: span var(--mico-column-span, 1); /* Column span for grid items */
  --mico-row-span: span var(--mico-row-span, 1);    /* Row span for grid items */

  /* Grid Flow */
  --mico-grid-flow-row: row;          /* Grid auto-placement by row */
  --mico-grid-flow-col: column;       /* Grid auto-placement by column */
  --mico-grid-flow-dense: dense;      /* Dense packing algorithm */

  /* Grid Auto Columns and Rows */
  --mico-auto-cols: minmax(var(--mico-min-column-width, 0), var(--mico-max-column-width, 1fr));
  --mico-auto-rows: minmax(var(--mico-min-row-height, 0), var(--mico-max-row-height, 1fr));

  /* Grid Gap */
  --mico-gap-xs: var(--mico-size-4);  /* Extra small gap */
  --mico-gap-sm: var(--mico-size-8);  /* Small gap */
  --mico-gap-md: var(--mico-size-16); /* Medium gap (default) */
  --mico-gap-lg: var(--mico-size-24); /* Large gap */
  --mico-gap-xl: var(--mico-size-32); /* Extra large gap */

  /* ====================================================================== */
  /* BACKGROUND SYSTEM                                                       */
  /* ====================================================================== */

  /**
   * Background Properties
   *
   * These variables define common background property values for consistent usage.
   * Background properties control how backgrounds are displayed.
   */

  /* Background Repeat */
  --mico-bg-none: none;               /* No background image */
  --mico-bg-repeat: repeat;           /* Repeat in both directions */
  --mico-bg-no-repeat: no-repeat;     /* No repetition */
  --mico-bg-repeat-x: repeat-x;       /* Repeat horizontally only */
  --mico-bg-repeat-y: repeat-y;       /* Repeat vertically only */

  /* Background Attachment */
  --mico-bg-fixed: fixed;             /* Fixed to viewport */
  --mico-bg-local: local;             /* Scrolls with content */
  --mico-bg-scroll: scroll;           /* Scrolls with element */

  /* Background Clip */
  --mico-bg-clip-border: border-box;  /* Extend to outer border edge */
  --mico-bg-clip-padding: padding-box; /* Extend to outer padding edge */
  --mico-bg-clip-content: content-box; /* Extend to content edge */

  /* ====================================================================== */
  /* FILTER SYSTEM                                                          */
  /* ====================================================================== */

  /**
   * Filter Properties
   *
   * These variables define CSS filter effects for visual manipulation.
   * Filters can be combined to create complex visual effects.
   */
  --mico-filter-blur: blur(8px);           /* Blurs the element */
  --mico-filter-brightness: brightness(1.5); /* Adjusts brightness */
  --mico-filter-contrast: contrast(1.2);    /* Adjusts contrast */
  --mico-filter-grayscale: grayscale(100%); /* Converts to grayscale */
  --mico-filter-hue-rotate: hue-rotate(90deg); /* Shifts colors */
  --mico-filter-invert: invert(100%);      /* Inverts colors */
  --mico-filter-saturate: saturate(2);     /* Adjusts color saturation */
  --mico-filter-sepia: sepia(100%);        /* Applies sepia tone */

  /* ====================================================================== */
  /* OPACITY SYSTEM                                                          */
  /* ====================================================================== */

  /**
   * Opacity Properties
   *
   * These variables define standard opacity values for consistent usage.
   * Opacity controls the transparency of elements.
   */
  --mico-opacity-0p: 0;    
  --mico-opacity-10p: 0.10;               
  --mico-opacity-20p: 0.20; 
  --mico-opacity-30p: 0.30; 
  --mico-opacity-40p: 0.40; 
  --mico-opacity-50p: 0.5;    
  --mico-opacity-60p: 0.60;    
  --mico-opacity-70p: 0.70;  
  --mico-opacity-80p: 0.80;  
  --mico-opacity-90p: 0.90;  
  --mico-opacity-100p: 1;      

  /* ====================================================================== */
  /* TRANSFORM SYSTEM                                                       */
  /* ====================================================================== */

  /**
   * Transform Properties
   *
   * These variables define common transform functions for consistent usage.
   * Transforms allow elements to be visually manipulated in 2D or 3D space.
   */

  /* Scale Transforms */
  --mico-scale-100: scale(1);         /* Original size (no scaling) */
  --mico-scale-75: scale(0.75);       /* 75% of original size */
  --mico-scale-50: scale(0.5);        /* 50% of original size */

  /* Rotation Transforms */
  --mico-rotate-45: rotate(45deg);    /* 45-degree rotation */
  --mico-rotate-90: rotate(90deg);    /* 90-degree rotation */

  /* Translation Transforms */
  --mico-translate-x-full: translateX(100%); /* Move 100% right */
  --mico-translate-y-full: translateY(100%); /* Move 100% down */

  /* ====================================================================== */
  /* TABLE SYSTEM                                                           */
  /* ====================================================================== */

  /**
   * Table Properties
   *
   * These variables define table layout algorithms for consistent usage.
   * Table layout affects how tables calculate column widths.
   */
  --mico-table-auto: auto;            /* Automatic table layout algorithm */
  --mico-table-fixed: fixed;          /* Fixed table layout algorithm */

  /* ====================================================================== */
  /* SVG SYSTEM                                                             */
  /* ====================================================================== */

  /**
   * SVG Properties
   *
   * These variables define common SVG property values for consistent usage.
   * These help maintain consistent styling between HTML and SVG elements.
   */
  --mico-fill-current: currentColor;  /* Use current text color for fill */
  --mico-stroke-current: currentColor; /* Use current text color for stroke */

  /* ====================================================================== */
  /* BUTTON SYSTEM                                                          */
  /* ====================================================================== */

  /**
   * Button Size Variables
   *
   * These variables define consistent button sizing across the framework.
   */
  --mico-btn-padding-xs: var(--mico-size-8) var(--mico-size-12);       /* Extra small button padding */
  --mico-btn-padding-sm: var(--mico-size-12) var(--mico-size-16);      /* Small button padding */
  --mico-btn-padding-md: var(--mico-size-16) var(--mico-size-24);      /* Medium button padding (default) */
  --mico-btn-padding-lg: var(--mico-size-20) var(--mico-size-32);      /* Large button padding */
  --mico-btn-padding-xl: var(--mico-size-24) var(--mico-size-40);      /* Extra large button padding */

  --mico-btn-font-size-xs: var(--mico-fs-xs);                          /* Extra small button font size */
  --mico-btn-font-size-sm: var(--mico-fs-sm);                          /* Small button font size */
  --mico-btn-font-size-md: var(--mico-fs-md);                          /* Medium button font size (default) */
  --mico-btn-font-size-lg: var(--mico-fs-lg);                          /* Large button font size */
  --mico-btn-font-size-xl: var(--mico-fs-xl);                          /* Extra large button font size */

  /**
   * Button Border Radius Variables
   *
   * These variables define button border radius options.
   */
  --mico-btn-radius-square: var(--mico-radius-none);                    /* Square buttons (no radius) */
  --mico-btn-radius-sm: var(--mico-radius-sm);                         /* Small radius */
  --mico-btn-radius-md: var(--mico-radius-md);                         /* Medium radius (default) */
  --mico-btn-radius-lg: var(--mico-radius-lg);                         /* Large radius */
  --mico-btn-radius-pill: var(--mico-radius-full);                     /* Pill-shaped buttons */
  --mico-btn-radius-circle: var(--mico-radius-full);                   /* Circular buttons */

  /**
   * Button Shadow Variables
   *
   * These variables define button shadow options for depth and elevation.
   */
  --mico-btn-shadow-none: none;                                         /* No shadow */
  --mico-btn-shadow-sm: var(--mico-shadow-sm);                         /* Small shadow */
  --mico-btn-shadow-md: var(--mico-shadow-md);                         /* Medium shadow (default) */
  --mico-btn-shadow-lg: var(--mico-shadow-lg);                         /* Large shadow */

  /**
   * Button Icon Variables
   *
   * These variables define spacing and sizing for buttons with icons.
   */
  --mico-btn-icon-gap: var(--mico-size-8);                             /* Gap between icon and text */
  --mico-btn-icon-only-size: var(--mico-size-40);                      /* Size for icon-only buttons */

  /* ====================================================================== */
  /* CURSOR SYSTEM                                                          */
  /* ====================================================================== */

  /**
   * Cursor Properties
   *
   * These variables define cursor styles for different interactive states.
   * Cursors provide visual feedback about what the user can do.
   */
  --mico-cursor-auto: auto;           /* Browser default cursor */
  --mico-cursor-default: default;     /* Default cursor (arrow) */
  --mico-cursor-pointer: pointer;     /* Pointing hand (for links) */
  --mico-cursor-wait: wait;           /* Waiting (hourglass) */
  --mico-cursor-text: text;           /* Text selection (I-beam) */
  --mico-cursor-move: move;           /* Movement indicator */
  --mico-cursor-not-allowed: not-allowed; /* Forbidden action */
  --mico-cursor-grab: grab;           /* Grabbable element */
  --mico-cursor-grabbing: grabbing;   /* Element being grabbed */
  --mico-cursor-help: help;           /* Help cursor */

  /* ====================================================================== */
  /* MISCELLANEOUS UTILITIES SYSTEM                                         */
  /* ====================================================================== */

  /**
   * Appearance Variables
   *
   * These variables control the appearance property for form elements.
   */
  --mico-appearance-none: none;       /* Remove default browser styling */
  --mico-appearance-auto: auto;       /* Use default browser styling */

  /**
   * Pointer Events Variables
   *
   * These variables control pointer event behavior.
   */
  --mico-pointer-events-none: none;   /* Element cannot be target of pointer events */
  --mico-pointer-events-auto: auto;   /* Element can be target of pointer events */

  /**
   * Will Change Variables
   *
   * These variables provide performance hints to the browser.
   * Use with caution as they can consume more resources if overused.
   */
  --mico-will-change-auto: auto;      /* Browser decides what to optimize */
  --mico-will-change-transform: transform; /* Optimize for transform changes */
  --mico-will-change-opacity: opacity; /* Optimize for opacity changes */
  --mico-will-change-scroll: scroll-position; /* Optimize for scroll changes */

  /**
   * Bleed Utility Variables
   *
   * These variables control full-bleed and column-bleed effects.
   */
  --mico-bleed-offset-sm: 10vw;       /* Small bleed offset */
  --mico-bleed-offset-md: 20vw;       /* Medium bleed offset (default) */
  --mico-bleed-offset-lg: 30vw;       /* Large bleed offset */

  /**
   * Mask Variables
   *
   * These variables define CSS mask gradients for fade effects.
   */
  --mico-mask-fade-to-top: linear-gradient(to top, black 50%, transparent 100%);
  --mico-mask-fade-to-bottom: linear-gradient(to bottom, black 50%, transparent 100%);
  --mico-mask-fade-to-left: linear-gradient(to left, black 50%, transparent 100%);
  --mico-mask-fade-to-right: linear-gradient(to right, black 50%, transparent 100%);

  /* Fade intensity variations */
  --mico-mask-fade-short: linear-gradient(to bottom, black 80%, transparent 100%);
  --mico-mask-fade-long: linear-gradient(to bottom, black 20%, transparent 100%);

  /* ====================================================================== */
  /* SIZING SYSTEM                                                          */
  /* ====================================================================== */

  /**
   * Width and Height Properties
   *
   * These variables define common sizing values for consistent usage.
   * Consistent sizing helps maintain a cohesive layout.
   */

  /* Content-based Sizing */
  --mico-fit-content: fit-content;    /* Size based on content with constraints */
  --mico-min-content: min-content;    /* Smallest size that fits content */
  --mico-max-content: max-content;    /* Largest size needed for content */

  /* Percentage-based Sizing */
  --mico-full: 100%;            /* Full width of container */
  --mico-half: 50%;             /* Half width of container */
  --mico-quarter: 25%;           /* Quarter width of container */
  --mico-third: 33.33%;         /* Third width of container */

  /* Viewport-based Sizing */
  --mico-width-screen: 100vw;         /* Full viewport width */
  --mico-height-screen: 100vh;        /* Full viewport height */

  /* ====================================================================== */
  /* ALIGNMENT SYSTEM                                                       */
  /* ====================================================================== */

  /**
   * Vertical Alignment Properties
   *
   * These variables define vertical alignment values for consistent usage.
   * Vertical alignment controls how inline or table-cell elements are aligned.
   */

  /* Basic Vertical Alignment */
  --mico-align-baseline: baseline;    /* Align to text baseline */
  --mico-align-top: top;              /* Align to top */
  --mico-align-middle: middle;        /* Align to middle */
  --mico-align-bottom: bottom;        /* Align to bottom */
  --mico-align-text-top: text-top;    /* Align to top of text */
  --mico-align-text-bottom: text-bottom; /* Align to bottom of text */

  /* Extended Vertical Alignment */
  --mico-vertical-align-sub: sub;     /* Subscript alignment */
  --mico-vertical-align-super: super; /* Superscript alignment */

  /* ====================================================================== */
  /* ANIMATION SYSTEM                                                       */
  /* ====================================================================== */

  /**
   * Animation Duration Variables
   *
   * These variables define animation durations for consistent timing across the framework.
   * Used by both transitions and animations for unified motion design.
   */
  --mico-duration-xs: 0.2s;          /* Extra fast animations */
  --mico-duration-sm: 0.5s;          /* Fast animations */
  --mico-duration-md: 0.8s;          /* Standard animations */
  --mico-duration-lg: 1.2s;          /* Slow animations */
  --mico-duration-xl: 2s;            /* Very slow animations */

  /**
   * Animation Delay Variables
   *
   * These variables define animation delays for staggered effects.
   */
  --mico-delay-xs: 0.1s;             /* Minimal delay */
  --mico-delay-sm: 0.2s;             /* Small delay */
  --mico-delay-md: 0.4s;             /* Medium delay */
  --mico-delay-lg: 0.6s;             /* Large delay */
  --mico-delay-xl: 0.8s;             /* Extra large delay */

  /**
   * Animation Engine Variables
   *
   * These variables control the default behavior of the animation engine.
   */
  --mico-anim-default-duration: var(--mico-duration-md);        /* Default animation duration */
  --mico-anim-default-timing: ease-out;                         /* Default timing function */
  --mico-anim-default-fill-mode: both;                          /* Default fill mode */

  /**
   * Interactive Animation Variables
   *
   * These variables control interactive elements like ripples and typewriter effects.
   */
  --mico-ripple-bg-default: rgba(255, 255, 255, 0.3);          /* Default ripple background */
  --mico-ripple-bg-dark: rgba(0, 0, 0, 0.2);                   /* Dark ripple background */
  --mico-typewriter-cursor-color: currentColor;                 /* Typewriter cursor color */

  /**
   * Animation Properties
   *
   * These variables define common animation presets for consistent usage.
   * Animations create movement and visual interest in the interface.
   */
  --mico-animation-none: none;        /* No animation */
  --mico-animation-spin: spin 1s linear infinite; /* Spinning animation */
  --mico-animation-ping: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite; /* Ping/pulse effect */
  --mico-animation-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite; /* Subtle pulse */
  --mico-animation-bounce: bounce 1s infinite; /* Bouncing effect */

  /* ====================================================================== */
  /* EASING SYSTEM                                                          */
  /* ====================================================================== */

  /**
   * Easing Functions
   *
   * These variables define timing functions that control animation pacing.
   * Different easing functions create different feelings of motion.
   */

  /* Standard Easing Functions */
  --mico-ease: cubic-bezier(0.25, 0.1, 0.25, 1.0); /* Standard ease */
  --mico-ease-in: cubic-bezier(0.42, 0, 1.0, 1.0); /* Slow start, fast end */
  --mico-ease-out: cubic-bezier(0, 0, 0.58, 1.0); /* Fast start, slow end */
  --mico-ease-in-out: cubic-bezier(0.42, 0, 0.58, 1.0); /* Slow start and end */

  /* Expressive Easing Functions */
  --mico-ease-elastic: cubic-bezier(0.68, -0.55, 0.265, 1.55); /* Elastic/bouncy */
  --mico-ease-bounce: cubic-bezier(0.175, 0.885, 0.32, 1.275); /* Bouncy end */
  --mico-ease-back: cubic-bezier(0.68, -0.55, 0.265, 1.55); /* Slight overshoot */

  /* Physics-inspired Easing */
  --mico-ease-spring: cubic-bezier(0.5, 0.1, 0.1, 1); /* Spring-like motion */
  --mico-ease-gravity: cubic-bezier(0.175, 0.885, 0.32, 1.275); /* Gravity effect */
  --mico-ease-snappy: cubic-bezier(0.1, 0.9, 0.2, 1); /* Quick, snappy motion */

  /* ====================================================================== */
  /* TRANSITION SYSTEM                                                      */
  /* ====================================================================== */

  /**
   * Transition Properties
   *
   * These variables define common transition presets for consistent usage.
   * Transitions create smooth animations between property changes.
   */

  /* Transition Durations */
  --mico-transition-duration-fast: 150ms;  /* Fast transitions */
  --mico-transition-duration-normal: 300ms; /* Standard transitions */
  --mico-transition-duration-slow: 500ms;  /* Slow transitions */

  /* Common Transitions */
  --mico-transition-all: all .4s var(--mico-ease); /* All properties */
  --mico-transition-color: color .4s var(--mico-ease); /* Color only */
  --mico-transition-background: background .4s var(--mico-ease); /* Background only */
  --mico-transition-border: border .4s var(--mico-ease); /* Border only */
  --mico-transition-opacity: opacity .4s var(--mico-ease); /* Opacity only */
  --mico-transition-transform: transform .4s var(--mico-ease); /* Transform only */
  --mico-transition-box-shadow: box-shadow .4s var(--mico-ease); /* Shadow only */

  /* ====================================================================== */
  /* COLOR SYSTEM - OKLCH POWERED                                          */
  /* ====================================================================== */

  /**
   * OKLCH Color System
   *
   * This advanced color system uses OKLCH (Oklab Lightness Chroma Hue) color space
   * for superior color manipulation and perceptual uniformity. OKLCH provides:
   *
   * - Better perceptual uniformity than HSL
   * - More predictable lightness adjustments
   * - Wider color gamut support
   * - Superior color mixing and variations
   *
   * Base Colors: Each color serves as the foundation for 5 tints and 5 shades
   * Tints (lighter): 2xlight, 3xlight, 4xlight, 5xlight (progressively lighter)
   * Shades (darker): 2xdark, 3xdark, 4xdark, 5xdark (progressively darker)
   *
   * Browser Support: Modern browsers support oklch() and oklch(from var()) syntax.
   * Fallbacks are provided for older browsers.
   */

  /**
   * OKLCH Color System - Harmonious Tint & Shade Generation Controls
   *
   * This system creates beautiful, harmonious color variations that maintain the original
   * color's character while providing smooth, gradual progressions suitable for UI/UX design.
   * All variations follow WCAG accessibility guidelines and perceptual uniformity principles.
   *
   * DESIGN PRINCIPLES:
   * - Tints: Lighter variations that preserve color warmth and character
   * - Shades: Darker variations that enhance richness without becoming muddy
   * - Gradual progression: Each step creates a visually pleasing transition
   * - Color preservation: Original hue and feel maintained throughout variations
   * - UI suitability: Perfect for backgrounds, text, borders, and interactive states
   */

  /* ====================================================================== */
  /* TINT GENERATION CONTROLS (Lighter Variations)                         */
  /* ====================================================================== */

  /**
   * Lightness Controls for Tints
   * Progressive lightening that maintains color vibrancy and character
   */
  --mico-color-light-tint: calc(l + (1 - l) * 0.15);      /* Subtle lightening */
  --mico-color-light-2xtint: calc(l + (1 - l) * 0.25);    /* Gentle lightening */
  --mico-color-light-3xtint: calc(l + (1 - l) * 0.35);    /* Moderate lightening */
  --mico-color-light-4xtint: calc(l + (1 - l) * 0.45);    /* Noticeable lightening */
  --mico-color-light-5xtint: calc(l + (1 - l) * 0.55);    /* Significant lightening */
  --mico-color-light-6xtint: calc(l + (1 - l) * 0.65);    /* Strong lightening */
  --mico-color-light-7xtint: calc(l + (1 - l) * 0.75);    /* Very light */
  --mico-color-light-8xtint: calc(l + (1 - l) * 0.85);    /* Extremely light */

  /**
   * Chroma Controls for Tints
   * Gradual saturation reduction to prevent harsh, oversaturated light colors
   */
  --mico-color-chrome-tint: calc(c * 0.95);               /* Minimal desaturation */
  --mico-color-chrome-2xtint: calc(c * 0.88);             /* Slight desaturation */
  --mico-color-chrome-3xtint: calc(c * 0.78);             /* Gentle desaturation */
  --mico-color-chrome-4xtint: calc(c * 0.65);             /* Moderate desaturation */
  --mico-color-chrome-5xtint: calc(c * 0.50);             /* Noticeable desaturation */
  --mico-color-chrome-6xtint: calc(c * 0.38);             /* Strong desaturation */
  --mico-color-chrome-7xtint: calc(c * 0.25);             /* Very desaturated */
  --mico-color-chrome-8xtint: calc(c * 0.15);             /* Extremely desaturated */

  /**
   * Hue Controls for Tints
   * Subtle hue shifts to create warmer, more appealing light variations
   */
  --mico-color-hue-tint: calc(h + 2);                     /* Slight warm shift */
  --mico-color-hue-2xtint: calc(h + 3);                   /* Gentle warm shift */
  --mico-color-hue-3xtint: calc(h + 4);                   /* Moderate warm shift */
  --mico-color-hue-4xtint: calc(h + 5);                   /* Noticeable warm shift */
  --mico-color-hue-5xtint: calc(h + 6);                   /* Significant warm shift */
  --mico-color-hue-6xtint: calc(h + 7);                   /* Strong warm shift */
  --mico-color-hue-7xtint: calc(h + 8);                   /* Very warm shift */
  --mico-color-hue-8xtint: calc(h + 9);                   /* Extremely warm shift */

  /* ====================================================================== */
  /* SHADE GENERATION CONTROLS (Darker Variations)                         */
  /* ====================================================================== */

  /**
   * Lightness Controls for Shades
   * Progressive darkening that maintains color richness without becoming muddy
   */
  --mico-color-light-shade: calc(l * 0.92);               /* Subtle darkening */
  --mico-color-light-2xshade: calc(l * 0.82);             /* Gentle darkening */
  --mico-color-light-3xshade: calc(l * 0.70);             /* Moderate darkening */
  --mico-color-light-4xshade: calc(l * 0.58);             /* Noticeable darkening */
  --mico-color-light-5xshade: calc(l * 0.46);             /* Significant darkening */
  --mico-color-light-6xshade: calc(l * 0.36);             /* Strong darkening */
  --mico-color-light-7xshade: calc(l * 0.28);             /* Very dark */
  --mico-color-light-8xshade: calc(l * 0.22);             /* Extremely dark */

  /**
   * Chroma Controls for Shades
   * Gradual saturation enhancement to create rich, vibrant dark colors
   */
  --mico-color-chrome-shade: calc(c * 1.02);              /* Minimal saturation boost */
  --mico-color-chrome-2xshade: calc(c * 1.05);           /* Slight saturation boost */
  --mico-color-chrome-3xshade: calc(c * 1.08);           /* Gentle saturation boost */
  --mico-color-chrome-4xshade: calc(c * 1.12);           /* Moderate saturation boost */
  --mico-color-chrome-5xshade: calc(c * 1.16);           /* Noticeable saturation boost */
  --mico-color-chrome-6xshade: calc(c * 1.20);           /* Strong saturation boost */
  --mico-color-chrome-7xshade: calc(c * 1.24);           /* Very saturated */
  --mico-color-chrome-8xshade: calc(c * 1.28);           /* Extremely saturated */

  /**
   * Hue Controls for Shades
   * Subtle hue shifts to create deeper, more sophisticated dark variations
   */
  --mico-color-hue-shade: calc(h - 1);                    /* Slight cool shift */
  --mico-color-hue-2xshade: calc(h - 2);                  /* Gentle cool shift */
  --mico-color-hue-3xshade: calc(h - 3);                  /* Moderate cool shift */
  --mico-color-hue-4xshade: calc(h - 4);                  /* Noticeable cool shift */
  --mico-color-hue-5xshade: calc(h - 5);                  /* Significant cool shift */
  --mico-color-hue-6xshade: calc(h - 6);                  /* Strong cool shift */
  --mico-color-hue-7xshade: calc(h - 7);                  /* Very cool shift */
  --mico-color-hue-8xshade: calc(h - 8);                  /* Extremely cool shift */

  /* ====================================================================== */
  /* BRAND COLOR VARIATIONS - HARMONIOUS OKLCH SYSTEM                      */
  /* ====================================================================== */

  /**
   * Brand Colors - Primary
   * Base color defined in styleguide.css, variations auto-generated here
   * Using the harmonious tint/shade control system for perfect color progression
   */

  /* Primary Color Tints (lighter variations) */
  --mico-color-primary-light: oklch(from var(--mico-color-primary) var(--mico-color-light-tint) var(--mico-color-chrome-tint) var(--mico-color-hue-tint)); /* Subtle primary tint */
  --mico-color-primary-2xlight: oklch(from var(--mico-color-primary) var(--mico-color-light-2xtint) var(--mico-color-chrome-2xtint) var(--mico-color-hue-2xtint)); /* Gentle primary tint */
  --mico-color-primary-3xlight: oklch(from var(--mico-color-primary) var(--mico-color-light-3xtint) var(--mico-color-chrome-3xtint) var(--mico-color-hue-3xtint)); /* Moderate primary tint */
  --mico-color-primary-4xlight: oklch(from var(--mico-color-primary) var(--mico-color-light-4xtint) var(--mico-color-chrome-4xtint) var(--mico-color-hue-4xtint)); /* Noticeable primary tint */
  --mico-color-primary-5xlight: oklch(from var(--mico-color-primary) var(--mico-color-light-5xtint) var(--mico-color-chrome-5xtint) var(--mico-color-hue-5xtint)); /* Significant primary tint */
  --mico-color-primary-6xlight: oklch(from var(--mico-color-primary) var(--mico-color-light-6xtint) var(--mico-color-chrome-6xtint) var(--mico-color-hue-6xtint)); /* Strong primary tint */
  --mico-color-primary-7xlight: oklch(from var(--mico-color-primary) var(--mico-color-light-7xtint) var(--mico-color-chrome-7xtint) var(--mico-color-hue-7xtint)); /* Very light primary */
  --mico-color-primary-8xlight: oklch(from var(--mico-color-primary) var(--mico-color-light-8xtint) var(--mico-color-chrome-8xtint) var(--mico-color-hue-8xtint)); /* Extremely light primary */

  /* Primary Color Shades (darker variations) */
  --mico-color-primary-dark: oklch(from var(--mico-color-primary) var(--mico-color-light-shade) var(--mico-color-chrome-shade) var(--mico-color-hue-shade)); /* Subtle primary shade */
  --mico-color-primary-2xdark: oklch(from var(--mico-color-primary) var(--mico-color-light-2xshade) var(--mico-color-chrome-2xshade) var(--mico-color-hue-2xshade)); /* Gentle primary shade */
  --mico-color-primary-3xdark: oklch(from var(--mico-color-primary) var(--mico-color-light-3xshade) var(--mico-color-chrome-3xshade) var(--mico-color-hue-3xshade)); /* Moderate primary shade */
  --mico-color-primary-4xdark: oklch(from var(--mico-color-primary) var(--mico-color-light-4xshade) var(--mico-color-chrome-4xshade) var(--mico-color-hue-4xshade)); /* Noticeable primary shade */
  --mico-color-primary-5xdark: oklch(from var(--mico-color-primary) var(--mico-color-light-5xshade) var(--mico-color-chrome-5xshade) var(--mico-color-hue-5xshade)); /* Significant primary shade */
  --mico-color-primary-6xdark: oklch(from var(--mico-color-primary) var(--mico-color-light-6xshade) var(--mico-color-chrome-6xshade) var(--mico-color-hue-6xshade)); /* Strong primary shade */
  --mico-color-primary-7xdark: oklch(from var(--mico-color-primary) var(--mico-color-light-7xshade) var(--mico-color-chrome-7xshade) var(--mico-color-hue-7xshade)); /* Very dark primary */
  --mico-color-primary-8xdark: oklch(from var(--mico-color-primary) var(--mico-color-light-8xshade) var(--mico-color-chrome-8xshade) var(--mico-color-hue-8xshade)); /* Extremely dark primary */

  /**
   * Brand Colors - Secondary
   * Base color defined in styleguide.css, variations auto-generated here
   * Using the harmonious tint/shade control system for perfect color progression
   */

  /* Secondary Color Tints (lighter variations) */
  --mico-color-secondary-light: oklch(from var(--mico-color-secondary) var(--mico-color-light-tint) var(--mico-color-chrome-tint) var(--mico-color-hue-tint)); /* Subtle secondary tint */
  --mico-color-secondary-2xlight: oklch(from var(--mico-color-secondary) var(--mico-color-light-2xtint) var(--mico-color-chrome-2xtint) var(--mico-color-hue-2xtint)); /* Gentle secondary tint */
  --mico-color-secondary-3xlight: oklch(from var(--mico-color-secondary) var(--mico-color-light-3xtint) var(--mico-color-chrome-3xtint) var(--mico-color-hue-3xtint)); /* Moderate secondary tint */
  --mico-color-secondary-4xlight: oklch(from var(--mico-color-secondary) var(--mico-color-light-4xtint) var(--mico-color-chrome-4xtint) var(--mico-color-hue-4xtint)); /* Noticeable secondary tint */
  --mico-color-secondary-5xlight: oklch(from var(--mico-color-secondary) var(--mico-color-light-5xtint) var(--mico-color-chrome-5xtint) var(--mico-color-hue-5xtint)); /* Significant secondary tint */
  --mico-color-secondary-6xlight: oklch(from var(--mico-color-secondary) var(--mico-color-light-6xtint) var(--mico-color-chrome-6xtint) var(--mico-color-hue-6xtint)); /* Strong secondary tint */
  --mico-color-secondary-7xlight: oklch(from var(--mico-color-secondary) var(--mico-color-light-7xtint) var(--mico-color-chrome-7xtint) var(--mico-color-hue-7xtint)); /* Very light secondary */
  --mico-color-secondary-8xlight: oklch(from var(--mico-color-secondary) var(--mico-color-light-8xtint) var(--mico-color-chrome-8xtint) var(--mico-color-hue-8xtint)); /* Extremely light secondary */

  /* Secondary Color Shades (darker variations) */
  --mico-color-secondary-dark: oklch(from var(--mico-color-secondary) var(--mico-color-light-shade) var(--mico-color-chrome-shade) var(--mico-color-hue-shade)); /* Subtle secondary shade */
  --mico-color-secondary-2xdark: oklch(from var(--mico-color-secondary) var(--mico-color-light-2xshade) var(--mico-color-chrome-2xshade) var(--mico-color-hue-2xshade)); /* Gentle secondary shade */
  --mico-color-secondary-3xdark: oklch(from var(--mico-color-secondary) var(--mico-color-light-3xshade) var(--mico-color-chrome-3xshade) var(--mico-color-hue-3xshade)); /* Moderate secondary shade */
  --mico-color-secondary-4xdark: oklch(from var(--mico-color-secondary) var(--mico-color-light-4xshade) var(--mico-color-chrome-4xshade) var(--mico-color-hue-4xshade)); /* Noticeable secondary shade */
  --mico-color-secondary-5xdark: oklch(from var(--mico-color-secondary) var(--mico-color-light-5xshade) var(--mico-color-chrome-5xshade) var(--mico-color-hue-5xshade)); /* Significant secondary shade */
  --mico-color-secondary-6xdark: oklch(from var(--mico-color-secondary) var(--mico-color-light-6xshade) var(--mico-color-chrome-6xshade) var(--mico-color-hue-6xshade)); /* Strong secondary shade */
  --mico-color-secondary-7xdark: oklch(from var(--mico-color-secondary) var(--mico-color-light-7xshade) var(--mico-color-chrome-7xshade) var(--mico-color-hue-7xshade)); /* Very dark secondary */
  --mico-color-secondary-8xdark: oklch(from var(--mico-color-secondary) var(--mico-color-light-8xshade) var(--mico-color-chrome-8xshade) var(--mico-color-hue-8xshade)); /* Extremely dark secondary */

  /**
   * Brand Colors - Accent
   * Base color defined in styleguide.css, variations auto-generated here
   * Using the harmonious tint/shade control system for perfect color progression
   */

  /* Accent Color Tints (lighter variations) */
  --mico-color-accent-light: oklch(from var(--mico-color-accent) var(--mico-color-light-tint) var(--mico-color-chrome-tint) var(--mico-color-hue-tint)); /* Subtle accent tint */
  --mico-color-accent-2xlight: oklch(from var(--mico-color-accent) var(--mico-color-light-2xtint) var(--mico-color-chrome-2xtint) var(--mico-color-hue-2xtint)); /* Gentle accent tint */
  --mico-color-accent-3xlight: oklch(from var(--mico-color-accent) var(--mico-color-light-3xtint) var(--mico-color-chrome-3xtint) var(--mico-color-hue-3xtint)); /* Moderate accent tint */
  --mico-color-accent-4xlight: oklch(from var(--mico-color-accent) var(--mico-color-light-4xtint) var(--mico-color-chrome-4xtint) var(--mico-color-hue-4xtint)); /* Noticeable accent tint */
  --mico-color-accent-5xlight: oklch(from var(--mico-color-accent) var(--mico-color-light-5xtint) var(--mico-color-chrome-5xtint) var(--mico-color-hue-5xtint)); /* Significant accent tint */
  --mico-color-accent-6xlight: oklch(from var(--mico-color-accent) var(--mico-color-light-6xtint) var(--mico-color-chrome-6xtint) var(--mico-color-hue-6xtint)); /* Strong accent tint */
  --mico-color-accent-7xlight: oklch(from var(--mico-color-accent) var(--mico-color-light-7xtint) var(--mico-color-chrome-7xtint) var(--mico-color-hue-7xtint)); /* Very light accent */
  --mico-color-accent-8xlight: oklch(from var(--mico-color-accent) var(--mico-color-light-8xtint) var(--mico-color-chrome-8xtint) var(--mico-color-hue-8xtint)); /* Extremely light accent */

  /* Accent Color Shades (darker variations) */
  --mico-color-accent-dark: oklch(from var(--mico-color-accent) var(--mico-color-light-shade) var(--mico-color-chrome-shade) var(--mico-color-hue-shade)); /* Subtle accent shade */
  --mico-color-accent-2xdark: oklch(from var(--mico-color-accent) var(--mico-color-light-2xshade) var(--mico-color-chrome-2xshade) var(--mico-color-hue-2xshade)); /* Gentle accent shade */
  --mico-color-accent-3xdark: oklch(from var(--mico-color-accent) var(--mico-color-light-3xshade) var(--mico-color-chrome-3xshade) var(--mico-color-hue-3xshade)); /* Moderate accent shade */
  --mico-color-accent-4xdark: oklch(from var(--mico-color-accent) var(--mico-color-light-4xshade) var(--mico-color-chrome-4xshade) var(--mico-color-hue-4xshade)); /* Noticeable accent shade */
  --mico-color-accent-5xdark: oklch(from var(--mico-color-accent) var(--mico-color-light-5xshade) var(--mico-color-chrome-5xshade) var(--mico-color-hue-5xshade)); /* Significant accent shade */
  --mico-color-accent-6xdark: oklch(from var(--mico-color-accent) var(--mico-color-light-6xshade) var(--mico-color-chrome-6xshade) var(--mico-color-hue-6xshade)); /* Strong accent shade */
  --mico-color-accent-7xdark: oklch(from var(--mico-color-accent) var(--mico-color-light-7xshade) var(--mico-color-chrome-7xshade) var(--mico-color-hue-7xshade)); /* Very dark accent */
  --mico-color-accent-8xdark: oklch(from var(--mico-color-accent) var(--mico-color-light-8xshade) var(--mico-color-chrome-8xshade) var(--mico-color-hue-8xshade)); /* Extremely dark accent */

  /**
   * Semantic Colors - OKLCH System
   *
   * Colors that convey meaning and state information.
   * Each semantic color includes 5 tints and 5 shades for comprehensive usage.
   * All colors maintain WCAG AA contrast ratios for accessibility.
   */

  /* Success Color System */
  --mico-color-success: oklch(0.65 0.15 150); /* Base success color - WCAG AA compliant */

  /* Success Tints (lighter variations) */
  --mico-color-success-light: oklch(from var(--mico-color-success) var(--mico-color-light-tint) var(--mico-color-chrome-tint) var(--mico-color-hue-tint));
  --mico-color-success-2xlight: oklch(from var(--mico-color-success) var(--mico-color-light-2xtint) var(--mico-color-chrome-2xtint) var(--mico-color-hue-2xtint));
  --mico-color-success-3xlight: oklch(from var(--mico-color-success) var(--mico-color-light-3xtint) var(--mico-color-chrome-3xtint) var(--mico-color-hue-3xtint));
  --mico-color-success-4xlight: oklch(from var(--mico-color-success) var(--mico-color-light-4xtint) var(--mico-color-chrome-4xtint) var(--mico-color-hue-4xtint));
  --mico-color-success-5xlight: oklch(from var(--mico-color-success) var(--mico-color-light-5xtint) var(--mico-color-chrome-5xtint) var(--mico-color-hue-5xtint));
  --mico-color-success-6xlight: oklch(from var(--mico-color-success) var(--mico-color-light-6xtint) var(--mico-color-chrome-6xtint) var(--mico-color-hue-6xtint));
  --mico-color-success-7xlight: oklch(from var(--mico-color-success) var(--mico-color-light-7xtint) var(--mico-color-chrome-7xtint) var(--mico-color-hue-7xtint));
  --mico-color-success-8xlight: oklch(from var(--mico-color-success) var(--mico-color-light-8xtint) var(--mico-color-chrome-8xtint) var(--mico-color-hue-8xtint));

  /* Success Shades (darker variations) */
  --mico-color-success-dark: oklch(from var(--mico-color-success) var(--mico-color-light-shade) var(--mico-color-chrome-shade) var(--mico-color-hue-shade));
  --mico-color-success-2xdark: oklch(from var(--mico-color-success) var(--mico-color-light-2xshade) var(--mico-color-chrome-2xshade) var(--mico-color-hue-2xshade));
  --mico-color-success-3xdark: oklch(from var(--mico-color-success) var(--mico-color-light-3xshade) var(--mico-color-chrome-3xshade) var(--mico-color-hue-3xshade));
  --mico-color-success-4xdark: oklch(from var(--mico-color-success) var(--mico-color-light-4xshade) var(--mico-color-chrome-4xshade) var(--mico-color-hue-4xshade));
  --mico-color-success-5xdark: oklch(from var(--mico-color-success) var(--mico-color-light-5xshade) var(--mico-color-chrome-5xshade) var(--mico-color-hue-5xshade));
  --mico-color-success-6xdark: oklch(from var(--mico-color-success) var(--mico-color-light-6xshade) var(--mico-color-chrome-6xshade) var(--mico-color-hue-6xshade));
  --mico-color-success-7xdark: oklch(from var(--mico-color-success) var(--mico-color-light-7xshade) var(--mico-color-chrome-7xshade) var(--mico-color-hue-7xshade));
  --mico-color-success-8xdark: oklch(from var(--mico-color-success) var(--mico-color-light-8xshade) var(--mico-color-chrome-8xshade) var(--mico-color-hue-8xshade));

  /* Warning Color System */
  --mico-color-warning: oklch(0.75 0.15 80); /* Base warning color - WCAG AA compliant */

  /* Warning Tints (lighter variations) */
  --mico-color-warning-light: oklch(from var(--mico-color-warning) var(--mico-color-light-tint) var(--mico-color-chrome-tint) var(--mico-color-hue-tint));
  --mico-color-warning-2xlight: oklch(from var(--mico-color-warning) var(--mico-color-light-2xtint) var(--mico-color-chrome-2xtint) var(--mico-color-hue-2xtint));
  --mico-color-warning-3xlight: oklch(from var(--mico-color-warning) var(--mico-color-light-3xtint) var(--mico-color-chrome-3xtint) var(--mico-color-hue-3xtint));
  --mico-color-warning-4xlight: oklch(from var(--mico-color-warning) var(--mico-color-light-4xtint) var(--mico-color-chrome-4xtint) var(--mico-color-hue-4xtint));
  --mico-color-warning-5xlight: oklch(from var(--mico-color-warning) var(--mico-color-light-5xtint) var(--mico-color-chrome-5xtint) var(--mico-color-hue-5xtint));
  --mico-color-warning-6xlight: oklch(from var(--mico-color-warning) var(--mico-color-light-6xtint) var(--mico-color-chrome-6xtint) var(--mico-color-hue-6xtint));
  --mico-color-warning-7xlight: oklch(from var(--mico-color-warning) var(--mico-color-light-7xtint) var(--mico-color-chrome-7xtint) var(--mico-color-hue-7xtint));
  --mico-color-warning-8xlight: oklch(from var(--mico-color-warning) var(--mico-color-light-8xtint) var(--mico-color-chrome-8xtint) var(--mico-color-hue-8xtint));

  /* Warning Shades (darker variations) */
  --mico-color-warning-dark: oklch(from var(--mico-color-warning) var(--mico-color-light-shade) var(--mico-color-chrome-shade) var(--mico-color-hue-shade));
  --mico-color-warning-2xdark: oklch(from var(--mico-color-warning) var(--mico-color-light-2xshade) var(--mico-color-chrome-2xshade) var(--mico-color-hue-2xshade));
  --mico-color-warning-3xdark: oklch(from var(--mico-color-warning) var(--mico-color-light-3xshade) var(--mico-color-chrome-3xshade) var(--mico-color-hue-3xshade));
  --mico-color-warning-4xdark: oklch(from var(--mico-color-warning) var(--mico-color-light-4xshade) var(--mico-color-chrome-4xshade) var(--mico-color-hue-4xshade));
  --mico-color-warning-5xdark: oklch(from var(--mico-color-warning) var(--mico-color-light-5xshade) var(--mico-color-chrome-5xshade) var(--mico-color-hue-5xshade));
  --mico-color-warning-6xdark: oklch(from var(--mico-color-warning) var(--mico-color-light-6xshade) var(--mico-color-chrome-6xshade) var(--mico-color-hue-6xshade));
  --mico-color-warning-7xdark: oklch(from var(--mico-color-warning) var(--mico-color-light-7xshade) var(--mico-color-chrome-7xshade) var(--mico-color-hue-7xshade));
  --mico-color-warning-8xdark: oklch(from var(--mico-color-warning) var(--mico-color-light-8xshade) var(--mico-color-chrome-8xshade) var(--mico-color-hue-8xshade));

  /* Error Color System */
  --mico-color-error: oklch(0.6 0.18 25); /* Base error color - WCAG AA compliant */

  /* Error Tints (lighter variations) */
  --mico-color-error-light: oklch(from var(--mico-color-error) var(--mico-color-light-tint) var(--mico-color-chrome-tint) var(--mico-color-hue-tint));
  --mico-color-error-2xlight: oklch(from var(--mico-color-error) var(--mico-color-light-2xtint) var(--mico-color-chrome-2xtint) var(--mico-color-hue-2xtint));
  --mico-color-error-3xlight: oklch(from var(--mico-color-error) var(--mico-color-light-3xtint) var(--mico-color-chrome-3xtint) var(--mico-color-hue-3xtint));
  --mico-color-error-4xlight: oklch(from var(--mico-color-error) var(--mico-color-light-4xtint) var(--mico-color-chrome-4xtint) var(--mico-color-hue-4xtint));
  --mico-color-error-5xlight: oklch(from var(--mico-color-error) var(--mico-color-light-5xtint) var(--mico-color-chrome-5xtint) var(--mico-color-hue-5xtint));
  --mico-color-error-6xlight: oklch(from var(--mico-color-error) var(--mico-color-light-6xtint) var(--mico-color-chrome-6xtint) var(--mico-color-hue-6xtint));
  --mico-color-error-7xlight: oklch(from var(--mico-color-error) var(--mico-color-light-7xtint) var(--mico-color-chrome-7xtint) var(--mico-color-hue-7xtint));
  --mico-color-error-8xlight: oklch(from var(--mico-color-error) var(--mico-color-light-8xtint) var(--mico-color-chrome-8xtint) var(--mico-color-hue-8xtint));

  /* Error Shades (darker variations) */
  --mico-color-error-dark: oklch(from var(--mico-color-error) var(--mico-color-light-shade) var(--mico-color-chrome-shade) var(--mico-color-hue-shade));
  --mico-color-error-2xdark: oklch(from var(--mico-color-error) var(--mico-color-light-2xshade) var(--mico-color-chrome-2xshade) var(--mico-color-hue-2xshade));
  --mico-color-error-3xdark: oklch(from var(--mico-color-error) var(--mico-color-light-3xshade) var(--mico-color-chrome-3xshade) var(--mico-color-hue-3xshade));
  --mico-color-error-4xdark: oklch(from var(--mico-color-error) var(--mico-color-light-4xshade) var(--mico-color-chrome-4xshade) var(--mico-color-hue-4xshade));
  --mico-color-error-5xdark: oklch(from var(--mico-color-error) var(--mico-color-light-5xshade) var(--mico-color-chrome-5xshade) var(--mico-color-hue-5xshade));
  --mico-color-error-6xdark: oklch(from var(--mico-color-error) var(--mico-color-light-6xshade) var(--mico-color-chrome-6xshade) var(--mico-color-hue-6xshade));
  --mico-color-error-7xdark: oklch(from var(--mico-color-error) var(--mico-color-light-7xshade) var(--mico-color-chrome-7xshade) var(--mico-color-hue-7xshade));
  --mico-color-error-8xdark: oklch(from var(--mico-color-error) var(--mico-color-light-8xshade) var(--mico-color-chrome-8xshade) var(--mico-color-hue-8xshade));

  /* Info Color System */
  --mico-color-info: oklch(0.6 0.15 250); /* Base info color - WCAG AA compliant */

  /* Info Tints (lighter variations) */
  --mico-color-info-light: oklch(from var(--mico-color-info) var(--mico-color-light-tint) var(--mico-color-chrome-tint) var(--mico-color-hue-tint));
  --mico-color-info-2xlight: oklch(from var(--mico-color-info) var(--mico-color-light-2xtint) var(--mico-color-chrome-2xtint) var(--mico-color-hue-2xtint));
  --mico-color-info-3xlight: oklch(from var(--mico-color-info) var(--mico-color-light-3xtint) var(--mico-color-chrome-3xtint) var(--mico-color-hue-3xtint));
  --mico-color-info-4xlight: oklch(from var(--mico-color-info) var(--mico-color-light-4xtint) var(--mico-color-chrome-4xtint) var(--mico-color-hue-4xtint));
  --mico-color-info-5xlight: oklch(from var(--mico-color-info) var(--mico-color-light-5xtint) var(--mico-color-chrome-5xtint) var(--mico-color-hue-5xtint));
  --mico-color-info-6xlight: oklch(from var(--mico-color-info) var(--mico-color-light-6xtint) var(--mico-color-chrome-6xtint) var(--mico-color-hue-6xtint));
  --mico-color-info-7xlight: oklch(from var(--mico-color-info) var(--mico-color-light-7xtint) var(--mico-color-chrome-7xtint) var(--mico-color-hue-7xtint));
  --mico-color-info-8xlight: oklch(from var(--mico-color-info) var(--mico-color-light-8xtint) var(--mico-color-chrome-8xtint) var(--mico-color-hue-8xtint));

  /* Info Shades (darker variations) */
  --mico-color-info-dark: oklch(from var(--mico-color-info) var(--mico-color-light-shade) var(--mico-color-chrome-shade) var(--mico-color-hue-shade));
  --mico-color-info-2xdark: oklch(from var(--mico-color-info) var(--mico-color-light-2xshade) var(--mico-color-chrome-2xshade) var(--mico-color-hue-2xshade));
  --mico-color-info-3xdark: oklch(from var(--mico-color-info) var(--mico-color-light-3xshade) var(--mico-color-chrome-3xshade) var(--mico-color-hue-3xshade));
  --mico-color-info-4xdark: oklch(from var(--mico-color-info) var(--mico-color-light-4xshade) var(--mico-color-chrome-4xshade) var(--mico-color-hue-4xshade));
  --mico-color-info-5xdark: oklch(from var(--mico-color-info) var(--mico-color-light-5xshade) var(--mico-color-chrome-5xshade) var(--mico-color-hue-5xshade));
  --mico-color-info-6xdark: oklch(from var(--mico-color-info) var(--mico-color-light-6xshade) var(--mico-color-chrome-6xshade) var(--mico-color-hue-6xshade));
  --mico-color-info-7xdark: oklch(from var(--mico-color-info) var(--mico-color-light-7xshade) var(--mico-color-chrome-7xshade) var(--mico-color-hue-7xshade));
  --mico-color-info-8xdark: oklch(from var(--mico-color-info) var(--mico-color-light-8xshade) var(--mico-color-chrome-8xshade) var(--mico-color-hue-8xshade));

  /* Visited Color System */
  --mico-color-visited: oklch(0.55 0.15 300); /* Base visited color - distinct from primary */

  /* Visited Tints (lighter variations) */
  --mico-color-visited-light: oklch(from var(--mico-color-visited) var(--mico-color-light-tint) var(--mico-color-chrome-tint) var(--mico-color-hue-tint));
  --mico-color-visited-2xlight: oklch(from var(--mico-color-visited) var(--mico-color-light-2xtint) var(--mico-color-chrome-2xtint) var(--mico-color-hue-2xtint));
  --mico-color-visited-3xlight: oklch(from var(--mico-color-visited) var(--mico-color-light-3xtint) var(--mico-color-chrome-3xtint) var(--mico-color-hue-3xtint));
  --mico-color-visited-4xlight: oklch(from var(--mico-color-visited) var(--mico-color-light-4xtint) var(--mico-color-chrome-4xtint) var(--mico-color-hue-4xtint));
  --mico-color-visited-5xlight: oklch(from var(--mico-color-visited) var(--mico-color-light-5xtint) var(--mico-color-chrome-5xtint) var(--mico-color-hue-5xtint));
  --mico-color-visited-6xlight: oklch(from var(--mico-color-visited) var(--mico-color-light-6xtint) var(--mico-color-chrome-6xtint) var(--mico-color-hue-6xtint));
  --mico-color-visited-7xlight: oklch(from var(--mico-color-visited) var(--mico-color-light-7xtint) var(--mico-color-chrome-7xtint) var(--mico-color-hue-7xtint));
  --mico-color-visited-8xlight: oklch(from var(--mico-color-visited) var(--mico-color-light-8xtint) var(--mico-color-chrome-8xtint) var(--mico-color-hue-8xtint));

  /* Visited Shades (darker variations) */
  --mico-color-visited-dark: oklch(from var(--mico-color-visited) var(--mico-color-light-shade) var(--mico-color-chrome-shade) var(--mico-color-hue-shade));
  --mico-color-visited-2xdark: oklch(from var(--mico-color-visited) var(--mico-color-light-2xshade) var(--mico-color-chrome-2xshade) var(--mico-color-hue-2xshade));
  --mico-color-visited-3xdark: oklch(from var(--mico-color-visited) var(--mico-color-light-3xshade) var(--mico-color-chrome-3xshade) var(--mico-color-hue-3xshade));
  --mico-color-visited-4xdark: oklch(from var(--mico-color-visited) var(--mico-color-light-4xshade) var(--mico-color-chrome-4xshade) var(--mico-color-hue-4xshade));
  --mico-color-visited-5xdark: oklch(from var(--mico-color-visited) var(--mico-color-light-5xshade) var(--mico-color-chrome-5xshade) var(--mico-color-hue-5xshade));
  --mico-color-visited-6xdark: oklch(from var(--mico-color-visited) var(--mico-color-light-6xshade) var(--mico-color-chrome-6xshade) var(--mico-color-hue-6xshade));
  --mico-color-visited-7xdark: oklch(from var(--mico-color-visited) var(--mico-color-light-7xshade) var(--mico-color-chrome-7xshade) var(--mico-color-hue-7xshade));
  --mico-color-visited-8xdark: oklch(from var(--mico-color-visited) var(--mico-color-light-8xshade) var(--mico-color-chrome-8xshade) var(--mico-color-hue-8xshade));

  /**
   * Neutral Colors - Black System (OKLCH)
   *
   * Black color variations with 5 tints and 5 shades.
   * These provide depth and contrast in dark themes with superior perceptual uniformity.
   */
  --mico-color-black: oklch(0.1 0.005 270); /* Base black color */

  /* Black Tints (lighter variations) */
  --mico-color-black-light: oklch(from var(--mico-color-black) var(--mico-color-light-tint) var(--mico-color-chrome-tint) var(--mico-color-hue-tint));
  --mico-color-black-2xlight: oklch(from var(--mico-color-black) var(--mico-color-light-2xtint) var(--mico-color-chrome-2xtint) var(--mico-color-hue-2xtint));
  --mico-color-black-3xlight: oklch(from var(--mico-color-black) var(--mico-color-light-3xtint) var(--mico-color-chrome-3xtint) var(--mico-color-hue-3xtint));
  --mico-color-black-4xlight: oklch(from var(--mico-color-black) var(--mico-color-light-4xtint) var(--mico-color-chrome-4xtint) var(--mico-color-hue-4xtint));
  --mico-color-black-5xlight: oklch(from var(--mico-color-black) var(--mico-color-light-5xtint) var(--mico-color-chrome-5xtint) var(--mico-color-hue-5xtint));
  --mico-color-black-6xlight: oklch(from var(--mico-color-black) var(--mico-color-light-6xtint) var(--mico-color-chrome-6xtint) var(--mico-color-hue-6xtint));
  --mico-color-black-7xlight: oklch(from var(--mico-color-black) var(--mico-color-light-7xtint) var(--mico-color-chrome-7xtint) var(--mico-color-hue-7xtint));
  --mico-color-black-8xlight: oklch(from var(--mico-color-black) var(--mico-color-light-8xtint) var(--mico-color-chrome-8xtint) var(--mico-color-hue-8xtint));

  /* Black Shades (darker variations) */
  --mico-color-black-dark: oklch(from var(--mico-color-black) var(--mico-color-light-shade) var(--mico-color-chrome-shade) var(--mico-color-hue-shade));
  --mico-color-black-2xdark: oklch(from var(--mico-color-black) var(--mico-color-light-2xshade) var(--mico-color-chrome-2xshade) var(--mico-color-hue-2xshade));
  --mico-color-black-3xdark: oklch(from var(--mico-color-black) var(--mico-color-light-3xshade) var(--mico-color-chrome-3xshade) var(--mico-color-hue-3xshade));
  --mico-color-black-4xdark: oklch(from var(--mico-color-black) var(--mico-color-light-4xshade) var(--mico-color-chrome-4xshade) var(--mico-color-hue-4xshade));
  --mico-color-black-5xdark: oklch(from var(--mico-color-black) var(--mico-color-light-5xshade) var(--mico-color-chrome-5xshade) var(--mico-color-hue-5xshade));
  --mico-color-black-6xdark: oklch(from var(--mico-color-black) var(--mico-color-light-6xshade) var(--mico-color-chrome-6xshade) var(--mico-color-hue-6xshade));
  --mico-color-black-7xdark: oklch(from var(--mico-color-black) var(--mico-color-light-7xshade) var(--mico-color-chrome-7xshade) var(--mico-color-hue-7xshade));
  --mico-color-black-8xdark: oklch(from var(--mico-color-black) var(--mico-color-light-8xshade) var(--mico-color-chrome-8xshade) var(--mico-color-hue-8xshade));

  /**
   * Neutral Colors - Gray System (OKLCH)
   *
   * Comprehensive gray palette with 5 tints and 5 shades for UI elements, text, and backgrounds.
   * These colors provide optimal contrast and accessibility with perceptual uniformity.
   */
  --mico-color-gray: oklch(0.5 0.01 270); /* Base gray color - true neutral */

  /* Gray Tints (lighter variations) */
  --mico-color-gray-light: oklch(from var(--mico-color-gray) var(--mico-color-light-tint) var(--mico-color-chrome-tint) var(--mico-color-hue-tint));
  --mico-color-gray-2xlight: oklch(from var(--mico-color-gray) var(--mico-color-light-2xtint) var(--mico-color-chrome-2xtint) var(--mico-color-hue-2xtint));
  --mico-color-gray-3xlight: oklch(from var(--mico-color-gray) var(--mico-color-light-3xtint) var(--mico-color-chrome-3xtint) var(--mico-color-hue-3xtint));
  --mico-color-gray-4xlight: oklch(from var(--mico-color-gray) var(--mico-color-light-4xtint) var(--mico-color-chrome-4xtint) var(--mico-color-hue-4xtint));
  --mico-color-gray-5xlight: oklch(from var(--mico-color-gray) var(--mico-color-light-5xtint) var(--mico-color-chrome-5xtint) var(--mico-color-hue-5xtint));
  --mico-color-gray-6xlight: oklch(from var(--mico-color-gray) var(--mico-color-light-6xtint) var(--mico-color-chrome-6xtint) var(--mico-color-hue-6xtint));
  --mico-color-gray-7xlight: oklch(from var(--mico-color-gray) var(--mico-color-light-7xtint) var(--mico-color-chrome-7xtint) var(--mico-color-hue-7xtint));
  --mico-color-gray-8xlight: oklch(from var(--mico-color-gray) var(--mico-color-light-8xtint) var(--mico-color-chrome-8xtint) var(--mico-color-hue-8xtint));

  /* Gray Shades (darker variations) */
  --mico-color-gray-dark: oklch(from var(--mico-color-gray) var(--mico-color-light-shade) var(--mico-color-chrome-shade) var(--mico-color-hue-shade));
  --mico-color-gray-2xdark: oklch(from var(--mico-color-gray) var(--mico-color-light-2xshade) var(--mico-color-chrome-2xshade) var(--mico-color-hue-2xshade));
  --mico-color-gray-3xdark: oklch(from var(--mico-color-gray) var(--mico-color-light-3xshade) var(--mico-color-chrome-3xshade) var(--mico-color-hue-3xshade));
  --mico-color-gray-4xdark: oklch(from var(--mico-color-gray) var(--mico-color-light-4xshade) var(--mico-color-chrome-4xshade) var(--mico-color-hue-4xshade));
  --mico-color-gray-5xdark: oklch(from var(--mico-color-gray) var(--mico-color-light-5xshade) var(--mico-color-chrome-5xshade) var(--mico-color-hue-5xshade));
  --mico-color-gray-6xdark: oklch(from var(--mico-color-gray) var(--mico-color-light-6xshade) var(--mico-color-chrome-6xshade) var(--mico-color-hue-6xshade));
  --mico-color-gray-7xdark: oklch(from var(--mico-color-gray) var(--mico-color-light-7xshade) var(--mico-color-chrome-7xshade) var(--mico-color-hue-7xshade));
  --mico-color-gray-8xdark: oklch(from var(--mico-color-gray) var(--mico-color-light-8xshade) var(--mico-color-chrome-8xshade) var(--mico-color-hue-8xshade));

  /**
   * Neutral Colors - White System (OKLCH)
   *
   * White color variations with 5 tints and 5 shades for subtle backgrounds and overlays.
   * These provide clean, minimal aesthetics in light themes with superior color precision.
   */
  --mico-color-white: oklch(100% 0.00011 271.152); /* Base white color */

  /* White Tints (lighter variations) */
  --mico-color-white-light: oklch(from var(--mico-color-white) var(--mico-color-light-tint) var(--mico-color-chrome-tint) var(--mico-color-hue-tint));
  --mico-color-white-2xlight: oklch(from var(--mico-color-white) var(--mico-color-light-2xtint) var(--mico-color-chrome-2xtint) var(--mico-color-hue-2xtint));
  --mico-color-white-3xlight: oklch(from var(--mico-color-white) var(--mico-color-light-3xtint) var(--mico-color-chrome-3xtint) var(--mico-color-hue-3xtint));
  --mico-color-white-4xlight: oklch(from var(--mico-color-white) var(--mico-color-light-4xtint) var(--mico-color-chrome-4xtint) var(--mico-color-hue-4xtint));
  --mico-color-white-5xlight: oklch(from var(--mico-color-white) var(--mico-color-light-5xtint) var(--mico-color-chrome-5xtint) var(--mico-color-hue-5xtint));
  --mico-color-white-6xlight: oklch(from var(--mico-color-white) var(--mico-color-light-6xtint) var(--mico-color-chrome-6xtint) var(--mico-color-hue-6xtint));
  --mico-color-white-7xlight: oklch(from var(--mico-color-white) var(--mico-color-light-7xtint) var(--mico-color-chrome-7xtint) var(--mico-color-hue-7xtint));
  --mico-color-white-8xlight: oklch(from var(--mico-color-white) var(--mico-color-light-8xtint) var(--mico-color-chrome-8xtint) var(--mico-color-hue-8xtint));

  /* White Shades (darker variations) */
  --mico-color-white-dark: oklch(from var(--mico-color-white) var(--mico-color-light-shade) var(--mico-color-chrome-shade) var(--mico-color-hue-shade));
  --mico-color-white-2xdark: oklch(from var(--mico-color-white) var(--mico-color-light-2xshade) var(--mico-color-chrome-2xshade) var(--mico-color-hue-2xshade));
  --mico-color-white-3xdark: oklch(from var(--mico-color-white) var(--mico-color-light-3xshade) var(--mico-color-chrome-3xshade) var(--mico-color-hue-3xshade));
  --mico-color-white-4xdark: oklch(from var(--mico-color-white) var(--mico-color-light-4xshade) var(--mico-color-chrome-4xshade) var(--mico-color-hue-4xshade));
  --mico-color-white-5xdark: oklch(from var(--mico-color-white) var(--mico-color-light-5xshade) var(--mico-color-chrome-5xshade) var(--mico-color-hue-5xshade));
  --mico-color-white-6xdark: oklch(from var(--mico-color-white) var(--mico-color-light-6xshade) var(--mico-color-chrome-6xshade) var(--mico-color-hue-6xshade));
  --mico-color-white-7xdark: oklch(from var(--mico-color-white) var(--mico-color-light-7xshade) var(--mico-color-chrome-7xshade) var(--mico-color-hue-7xshade));
  --mico-color-white-8xdark: oklch(from var(--mico-color-white) var(--mico-color-light-8xshade) var(--mico-color-chrome-8xshade) var(--mico-color-hue-8xshade));

  /**
   * Transparency Colors - OKLCH Alpha System
   *
   * Creative transparency variations using OKLCH with alpha channels.
   * These provide sophisticated overlay and background effects with superior color mixing.
   * Each transparency level has a creative name for intuitive usage.
   */

  /* Black Transparency Variations */
  --mico-color-black-whisper: oklch(from var(--mico-color-black) l c h / 0.1);    /* Subtle black overlay */
  --mico-color-black-breath: oklch(from var(--mico-color-black) l c h / 0.2);     /* Light black overlay */
  --mico-color-black-mist: oklch(from var(--mico-color-black) l c h / 0.3);       /* Gentle black overlay */
  --mico-color-black-veil: oklch(from var(--mico-color-black) l c h / 0.4);       /* Moderate black overlay */
  --mico-color-black-shadow: oklch(from var(--mico-color-black) l c h / 0.5);     /* Balanced black overlay */
  --mico-color-black-shroud: oklch(from var(--mico-color-black) l c h / 0.6);     /* Strong black overlay */
  --mico-color-black-cloak: oklch(from var(--mico-color-black) l c h / 0.7);      /* Heavy black overlay */
  --mico-color-black-eclipse: oklch(from var(--mico-color-black) l c h / 0.8);    /* Deep black overlay */
  --mico-color-black-void: oklch(from var(--mico-color-black) l c h / 0.9);       /* Intense black overlay */

  /* Gray Transparency Variations */
  --mico-color-gray-whisper: oklch(from var(--mico-color-gray) l c h / 0.1);      /* Subtle gray overlay */
  --mico-color-gray-breath: oklch(from var(--mico-color-gray) l c h / 0.2);       /* Light gray overlay */
  --mico-color-gray-mist: oklch(from var(--mico-color-gray) l c h / 0.3);         /* Gentle gray overlay */
  --mico-color-gray-veil: oklch(from var(--mico-color-gray) l c h / 0.4);         /* Moderate gray overlay */
  --mico-color-gray-shadow: oklch(from var(--mico-color-gray) l c h / 0.5);       /* Balanced gray overlay */
  --mico-color-gray-shroud: oklch(from var(--mico-color-gray) l c h / 0.6);       /* Strong gray overlay */
  --mico-color-gray-cloak: oklch(from var(--mico-color-gray) l c h / 0.7);        /* Heavy gray overlay */
  --mico-color-gray-eclipse: oklch(from var(--mico-color-gray) l c h / 0.8);      /* Deep gray overlay */
  --mico-color-gray-void: oklch(from var(--mico-color-gray) l c h / 0.9);         /* Intense gray overlay */

  /* White Transparency Variations */
  --mico-color-white-whisper: oklch(from var(--mico-color-white) l c h / 0.1);    /* Subtle white overlay */
  --mico-color-white-breath: oklch(from var(--mico-color-white) l c h / 0.2);     /* Light white overlay */
  --mico-color-white-mist: oklch(from var(--mico-color-white) l c h / 0.3);       /* Gentle white overlay */
  --mico-color-white-veil: oklch(from var(--mico-color-white) l c h / 0.4);       /* Moderate white overlay */
  --mico-color-white-shadow: oklch(from var(--mico-color-white) l c h / 0.5);     /* Balanced white overlay */
  --mico-color-white-shroud: oklch(from var(--mico-color-white) l c h / 0.6);     /* Strong white overlay */
  --mico-color-white-cloak: oklch(from var(--mico-color-white) l c h / 0.7);      /* Heavy white overlay */
  --mico-color-white-eclipse: oklch(from var(--mico-color-white) l c h / 0.8);    /* Deep white overlay */
  --mico-color-white-void: oklch(from var(--mico-color-white) l c h / 0.9);       /* Intense white overlay */

  /* Brand Color Transparency Variations */
  --mico-color-primary-whisper: oklch(from var(--mico-color-primary) l c h / 0.1);   /* Subtle primary overlay */
  --mico-color-primary-breath: oklch(from var(--mico-color-primary) l c h / 0.2);    /* Light primary overlay */
  --mico-color-primary-mist: oklch(from var(--mico-color-primary) l c h / 0.3);      /* Gentle primary overlay */
  --mico-color-primary-veil: oklch(from var(--mico-color-primary) l c h / 0.4);      /* Moderate primary overlay */
  --mico-color-primary-shadow: oklch(from var(--mico-color-primary) l c h / 0.5);    /* Balanced primary overlay */

  --mico-color-secondary-whisper: oklch(from var(--mico-color-secondary) l c h / 0.1); /* Subtle secondary overlay */
  --mico-color-secondary-breath: oklch(from var(--mico-color-secondary) l c h / 0.2);  /* Light secondary overlay */
  --mico-color-secondary-mist: oklch(from var(--mico-color-secondary) l c h / 0.3);    /* Gentle secondary overlay */
  --mico-color-secondary-veil: oklch(from var(--mico-color-secondary) l c h / 0.4);    /* Moderate secondary overlay */
  --mico-color-secondary-shadow: oklch(from var(--mico-color-secondary) l c h / 0.5);  /* Balanced secondary overlay */

  --mico-color-accent-whisper: oklch(from var(--mico-color-accent) l c h / 0.1);     /* Subtle accent overlay */
  --mico-color-accent-breath: oklch(from var(--mico-color-accent) l c h / 0.2);      /* Light accent overlay */
  --mico-color-accent-mist: oklch(from var(--mico-color-accent) l c h / 0.3);        /* Gentle accent overlay */
  --mico-color-accent-veil: oklch(from var(--mico-color-accent) l c h / 0.4);        /* Moderate accent overlay */
  --mico-color-accent-shadow: oklch(from var(--mico-color-accent) l c h / 0.5);      /* Balanced accent overlay */

  /**
   * Extended Color Palette - OKLCH System
   *
   * Comprehensive color palette for diverse design needs using OKLCH color space.
   * Each color includes 5 tints and 5 shades for superior color consistency.
   * All colors maintain accessibility and contrast compliance with perceptual uniformity.
   */

  /* Red Color System - Error states, alerts, danger */
  --mico-color-red: oklch(0.55 0.22 27); /* Base red color - vibrant crimson, WCAG AA compliant */

  /* Red Tints (lighter variations) */
  --mico-color-red-light: oklch(from var(--mico-color-red) var(--mico-color-light-tint) var(--mico-color-chrome-tint) var(--mico-color-hue-tint));
  --mico-color-red-2xlight: oklch(from var(--mico-color-red) var(--mico-color-light-2xtint) var(--mico-color-chrome-2xtint) var(--mico-color-hue-2xtint));
  --mico-color-red-3xlight: oklch(from var(--mico-color-red) var(--mico-color-light-3xtint) var(--mico-color-chrome-3xtint) var(--mico-color-hue-3xtint));
  --mico-color-red-4xlight: oklch(from var(--mico-color-red) var(--mico-color-light-4xtint) var(--mico-color-chrome-4xtint) var(--mico-color-hue-4xtint));
  --mico-color-red-5xlight: oklch(from var(--mico-color-red) var(--mico-color-light-5xtint) var(--mico-color-chrome-5xtint) var(--mico-color-hue-5xtint));
  --mico-color-red-6xlight: oklch(from var(--mico-color-red) var(--mico-color-light-6xtint) var(--mico-color-chrome-6xtint) var(--mico-color-hue-6xtint));
  --mico-color-red-7xlight: oklch(from var(--mico-color-red) var(--mico-color-light-7xtint) var(--mico-color-chrome-7xtint) var(--mico-color-hue-7xtint));
  --mico-color-red-8xlight: oklch(from var(--mico-color-red) var(--mico-color-light-8xtint) var(--mico-color-chrome-8xtint) var(--mico-color-hue-8xtint));

  /* Red Shades (darker variations) */
  --mico-color-red-dark: oklch(from var(--mico-color-red) var(--mico-color-light-shade) var(--mico-color-chrome-shade) var(--mico-color-hue-shade));
  --mico-color-red-2xdark: oklch(from var(--mico-color-red) var(--mico-color-light-2xshade) var(--mico-color-chrome-2xshade) var(--mico-color-hue-2xshade));
  --mico-color-red-3xdark: oklch(from var(--mico-color-red) var(--mico-color-light-3xshade) var(--mico-color-chrome-3xshade) var(--mico-color-hue-3xshade));
  --mico-color-red-4xdark: oklch(from var(--mico-color-red) var(--mico-color-light-4xshade) var(--mico-color-chrome-4xshade) var(--mico-color-hue-4xshade));
  --mico-color-red-5xdark: oklch(from var(--mico-color-red) var(--mico-color-light-5xshade) var(--mico-color-chrome-5xshade) var(--mico-color-hue-5xshade));
  --mico-color-red-6xdark: oklch(from var(--mico-color-red) var(--mico-color-light-6xshade) var(--mico-color-chrome-6xshade) var(--mico-color-hue-6xshade));
  --mico-color-red-7xdark: oklch(from var(--mico-color-red) var(--mico-color-light-7xshade) var(--mico-color-chrome-7xshade) var(--mico-color-hue-7xshade));
  --mico-color-red-8xdark: oklch(from var(--mico-color-red) var(--mico-color-light-8xshade) var(--mico-color-chrome-8xshade) var(--mico-color-hue-8xshade));

  /* Yellow Color System - Warning states, highlights */
  --mico-color-yellow: oklch(96.267% 0.19961 108.728); /* Base yellow color - warm amber, not harsh */

  /* Yellow Tints (lighter variations) */
  --mico-color-yellow-light: oklch(from var(--mico-color-yellow) var(--mico-color-light-tint) var(--mico-color-chrome-tint) var(--mico-color-hue-tint));
  --mico-color-yellow-2xlight: oklch(from var(--mico-color-yellow) var(--mico-color-light-2xtint) var(--mico-color-chrome-2xtint) var(--mico-color-hue-2xtint));
  --mico-color-yellow-3xlight: oklch(from var(--mico-color-yellow) var(--mico-color-light-3xtint) var(--mico-color-chrome-3xtint) var(--mico-color-hue-3xtint));
  --mico-color-yellow-4xlight: oklch(from var(--mico-color-yellow) var(--mico-color-light-4xtint) var(--mico-color-chrome-4xtint) var(--mico-color-hue-4xtint));
  --mico-color-yellow-5xlight: oklch(from var(--mico-color-yellow) var(--mico-color-light-5xtint) var(--mico-color-chrome-5xtint) var(--mico-color-hue-5xtint));
  --mico-color-yellow-6xlight: oklch(from var(--mico-color-yellow) var(--mico-color-light-6xtint) var(--mico-color-chrome-6xtint) var(--mico-color-hue-6xtint));
  --mico-color-yellow-7xlight: oklch(from var(--mico-color-yellow) var(--mico-color-light-7xtint) var(--mico-color-chrome-7xtint) var(--mico-color-hue-7xtint));
  --mico-color-yellow-8xlight: oklch(from var(--mico-color-yellow) var(--mico-color-light-8xtint) var(--mico-color-chrome-8xtint) var(--mico-color-hue-8xtint));

  /* Yellow Shades (darker variations) */
  --mico-color-yellow-dark: oklch(from var(--mico-color-yellow) var(--mico-color-light-shade) var(--mico-color-chrome-shade) var(--mico-color-hue-shade));
  --mico-color-yellow-2xdark: oklch(from var(--mico-color-yellow) var(--mico-color-light-2xshade) var(--mico-color-chrome-2xshade) var(--mico-color-hue-2xshade));
  --mico-color-yellow-3xdark: oklch(from var(--mico-color-yellow) var(--mico-color-light-3xshade) var(--mico-color-chrome-3xshade) var(--mico-color-hue-3xshade));
  --mico-color-yellow-4xdark: oklch(from var(--mico-color-yellow) var(--mico-color-light-4xshade) var(--mico-color-chrome-4xshade) var(--mico-color-hue-4xshade));
  --mico-color-yellow-5xdark: oklch(from var(--mico-color-yellow) var(--mico-color-light-5xshade) var(--mico-color-chrome-5xshade) var(--mico-color-hue-5xshade));
  --mico-color-yellow-6xdark: oklch(from var(--mico-color-yellow) var(--mico-color-light-6xshade) var(--mico-color-chrome-6xshade) var(--mico-color-hue-6xshade));
  --mico-color-yellow-7xdark: oklch(from var(--mico-color-yellow) var(--mico-color-light-7xshade) var(--mico-color-chrome-7xshade) var(--mico-color-hue-7xshade));
  --mico-color-yellow-8xdark: oklch(from var(--mico-color-yellow) var(--mico-color-light-8xshade) var(--mico-color-chrome-8xshade) var(--mico-color-hue-8xshade));

  /* Green Color System - Success states, positive actions */
  --mico-color-green: oklch(67.749% 0.19955 141.94); /* Base green color - fresh emerald, nature-inspired */

  /* Green Tints (lighter variations) */
  --mico-color-green-light: oklch(from var(--mico-color-green) var(--mico-color-light-tint) var(--mico-color-chrome-tint) var(--mico-color-hue-tint));
  --mico-color-green-2xlight: oklch(from var(--mico-color-green) var(--mico-color-light-2xtint) var(--mico-color-chrome-2xtint) var(--mico-color-hue-2xtint));
  --mico-color-green-3xlight: oklch(from var(--mico-color-green) var(--mico-color-light-3xtint) var(--mico-color-chrome-3xtint) var(--mico-color-hue-3xtint));
  --mico-color-green-4xlight: oklch(from var(--mico-color-green) var(--mico-color-light-4xtint) var(--mico-color-chrome-4xtint) var(--mico-color-hue-4xtint));
  --mico-color-green-5xlight: oklch(from var(--mico-color-green) var(--mico-color-light-5xtint) var(--mico-color-chrome-5xtint) var(--mico-color-hue-5xtint));
  --mico-color-green-6xlight: oklch(from var(--mico-color-green) var(--mico-color-light-6xtint) var(--mico-color-chrome-6xtint) var(--mico-color-hue-6xtint));
  --mico-color-green-7xlight: oklch(from var(--mico-color-green) var(--mico-color-light-7xtint) var(--mico-color-chrome-7xtint) var(--mico-color-hue-7xtint));
  --mico-color-green-8xlight: oklch(from var(--mico-color-green) var(--mico-color-light-8xtint) var(--mico-color-chrome-8xtint) var(--mico-color-hue-8xtint));

  /* Green Shades (darker variations) */
  --mico-color-green-dark: oklch(from var(--mico-color-green) var(--mico-color-light-shade) var(--mico-color-chrome-shade) var(--mico-color-hue-shade));
  --mico-color-green-2xdark: oklch(from var(--mico-color-green) var(--mico-color-light-2xshade) var(--mico-color-chrome-2xshade) var(--mico-color-hue-2xshade));
  --mico-color-green-3xdark: oklch(from var(--mico-color-green) var(--mico-color-light-3xshade) var(--mico-color-chrome-3xshade) var(--mico-color-hue-3xshade));
  --mico-color-green-4xdark: oklch(from var(--mico-color-green) var(--mico-color-light-4xshade) var(--mico-color-chrome-4xshade) var(--mico-color-hue-4xshade));
  --mico-color-green-5xdark: oklch(from var(--mico-color-green) var(--mico-color-light-5xshade) var(--mico-color-chrome-5xshade) var(--mico-color-hue-5xshade));
  --mico-color-green-6xdark: oklch(from var(--mico-color-green) var(--mico-color-light-6xshade) var(--mico-color-chrome-6xshade) var(--mico-color-hue-6xshade));
  --mico-color-green-7xdark: oklch(from var(--mico-color-green) var(--mico-color-light-7xshade) var(--mico-color-chrome-7xshade) var(--mico-color-hue-7xshade));
  --mico-color-green-8xdark: oklch(from var(--mico-color-green) var(--mico-color-light-8xshade) var(--mico-color-chrome-8xshade) var(--mico-color-hue-8xshade));

  /* Blue Color System - Information, links, primary actions */
  --mico-color-blue: oklch(52% 0.20589 259.44); /* Base blue color - trustworthy azure, professional */

  /* Blue Tints (lighter variations) */
  --mico-color-blue-light: oklch(from var(--mico-color-blue) var(--mico-color-light-tint) var(--mico-color-chrome-tint) var(--mico-color-hue-tint));
  --mico-color-blue-2xlight: oklch(from var(--mico-color-blue) var(--mico-color-light-2xtint) var(--mico-color-chrome-2xtint) var(--mico-color-hue-2xtint));
  --mico-color-blue-3xlight: oklch(from var(--mico-color-blue) var(--mico-color-light-3xtint) var(--mico-color-chrome-3xtint) var(--mico-color-hue-3xtint));
  --mico-color-blue-4xlight: oklch(from var(--mico-color-blue) var(--mico-color-light-4xtint) var(--mico-color-chrome-4xtint) var(--mico-color-hue-4xtint));
  --mico-color-blue-5xlight: oklch(from var(--mico-color-blue) var(--mico-color-light-5xtint) var(--mico-color-chrome-5xtint) var(--mico-color-hue-5xtint));
  --mico-color-blue-6xlight: oklch(from var(--mico-color-blue) var(--mico-color-light-6xtint) var(--mico-color-chrome-6xtint) var(--mico-color-hue-6xtint));
  --mico-color-blue-7xlight: oklch(from var(--mico-color-blue) var(--mico-color-light-7xtint) var(--mico-color-chrome-7xtint) var(--mico-color-hue-7xtint));
  --mico-color-blue-8xlight: oklch(from var(--mico-color-blue) var(--mico-color-light-8xtint) var(--mico-color-chrome-8xtint) var(--mico-color-hue-8xtint));

  /* Blue Shades (darker variations) */
  --mico-color-blue-dark: oklch(from var(--mico-color-blue) var(--mico-color-light-shade) var(--mico-color-chrome-shade) var(--mico-color-hue-shade));
  --mico-color-blue-2xdark: oklch(from var(--mico-color-blue) var(--mico-color-light-2xshade) var(--mico-color-chrome-2xshade) var(--mico-color-hue-2xshade));
  --mico-color-blue-3xdark: oklch(from var(--mico-color-blue) var(--mico-color-light-3xshade) var(--mico-color-chrome-3xshade) var(--mico-color-hue-3xshade));
  --mico-color-blue-4xdark: oklch(from var(--mico-color-blue) var(--mico-color-light-4xshade) var(--mico-color-chrome-4xshade) var(--mico-color-hue-4xshade));
  --mico-color-blue-5xdark: oklch(from var(--mico-color-blue) var(--mico-color-light-5xshade) var(--mico-color-chrome-5xshade) var(--mico-color-hue-5xshade));
  --mico-color-blue-6xdark: oklch(from var(--mico-color-blue) var(--mico-color-light-6xshade) var(--mico-color-chrome-6xshade) var(--mico-color-hue-6xshade));
  --mico-color-blue-7xdark: oklch(from var(--mico-color-blue) var(--mico-color-light-7xshade) var(--mico-color-chrome-7xshade) var(--mico-color-hue-7xshade));
  --mico-color-blue-8xdark: oklch(from var(--mico-color-blue) var(--mico-color-light-8xshade) var(--mico-color-chrome-8xshade) var(--mico-color-hue-8xshade));

  /* Indigo Color System - Deep blues, professional themes */
  --mico-color-indigo: oklch(0.52 0.17 275); /* Base indigo color - sophisticated violet-blue */

  /* Indigo Tints (lighter variations) */
  --mico-color-indigo-light: oklch(from var(--mico-color-indigo) var(--mico-color-light-tint) var(--mico-color-chrome-tint) var(--mico-color-hue-tint));
  --mico-color-indigo-2xlight: oklch(from var(--mico-color-indigo) var(--mico-color-light-2xtint) var(--mico-color-chrome-2xtint) var(--mico-color-hue-2xtint));
  --mico-color-indigo-3xlight: oklch(from var(--mico-color-indigo) var(--mico-color-light-3xtint) var(--mico-color-chrome-3xtint) var(--mico-color-hue-3xtint));
  --mico-color-indigo-4xlight: oklch(from var(--mico-color-indigo) var(--mico-color-light-4xtint) var(--mico-color-chrome-4xtint) var(--mico-color-hue-4xtint));
  --mico-color-indigo-5xlight: oklch(from var(--mico-color-indigo) var(--mico-color-light-5xtint) var(--mico-color-chrome-5xtint) var(--mico-color-hue-5xtint));
  --mico-color-indigo-6xlight: oklch(from var(--mico-color-indigo) var(--mico-color-light-6xtint) var(--mico-color-chrome-6xtint) var(--mico-color-hue-6xtint));
  --mico-color-indigo-7xlight: oklch(from var(--mico-color-indigo) var(--mico-color-light-7xtint) var(--mico-color-chrome-7xtint) var(--mico-color-hue-7xtint));
  --mico-color-indigo-8xlight: oklch(from var(--mico-color-indigo) var(--mico-color-light-8xtint) var(--mico-color-chrome-8xtint) var(--mico-color-hue-8xtint));

  /* Indigo Shades (darker variations) */
  --mico-color-indigo-dark: oklch(from var(--mico-color-indigo) var(--mico-color-light-shade) var(--mico-color-chrome-shade) var(--mico-color-hue-shade));
  --mico-color-indigo-2xdark: oklch(from var(--mico-color-indigo) var(--mico-color-light-2xshade) var(--mico-color-chrome-2xshade) var(--mico-color-hue-2xshade));
  --mico-color-indigo-3xdark: oklch(from var(--mico-color-indigo) var(--mico-color-light-3xshade) var(--mico-color-chrome-3xshade) var(--mico-color-hue-3xshade));
  --mico-color-indigo-4xdark: oklch(from var(--mico-color-indigo) var(--mico-color-light-4xshade) var(--mico-color-chrome-4xshade) var(--mico-color-hue-4xshade));
  --mico-color-indigo-5xdark: oklch(from var(--mico-color-indigo) var(--mico-color-light-5xshade) var(--mico-color-chrome-5xshade) var(--mico-color-hue-5xshade));
  --mico-color-indigo-6xdark: oklch(from var(--mico-color-indigo) var(--mico-color-light-6xshade) var(--mico-color-chrome-6xshade) var(--mico-color-hue-6xshade));
  --mico-color-indigo-7xdark: oklch(from var(--mico-color-indigo) var(--mico-color-light-7xshade) var(--mico-color-chrome-7xshade) var(--mico-color-hue-7xshade));
  --mico-color-indigo-8xdark: oklch(from var(--mico-color-indigo) var(--mico-color-light-8xshade) var(--mico-color-chrome-8xshade) var(--mico-color-hue-8xshade));

  /* Purple Color System - Creative themes, luxury */
  --mico-color-purple: oklch(48.171% 0.20979 307.996); /* Base purple color - rich amethyst, creative */

  /* Purple Tints (lighter variations) */
  --mico-color-purple-light: oklch(from var(--mico-color-purple) var(--mico-color-light-tint) var(--mico-color-chrome-tint) var(--mico-color-hue-tint));
  --mico-color-purple-2xlight: oklch(from var(--mico-color-purple) var(--mico-color-light-2xtint) var(--mico-color-chrome-2xtint) var(--mico-color-hue-2xtint));
  --mico-color-purple-3xlight: oklch(from var(--mico-color-purple) var(--mico-color-light-3xtint) var(--mico-color-chrome-3xtint) var(--mico-color-hue-3xtint));
  --mico-color-purple-4xlight: oklch(from var(--mico-color-purple) var(--mico-color-light-4xtint) var(--mico-color-chrome-4xtint) var(--mico-color-hue-4xtint));
  --mico-color-purple-5xlight: oklch(from var(--mico-color-purple) var(--mico-color-light-5xtint) var(--mico-color-chrome-5xtint) var(--mico-color-hue-5xtint));
  --mico-color-purple-6xlight: oklch(from var(--mico-color-purple) var(--mico-color-light-6xtint) var(--mico-color-chrome-6xtint) var(--mico-color-hue-6xtint));
  --mico-color-purple-7xlight: oklch(from var(--mico-color-purple) var(--mico-color-light-7xtint) var(--mico-color-chrome-7xtint) var(--mico-color-hue-7xtint));
  --mico-color-purple-8xlight: oklch(from var(--mico-color-purple) var(--mico-color-light-8xtint) var(--mico-color-chrome-8xtint) var(--mico-color-hue-8xtint));

  /* Purple Shades (darker variations) */
  --mico-color-purple-dark: oklch(from var(--mico-color-purple) var(--mico-color-light-shade) var(--mico-color-chrome-shade) var(--mico-color-hue-shade));
  --mico-color-purple-2xdark: oklch(from var(--mico-color-purple) var(--mico-color-light-2xshade) var(--mico-color-chrome-2xshade) var(--mico-color-hue-2xshade));
  --mico-color-purple-3xdark: oklch(from var(--mico-color-purple) var(--mico-color-light-3xshade) var(--mico-color-chrome-3xshade) var(--mico-color-hue-3xshade));
  --mico-color-purple-4xdark: oklch(from var(--mico-color-purple) var(--mico-color-light-4xshade) var(--mico-color-chrome-4xshade) var(--mico-color-hue-4xshade));
  --mico-color-purple-5xdark: oklch(from var(--mico-color-purple) var(--mico-color-light-5xshade) var(--mico-color-chrome-5xshade) var(--mico-color-hue-5xshade));
  --mico-color-purple-6xdark: oklch(from var(--mico-color-purple) var(--mico-color-light-6xshade) var(--mico-color-chrome-6xshade) var(--mico-color-hue-6xshade));
  --mico-color-purple-7xdark: oklch(from var(--mico-color-purple) var(--mico-color-light-7xshade) var(--mico-color-chrome-7xshade) var(--mico-color-hue-7xshade));
  --mico-color-purple-8xdark: oklch(from var(--mico-color-purple) var(--mico-color-light-8xshade) var(--mico-color-chrome-8xshade) var(--mico-color-hue-8xshade));

  /* Pink Color System - Warm themes, highlights */
  --mico-color-pink: oklch(70.383% 0.19028 6.147); /* Base pink color - warm rose, approachable */

  /* Pink Tints (lighter variations) */
  --mico-color-pink-light: oklch(from var(--mico-color-pink) var(--mico-color-light-tint) var(--mico-color-chrome-tint) var(--mico-color-hue-tint));
  --mico-color-pink-2xlight: oklch(from var(--mico-color-pink) var(--mico-color-light-2xtint) var(--mico-color-chrome-2xtint) var(--mico-color-hue-2xtint));
  --mico-color-pink-3xlight: oklch(from var(--mico-color-pink) var(--mico-color-light-3xtint) var(--mico-color-chrome-3xtint) var(--mico-color-hue-3xtint));
  --mico-color-pink-4xlight: oklch(from var(--mico-color-pink) var(--mico-color-light-4xtint) var(--mico-color-chrome-4xtint) var(--mico-color-hue-4xtint));
  --mico-color-pink-5xlight: oklch(from var(--mico-color-pink) var(--mico-color-light-5xtint) var(--mico-color-chrome-5xtint) var(--mico-color-hue-5xtint));
  --mico-color-pink-6xlight: oklch(from var(--mico-color-pink) var(--mico-color-light-6xtint) var(--mico-color-chrome-6xtint) var(--mico-color-hue-6xtint));
  --mico-color-pink-7xlight: oklch(from var(--mico-color-pink) var(--mico-color-light-7xtint) var(--mico-color-chrome-7xtint) var(--mico-color-hue-7xtint));
  --mico-color-pink-8xlight: oklch(from var(--mico-color-pink) var(--mico-color-light-8xtint) var(--mico-color-chrome-8xtint) var(--mico-color-hue-8xtint));

  /* Pink Shades (darker variations) */
  --mico-color-pink-dark: oklch(from var(--mico-color-pink) var(--mico-color-light-shade) var(--mico-color-chrome-shade) var(--mico-color-hue-shade));
  --mico-color-pink-2xdark: oklch(from var(--mico-color-pink) var(--mico-color-light-2xshade) var(--mico-color-chrome-2xshade) var(--mico-color-hue-2xshade));
  --mico-color-pink-3xdark: oklch(from var(--mico-color-pink) var(--mico-color-light-3xshade) var(--mico-color-chrome-3xshade) var(--mico-color-hue-3xshade));
  --mico-color-pink-4xdark: oklch(from var(--mico-color-pink) var(--mico-color-light-4xshade) var(--mico-color-chrome-4xshade) var(--mico-color-hue-4xshade));
  --mico-color-pink-5xdark: oklch(from var(--mico-color-pink) var(--mico-color-light-5xshade) var(--mico-color-chrome-5xshade) var(--mico-color-hue-5xshade));
  --mico-color-pink-6xdark: oklch(from var(--mico-color-pink) var(--mico-color-light-6xshade) var(--mico-color-chrome-6xshade) var(--mico-color-hue-6xshade));
  --mico-color-pink-7xdark: oklch(from var(--mico-color-pink) var(--mico-color-light-7xshade) var(--mico-color-chrome-7xshade) var(--mico-color-hue-7xshade));
  --mico-color-pink-8xdark: oklch(from var(--mico-color-pink) var(--mico-color-light-8xshade) var(--mico-color-chrome-8xshade) var(--mico-color-hue-8xshade));
}

/* Core Utilities */

/**
 * Mico CSS Framework - Miscellaneous Utilities
 *
 * This file provides various utility classes that don't fit into other categories
 * but are essential for modern web development. These utilities cover:
 *
 * - Accessibility helpers (skip links, screen reader utilities)
 * - Appearance control (form elements, browser defaults)
 * - Pointer events and user interaction
 * - Performance optimization hints
 * - Layout bleeding effects
 * - CSS masking and visual effects
 * - Browser compatibility helpers
 *
 * USAGE:
 * Accessibility: .skip-link, .sr-only
 * Appearance: .appearance-none, .appearance-auto
 * Interaction: .pointer-events-none, .user-select-none
 * Performance: .will-change-transform, .will-change-opacity
 * Layout: .bleed-full, .bleed-column
 * Effects: .mask-fade-bottom, .mask-fade-top
 */

/* ====================================================================== */

/* Presets and Semantics                                                       */

/* ====================================================================== */

/**
 * Box Sizing Reset
 * Ensures consistent box model behavior across all elements
 */

html, *::before, *::after {
  box-sizing: border-box;
  max-width: 1600px;
  margin-left: var(--mico-value-auto);
  margin-right: var(--mico-value-auto);
}

/**
 * CSS Reset and Normalization
 * Removes default browser styling for consistent cross-browser appearance
 */

*, *::before, *::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

/**
 * Heading Styles
 * Responsive typography scale using CSS custom properties
 */

h1, h2, h3, h4, h5, h6 {
  font-family: var(--mico-font-display);
  color: var(--color-text-primary);
  user-select: text;
  cursor: text;
  font-weight: var(--mico-fw-400);
  line-height: var(--mico-lh-xs);
  text-wrap-style: balance;
}

h1 { font-size: var(--mico-fs-xxxl) !important; }

h2 { font-size: var(--mico-fs-xxl); }

h3 { font-size: var(--mico-fs-xl); }

h4 { font-size: var(--mico-fs-lg); }

h5 { font-size: var(--mico-fs-md); }

h6 { font-size: var(--mico-fs-sm); }

/**
 * Paragraph Styles
 * Consistent spacing and typography for body text
 */

p {
  color: var(--color-text-secondary);
  font-size: var(--mico-fs-md);
  font-weight: var(--mico-fw-300);
  line-height: var(--mico-lh-md);
  cursor: text;
}

/**
 * Content Spacing
 * Consistent spacing between content elements
 */

h1 ~ div, h2 ~ div, h3 ~ div, h4 ~ div, h5 ~ div, h6 ~ div {
  margin-top: var(--mico-size-16);
}

h1 ~ p, h2 ~ p, h3 ~ p, h4 ~ p, h5 ~ p, h6 ~ p {
  margin-top: var(--mico-size-16);
}

div ~ h1, div ~ h2, div ~ h3, div ~ h4, div ~ h5, div ~ h6 {
  margin-top: var(--mico-size-32);
}

/**
 * Interactive Element Spacing
 * Ensures proper spacing between text and interactive elements
 */

p ~ button, p ~ a, span ~ button, span ~ a {
  margin-top: var(--mico-size-24);
}

div ~ p {
  margin-bottom: var(--mico-size-40);
}

/**
 * Link Styles
 * Accessible and consistent hyperlink styling
 */

a {
  color: var(--mico-color-gray-6xdark);
  text-decoration: none;
}

a:hover, a:focus {
  /* text-decoration: underline; */
  text-underline-offset: 0.2em;
  outline: var(--mico-value-none);
}

/**
 * List Styles
 * Clean list presentation
 */

li {
  display: flex;
  list-style-type: none;
  font-family: inherit;
  font-size: var(--mico-fs-xs);
}

/**
 * Text Emphasis
 * Semantic styling for emphasized text
 */

em, i {
  font-style: italic;
}

strong, b {
  font-weight: var(--mico-fw-700);
}

/**
 * Blockquotes
 * Distinctive styling for quoted content
 */

blockquote {
  margin: var(--mico-size-16, 16px) 0;
  padding-left: var(--mico-size-16, 16px);
  border-left: 4px solid var(--mico-value-current);
  font-style: italic;
  color: inherit;
}

/**
 * Code Elements
 * Monospace styling for code and preformatted text
 */

code, pre {
  font-family: var(--mico-font-mono, 'SFMono-Regular', Menlo, Monaco, Consolas, monospace);
  border-radius: var(--mico-radius-sm, 2px);
}

code {
  padding: 0.2em 0.4em;
  font-size: 0.875em;
}

pre {
  padding: var(--mico-size-16, 16px);
  overflow-x: auto;
  line-height: 1.4;
}

/* ========================================================================== */

/* ACCESSIBILITY UTILITIES                                                   */

/* ========================================================================== */

/**
 * Skip Link
 *
 * Provides keyboard users a way to skip to main content.
 * Essential for accessibility compliance.
 */

.skip-link {
  position: absolute !important;
  top: calc(var(--mico-size-40) * -1) !important;
  left: var(--mico-size-6) !important;
  background: var(--mico-color-black) !important;
  color: var(--mico-color-white) !important;
  padding: var(--mico-size-8) !important;
  text-decoration: var(--mico-value-none) !important;
  z-index: var(--mico-z-50) !important;
  border-radius: var(--mico-radius-sm) !important;
  font-weight: var(--mico-fw-500) !important;
  transition: var(--mico-transition-all) !important;
}

/**
 * Screen Reader Only
 *
 * Hides content visually but keeps it available to screen readers.
 * Use for descriptive text that aids accessibility.
 */

.sr-only {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: var(--mico-value-0) !important;
  margin: calc(var(--mico-size-1) * -1) !important;
  overflow: var(--mico-overflow-hidden) !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: var(--mico-value-0) !important;
}

/**
 * Not Screen Reader Only
 *
 * Reverses .sr-only for responsive or conditional visibility.
 */

.not-sr-only {
  position: static !important;
  width: var(--mico-value-auto) !important;
  height: var(--mico-value-auto) !important;
  padding: var(--mico-value-0) !important;
  margin: var(--mico-value-0) !important;
  overflow: var(--mico-overflow-visible) !important;
  clip: var(--mico-value-auto) !important;
  white-space: normal !important;
}

/* ========================================================================== */

/* APPEARANCE CONTROL                                                        */

/* ========================================================================== */

/**
 * Appearance Utilities
 *
 * Controls the appearance property to remove or restore browser default styling.
 * Particularly useful for form elements and custom components.
 */

.appearance-none {
  -webkit-appearance: var(--mico-appearance-none);
  -moz-appearance: var(--mico-appearance-none);
  appearance: var(--mico-appearance-none);
}

.appearance-auto {
  -webkit-appearance: var(--mico-appearance-auto);
  -moz-appearance: var(--mico-appearance-auto);
  appearance: var(--mico-appearance-auto);
}

/* ========================================================================== */

/* POINTER EVENTS & USER INTERACTION                                         */

/* ========================================================================== */

/**
 * Pointer Events Control
 *
 * Controls whether elements can be the target of pointer events.
 * Useful for overlays, disabled states, and complex layouts.
 */

.pointer-events-none {
  pointer-events: var(--mico-pointer-events-none);
}

.pointer-events-auto {
  pointer-events: var(--mico-pointer-events-auto);
}

/**
 * User Select Control
 *
 * Controls text selection behavior for better user experience.
 */

.user-select-none {
  -webkit-user-select: var(--mico-user-select-none);
  -moz-user-select: var(--mico-user-select-none);
  user-select: var(--mico-user-select-none);
}

.user-select-text {
  -webkit-user-select: var(--mico-user-select-text);
  -moz-user-select: var(--mico-user-select-text);
  user-select: var(--mico-user-select-text);
}

.user-select-all {
  -webkit-user-select: var(--mico-user-select-all);
  -moz-user-select: var(--mico-user-select-all);
  user-select: var(--mico-user-select-all);
}

.user-select-auto {
  -webkit-user-select: var(--mico-user-select-auto);
  -moz-user-select: var(--mico-user-select-auto);
  user-select: var(--mico-user-select-auto);
}

/* ========================================================================== */

/* PERFORMANCE OPTIMIZATION                                                  */

/* ========================================================================== */

/**
 * Will Change Utilities
 *
 * Provides performance hints to the browser about what properties will change.
 * Use sparingly as they can consume more resources if overused.
 */

.will-change-auto {
  will-change: var(--mico-will-change-auto);
}

.will-change-transform {
  will-change: var(--mico-will-change-transform);
}

.will-change-opacity {
  will-change: var(--mico-will-change-opacity);
}

.will-change-scroll {
  will-change: var(--mico-will-change-scroll);
}

/* ========================================================================== */

/* LAYOUT BLEEDING EFFECTS                                                   */

/* ========================================================================== */

/**
 * Bleed Utilities
 *
 * Creates full-bleed and column-bleed effects that extend beyond container bounds.
 * Useful for hero sections, backgrounds, and visual emphasis.
 */

/* Full viewport bleed */

.bleed-full {
  width: 100vw;
  margin-left: calc(50% - 50vw);
  margin-right: calc(50% - 50vw);
}

.bleed-full-left {
  width: 100vw !important;
  margin-left: calc(50% - 50vw);
}

.bleed-full-right {
  width: 100vw !important;
  margin-right: calc(50% - 50vw);
}

/* Column bleed with configurable offsets */

.bleed-column {
  margin-left: calc(var(--mico-bleed-offset-md) * -1);
  margin-right: calc(var(--mico-bleed-offset-md) * -1);
}

.bleed-column-left {
  margin-left: calc(var(--mico-bleed-offset-sm) * -1);
}

.bleed-column-right {
  margin-right: calc(var(--mico-bleed-offset-sm) * -1);
}

.bleed-column-sm {
  margin-left: calc(var(--mico-bleed-offset-sm) * -1);
  margin-right: calc(var(--mico-bleed-offset-sm) * -1);
}

.bleed-column-lg {
  margin-left: calc(var(--mico-bleed-offset-lg) * -1);
  margin-right: calc(var(--mico-bleed-offset-lg) * -1);
}

/* Horizontal only bleed */

.bleed-x {
  margin-left: calc(var(--mico-bleed-offset-md) * -1);
  margin-right: calc(var(--mico-bleed-offset-md) * -1);
}

/* Vertical only bleed */

.bleed-y {
  margin-top: calc(var(--mico-bleed-offset-md) * -1);
  margin-bottom: calc(var(--mico-bleed-offset-md) * -1);
}

/* ========================================================================== */

/* CSS MASKING & VISUAL EFFECTS                                              */

/* ========================================================================== */

/**
 * Mask Utilities
 *
 * Applies CSS masks for fade effects and visual transitions.
 * Useful for creating smooth visual boundaries and focus effects.
 */

/* Directional fade masks */

.mask-fade-top {
  -webkit-mask-image: var(--mico-mask-fade-to-top);
  mask-image: var(--mico-mask-fade-to-top);
}

.mask-fade-bottom {
  -webkit-mask-image: var(--mico-mask-fade-to-bottom);
  mask-image: var(--mico-mask-fade-to-bottom);
}

.mask-fade-left {
  -webkit-mask-image: var(--mico-mask-fade-to-left);
  mask-image: var(--mico-mask-fade-to-left);
}

.mask-fade-right {
  -webkit-mask-image: var(--mico-mask-fade-to-right);
  mask-image: var(--mico-mask-fade-to-right);
}

/* Fade intensity variations */

.mask-fade-short {
  -webkit-mask-image: var(--mico-mask-fade-short);
  mask-image: var(--mico-mask-fade-short);
}

.mask-fade-long {
  -webkit-mask-image: var(--mico-mask-fade-long);
  mask-image: var(--mico-mask-fade-long);
}

/* Remove mask */

.mask-none {
  -webkit-mask-image: var(--mico-value-none);
  mask-image: var(--mico-value-none);
}

/* ========================================================================== */

/* BROWSER COMPATIBILITY HELPERS                                             */

/* ========================================================================== */

/**
 * Scrollbar Styling
 *
 * Provides consistent scrollbar styling across browsers.
 * Note: Limited support in Firefox.
 */

.scrollbar-thin {
  scrollbar-width: thin;
}

.scrollbar-none {
  scrollbar-width: var(--mico-value-none);
  -ms-overflow-style: var(--mico-value-none);
}

.scrollbar-none::-webkit-scrollbar {
  display: var(--mico-value-none);
}

/**
 * Webkit Scrollbar Styling
 *
 * Detailed scrollbar customization for Webkit browsers.
 */

.scrollbar-custom::-webkit-scrollbar {
  width: var(--mico-size-12);
  height: var(--mico-size-12);
}

.scrollbar-custom::-webkit-scrollbar-track {
  background: var(--mico-color-gray-5xlight);
  border-radius: var(--mico-radius-md);
}

.scrollbar-custom::-webkit-scrollbar-thumb {
  background: var(--mico-color-gray-2xlight);
  border-radius: var(--mico-radius-md);
}

.scrollbar-custom::-webkit-scrollbar-thumb {
  background: var(--mico-color-gray);
}

/**
 * Touch Action Control
 *
 * Controls touch behavior for better mobile experience.
 */

.touch-auto {
  touch-action: auto;
}

.touch-none {
  touch-action: var(--mico-value-none);
}

.touch-pan-x {
  touch-action: pan-x;
}

.touch-pan-y {
  touch-action: pan-y;
}

.touch-manipulation {
  touch-action: manipulation;
}

/* ========================================================================== */

/* ACCESSIBILITY & MEDIA QUERIES                                             */

/* ========================================================================== */

/**
 * High Contrast Mode Support
 *
 * Enhanced visibility for high contrast environments.
 */

@media (prefers-contrast: high) {
  .skip-link {
    border: var(--mico-border-width-2) solid currentColor;
  }

  .mask-fade-top,
  .mask-fade-bottom,
  .mask-fade-left,
  .mask-fade-right,
  .mask-fade-short,
  .mask-fade-long {
    -webkit-mask-image: var(--mico-value-none);
    mask-image: var(--mico-value-none);
  }
}

/**
 * Reduced Motion Support
 *
 * Respects user preferences for reduced motion.
 */

@media (prefers-reduced-motion: reduce) {
  .skip-link {
    transition: var(--mico-value-none);
  }

  .will-change-transform,
  .will-change-opacity,
  .will-change-scroll {
    will-change: var(--mico-will-change-auto);
  }
}

/**
 * Print Media Support
 *
 * Optimized styles for print media.
 */

@media print {
  .skip-link {
    display: var(--mico-value-none);
  }

  .mask-fade-top,
  .mask-fade-bottom,
  .mask-fade-left,
  .mask-fade-right,
  .mask-fade-short,
  .mask-fade-long {
    -webkit-mask-image: var(--mico-value-none);
    mask-image: var(--mico-value-none);
  }

  .bleed-full,
  .bleed-column,
  .bleed-column-sm,
  .bleed-column-lg,
  .bleed-x,
  .bleed-y {
    margin: var(--mico-value-0);
    width: var(--mico-value-auto);
  }
}

/* ====================================================================== */

/* MEDIA AND CONTENT ELEMENTS                                            */

/* ====================================================================== */

/**
 * Tables
 * Consistent and accessible table styling
 */

table {
  border-collapse: collapse;
  width: 100%;
  margin-bottom: var(--mico-size-16);
  border-radius: var(--mico-radius-md);
  overflow: hidden;
}

th, td {
  border: 1px solid var(--mico-value-current);
  padding: var(--mico-size-12, 12px);
  text-align: left;
}

th {
  background-color: var(--mico-value-current);
  font-weight: var(--mico-fw-600);
  color: var(--mico-value-current);
}

/**
 * Horizontal Rules
 * Semantic section dividers
 */

hr {
  border: none;
  border-top: 1px solid var(--mico-value-current);
  margin: var(--mico-size-32, 32px) 0;
}

/**
 * Media Elements
 * Responsive images and media
 */

img, picture, svg, video {
  display: block;
  max-width: 100%;
  height: auto;
  object-fit: cover;
  background-size: cover;
  background-repeat: no-repeat;
  font-style: italic;
}

.img-bg{
position: relative;
isolation: isolate;

&img:first-of-type{
position:absolute;
inset: 0;
z-index: -1;
width: 100%;
height: 100%;
}
}

/**
 * Form Elements
 * Basic form styling
 */

input, textarea, select {
  font-size: 1rem;
  margin-bottom: var(--mico-size-16);
  font-family: inherit;
}

/**
 * Figures and Captions
 * Semantic content grouping
 */

figure {
  margin: var(--mico-size-24, 24px) 0;
}

figcaption {
  font-style: italic;
  text-align: center;
  color: var(--mico-value-current);
  font-size: var(--mico-fs-xs, 0.875rem);
  margin-top: var(--mico-size-8, 8px);
}

/* ========================================================================== */

/* TRANSFORM STATE UTILITIES                                                 */

/* ========================================================================== */

/**
 * Transform States
 *
 * These utilities apply transforms on hover, focus, and active states.
 */

/* Hover Effects */

.translate-up-xs { transform: translateY(-1.8px); }

.translate-up-sm { transform: translateY(-2.5px); }

.translate-up-md { transform: translateY(-3.8px); }

.translate-up-lg { transform: translateY(-4.8px); }

.translate-up-xl { transform: translateY(-5.8px); }

.translate-down-xs { transform: translateY(1.8px); }

.translate-down-sm { transform: translateY(2.5px); }

.translate-down-md { transform: translateY(3.8px); }

.translate-down-lg { transform: translateY(4.8px); }

.translate-down-xl { transform: translateY(5.8px); }

.scale-up-xs { transform: scale(0.0990); }

.scale-up-sm { transform: scale(1.05); }

.scale-up-md { transform: scale(2.05); }

.scale-up-lg { transform: scale(3.05); }

.scale-up-xl { transform: scale(4.05); }

.scale-down-xs { transform: scale(-0.05); }

.scale-down-sm { transform: scale(-1.05); }

.scale-down-md { transform: scale(-2.05); }

.scale-down-lg { transform: scale(-3.05); }

.scale-down-xl { transform: scale(-4.05); }

.rotate-l-xs { transform: rotate(-1deg); }

.rotate-l-sm { transform: rotate(-3deg); }

.rotate-l-md { transform: rotate(-6deg); }

.rotate-l-lg { transform: rotate(-9deg); }

.rotate-l-xl { transform: rotate(-12deg); }

.rotate-r-xs { transform: rotate(1deg); }

.rotate-r-sm { transform: rotate(3deg); }

.rotate-r-md { transform: rotate(6deg); }

.rotate-r-lg { transform: rotate(9deg); }

.rotate-r-xl { transform: rotate(12deg); }

.rotate-l-25 { transform: rotate(-25deg); }

.rotate-l-45 { transform: rotate(-45deg); }

.rotate-l-90 { transform: rotate(-90deg); }

.rotate-l-180 { transform: rotate(-180deg); }

.rotate-l-360 { transform: rotate(-360deg); }

.rotate-r-25 { transform: rotate(25deg); }

.rotate-r-45 { transform: rotate(45deg); }

.rotate-r-90 { transform: rotate(90deg); }

.rotate-r-180 { transform: rotate(180deg); }

.rotate-r-360 { transform: rotate(360deg); }

/* Focus Effects */

.translate-up-xs { transform: translateY(-1.8px); }

.translate-up-sm { transform: translateY(-2.5px); }

.translate-up-md { transform: translateY(-3.8px); }

.translate-up-lg { transform: translateY(-4.8px); }

.translate-up-xl { transform: translateY(-5.8px); }

.translate-down-xs { transform: translateY(1.8px); }

.translate-down-sm { transform: translateY(2.5px); }

.translate-down-md { transform: translateY(3.8px); }

.translate-down-lg { transform: translateY(4.8px); }

.translate-down-xl { transform: translateY(5.8px); }

.scale-up-xs { transform: scale(0.05); }

.scale-up-sm { transform: scale(1.05); }

.scale-up-md { transform: scale(2.05); }

.scale-up-lg { transform: scale(3.05); }

.scale-up-xl { transform: scale(4.05); }

.scale-down-xs { transform: scale(-0.05); }

.scale-down-sm { transform: scale(-1.05); }

.scale-down-md { transform: scale(-2.05); }

.scale-down-lg { transform: scale(-3.05); }

.scale-down-xl { transform: scale(-4.05); }

.rotate-l-xs { transform: rotate(-1deg); }

.rotate-l-sm { transform: rotate(-3deg); }

.rotate-l-md { transform: rotate(-6deg); }

.rotate-l-lg { transform: rotate(-9deg); }

.rotate-l-xl { transform: rotate(-12deg); }

.rotate-r-xs { transform: rotate(1deg); }

.rotate-r-sm { transform: rotate(3deg); }

.rotate-r-md { transform: rotate(6deg); }

.rotate-r-lg { transform: rotate(9deg); }

.rotate-r-xl { transform: rotate(12deg); }

.rotate-l-25 { transform: rotate(-25deg); }

.rotate-l-45 { transform: rotate(-45deg); }

.rotate-l-90 { transform: rotate(-90deg); }

.rotate-l-180 { transform: rotate(-180deg); }

.rotate-l-360 { transform: rotate(-360deg); }

.rotate-r-25 { transform: rotate(25deg); }

.rotate-r-45 { transform: rotate(45deg); }

.rotate-r-90 { transform: rotate(90deg); }

.rotate-r-180 { transform: rotate(180deg); }

.rotate-r-360 { transform: rotate(360deg); }

/* Active Effects */

.translate-up-xs { transform: translateY(-1.8px); }

.translate-up-sm { transform: translateY(-2.5px); }

.translate-up-md { transform: translateY(-3.8px); }

.translate-up-lg { transform: translateY(-4.8px); }

.translate-up-xl { transform: translateY(-5.8px); }

.translate-down-xs { transform: translateY(1.8px); }

.translate-down-sm { transform: translateY(2.5px); }

.translate-down-md { transform: translateY(3.8px); }

.translate-down-lg { transform: translateY(4.8px); }

.translate-down-xl { transform: translateY(5.8px); }

.scale-up-xs { transform: scale(0.05); }

.scale-up-sm { transform: scale(1.05); }

.scale-up-md { transform: scale(2.05); }

.scale-up-lg { transform: scale(3.05); }

.scale-up-xl { transform: scale(4.05); }

.scale-down-xs { transform: scale(-0.05); }

.scale-down-sm { transform: scale(-1.05); }

.scale-down-md { transform: scale(-2.05); }

.scale-down-lg { transform: scale(-3.05); }

.scale-down-xl { transform: scale(-4.05); }

.rotate-l-xs { transform: rotate(-1deg); }

.rotate-l-sm { transform: rotate(-3deg); }

.rotate-l-md { transform: rotate(-6deg); }

.rotate-l-lg { transform: rotate(-9deg); }

.rotate-l-xl { transform: rotate(-12deg); }

.rotate-r-xs { transform: rotate(1deg); }

.rotate-r-sm { transform: rotate(3deg); }

.rotate-r-md { transform: rotate(6deg); }

.rotate-r-lg { transform: rotate(9deg); }

.rotate-r-xl { transform: rotate(12deg); }

.rotate-l-25 { transform: rotate(-25deg); }

.rotate-l-45 { transform: rotate(-45deg); }

.rotate-l-90 { transform: rotate(-90deg); }

.rotate-l-180 { transform: rotate(-180deg); }

.rotate-l-360 { transform: rotate(-360deg); }

.rotate-r-25 { transform: rotate(25deg); }

.rotate-r-45 { transform: rotate(45deg); }

.rotate-r-90 { transform: rotate(90deg); }

.rotate-r-180 { transform: rotate(180deg); }

.rotate-r-360 { transform: rotate(360deg); }

/* ========================================================================== */

/* OPACITY STATE UTILITIES                                                   */

/* ========================================================================== */

/**
 * Opacity States
 *
 * These utilities change opacity on hover, focus, and active states.
 */

/* Hover Opacity */

.opacity-0p,.opacity-none { opacity: 0 !important; }

.opacity-10p { opacity: 0.10 !important; }

.opacity-20p { opacity: 0.20 !important; }

.opacity-30p { opacity: 0.30 !important; }

.opacity-40p { opacity: 0.40 !important; }

.opacity-50p { opacity: 0.50 !important; }

.opacity-60p { opacity: 0.60 !important; }

.opacity-70p { opacity: 0.70 !important; }

.opacity-80p { opacity: 0.80 !important; }

.opacity-90p { opacity: 0.90 !important; }

.opacity-100p { opacity: 1 !important; }

/* ========================================================================== */

/* USAGE EXAMPLES AND DOCUMENTATION                                          */

/* ========================================================================== */

/**
 * USAGE EXAMPLES:
 *
 * 1. Accessible skip link:
 *    <a href="#main" class="skip-link">Skip to main content</a>
 *
 * 2. Screen reader only text:
 *    <span class="sr-only">This text is only for screen readers</span>
 *
 * 3. Custom form element:
 *    <select class="appearance-none">...</select>
 *
 * 4. Disabled overlay:
 *    <div class="pointer-events-none">...</div>
 *
 * 5. Performance optimized element:
 *    <div class="will-change-transform">...</div>
 *
 * 6. Full bleed hero section:
 *    <section class="bleed-full">...</section>
 *
 * 7. Fade effect:
 *    <div class="mask-fade-bottom">...</div>
 *
 * 8. Custom scrollbar:
 *    <div class="scrollbar-custom overflow-auto">...</div>
 *
 * ACCESSIBILITY NOTES:
 * - Always include skip links for keyboard navigation
 * - Use .sr-only for descriptive text that aids screen readers
 * - Test with high contrast mode and reduced motion preferences
 * - Ensure touch targets are appropriately sized for mobile
 */

/**
 * Mico CSS Framework - Button & Link Utilities
 *
 * This file provides comprehensive button and link styling utilities following
 * the guidelines for modern, accessible, and flexible button design.
 *
 * FEATURES:
 * - Base button class with consistent styling
 * - Color variants (primary, secondary, success, etc.)
 * - Style modifiers (outline, text, ghost)
 * - Size modifiers (xs, sm, md, lg, xl)
 * - Shape modifiers (pill, square, circle)
 * - Shadow modifiers for depth
 * - State modifiers (active, loading, disabled)
 * - Layout modifiers (block, icon support)
 * - Link utilities with advanced underline control
 *
 * USAGE:
 * Basic: .btn .btn-primary
 * Variants: .btn .btn-secondary .btn-outline
 * Sizes: .btn .btn-primary .btn-lg
 * Links: .link-primary .link-underline-thick
 */

/* ========================================================================== */

/* BASE BUTTON CLASS                                                         */

/* ========================================================================== */

/**
 * Base Button Class
 *
 * The foundational class for all button styling. Provides consistent
 * base styles that work across all button variants.
 */

.btn,button {
  /* Layout and positioning */
  position: relative;
  display: var(--mico-display-inline-block);

  /* Typography */
  font-size: var(--mico-fs-sm);
  font-family: var(--mico-value-inherit);
  font-weight: var(--mico-fw-400);
  line-height: var(--mico-lh-sm);
  text-align: center;
  text-decoration: var(--mico-value-none) !important;
  white-space: nowrap;

  /* Spacing */
  padding: var(--mico-size-16) var(--mico-size-32);
  margin: var(--mico-value-0);

  /* Borders and appearance */
  border: var(--mico-border-width-xxs) solid transparent;
  border-radius: var(--mico-btn-radius-md);

  /* Interaction */
  cursor: var(--mico-cursor-pointer);
  user-select: var(--mico-user-select-none);

  /* Accessibility */
  vertical-align: middle;

  /* Prevent text selection and improve touch targets */
  -webkit-tap-highlight-color: transparent;
  touch-action: manipulation;

  transition-property: all !important;
  transition-duration: var(--mico-transition-duration-normal);
  transition-timing-function: var(--mico-ease-in-out);
  transition-delay: var(--mico-value-0);
}

/* ========================================================================== */

/* BUTTON COLOR VARIANTS                                                     */

/* ========================================================================== */

/**
 * Button Color Variants
 *
 * These classes control the background color, text color, and border color
 * for different button purposes and emphasis levels.
 */

/* Brand Colors - OKLCH System */

.btn-primary {
  background-color: var(--mico-color-primary) ;
  border-color: var(--mico-color-primary-light) ;
  color: var(--mico-color-white) !important;
}

.btn-secondary {
  background-color: var(--mico-color-secondary) ;
  border-color: var(--mico-color-secondary-light) ;
  color: var(--mico-color-white) !important;
}

.btn-accent {
  background-color: var(--mico-color-accent) ;
  border-color: var(--mico-color-accent-light) ;
  color: var(--mico-color-white) !important;
}

/* State Colors - OKLCH System */

.btn-success {
  background-color: var(--mico-color-success) ;
  border-color: var(--mico-color-success) ;
}

.btn-danger {
  background-color: var(--mico-color-error) ;
  border-color: var(--mico-color-error) ;
}

.btn-warning {
  background-color: var(--mico-color-warning) ;
  border-color: var(--mico-color-warning) ;
}

.btn-info {
  background-color: var(--mico-color-info) ;
  border-color: var(--mico-color-info) ;
}

/* Neutral Colors - OKLCH System */

.btn-light {
  background-color: var(--mico-color-white-5xlight) !important;
  color: var(--mico-color-white-5xdark) !important;
  border-color: var(--mico-color-white-2xlight) !important;
}

.btn-dark {
  background-color: var(--mico-color-gray-6xdark) !important;
  color: var(--mico-color-white) !important;
  border-color: var(--mico-color-gray-6xdark) !important;
}

.btn-transparent {
  background-color: var(--mico-value-transparent) !important;
  color: var(--mico-value-inherit) !important;
  border-color: var(--mico-value-transparent) !important;
}

/* ========================================================================== */

/* BUTTON STYLE MODIFIERS                                                    */

/* ========================================================================== */

/**
 * Button Style Modifiers
 *
 * These classes modify the visual style of button variants.
 * They should be combined with color variant classes.
 */

/* Outline Style - Transparent background with colored border and text */

.btn-outline {
  background-color: var(--mico-value-transparent) !important;
  border-style: var(--mico-border-solid);
  border-width: var(--mico-border-width-xxs);
}

.btn-outline-primary {
  color: var(--color-text-primary,var(--mico-color-primary-dark));
  border-color: var(--color-border,var(--mico-color-primary-dark));
}

.btn-outline-secondary {
  color: var(--color-text-primary,var(--mico-color-secondary-dark));
  border-color: var(--color-border,var(--mico-color-secondary-dark));
}

.btn-outline-accent {
  color: var(--color-text-primary,var(--mico-color-accent-dark));
  border-color: var(--color-border,var(--mico-color-accent-dark));
}

.btn-outline-success {
  color: var(--mico-color-success-dark);
  border-color: var(--mico-color-success-dark);
}

.btn-outline-danger {
  color: var(--mico-color-error-dark);
  border-color: var(--mico-color-error-dark);
}

.btn-outline-warning {
  color: var(--mico-color-warning-dark);
  border-color: var(--mico-color-warning-dark);
}

.btn-outline-info {
  color: var(--mico-color-info-dark);
  border-color: var(--mico-color-info-dark);
}

.btn-outline-light {
  color: var(--mico-color-white-3xlight) !important;
  border-color: var(--mico-color-white-3xlight) !important;
}

.btn-outline-dark {
  color: var(--mico-color-accent-5xdark) !important;
  border-color: var(--mico-color-gray-5xdark) !important;
}

/* Text Style - No background or border, only colored text */

.btn-text {
  background-color: var(--mico-value-transparent) !important;
  border-color: var(--mico-value-transparent);
}

/* Ghost Style - Minimal styling with subtle hover effects */

.btn-ghost {
  background-color: var(--mico-value-transparent) !important;
  border-color: var(--mico-value-transparent);
  color: var(--mico-color-gray-3xdark);

  &:hover{
    background-color: var(--mico-color-accent-whisper);
  }
}

/* ========================================================================== */

/* BUTTON SIZE MODIFIERS                                                     */

/* ========================================================================== */

/**
 * Button Size Modifiers
 *
 * These classes control the padding and font size of buttons.
 * The .btn class provides the default/medium size.
 */

.btn-xs {
  padding: var(--mico-btn-padding-xs) !important;
  font-size: var(--mico-btn-font-size-xs) !important;
}

.btn-sm {
  padding: var(--mico-btn-padding-sm) !important;
  font-size: var(--mico-btn-font-size-sm) !important;
}

.btn-lg {
  padding: var(--mico-btn-padding-lg) !important;
  font-size: var(--mico-btn-font-size-lg) !important;
}

.btn-xl {
  padding: var(--mico-btn-padding-xl) !important;
  font-size: var(--mico-btn-font-size-xl) !important;
}

/* ========================================================================== */

/* BUTTON SHAPE MODIFIERS                                                    */

/* ========================================================================== */

/**
 * Button Shape Modifiers
 *
 * These classes control the border-radius of buttons.
 */

.btn-pill {
  border-radius: var(--mico-btn-radius-pill) !important;
}

.btn-square {
  border-radius: var(--mico-btn-radius-square) !important;
}

.btn-circle {
  border-radius: var(--mico-btn-radius-circle) !important;
  width: var(--mico-btn-icon-only-size) !important;
  height: var(--mico-btn-icon-only-size) !important;
  padding: var(--mico-value-0) !important;
  display: var(--mico-display-inline-flex) !important;
  align-items: center !important;
  justify-content: center !important;
}

/* ========================================================================== */

/* BUTTON SHADOW MODIFIERS                                                   */

/* ========================================================================== */

/**
 * Button Shadow Modifiers
 *
 * These classes apply box-shadow for depth and elevation.
 */

.btn-shadow {
  box-shadow: var(--mico-btn-shadow-md) !important;
}

.btn-shadow-sm {
  box-shadow: var(--mico-btn-shadow-sm) !important;
}

.btn-shadow-lg {
  box-shadow: var(--mico-btn-shadow-lg) !important;
}

.btn-shadow-none {
  box-shadow: var(--mico-btn-shadow-none) !important;
}

/* ========================================================================== */

/* BUTTON STATE MODIFIERS                                                    */

/* ========================================================================== */

/**
 * Button State Modifiers
 *
 * These classes provide visual feedback for different button states.
 */

/* Active State */

.btn-active {
  transform: translateY(1px) !important;
  box-shadow: var(--mico-shadow-sm) !important;
}

/* Loading State */

.btn-loading:active {
  color: var(--mico-value-transparent) !important;
  pointer-events: var(--mico-pointer-events-none) !important;
  position: relative !important;
}

.btn-loading::after {
  content: "";
  position: absolute;
  width: 1em;
  height: 1em;
  top: 50%;
  left: 50%;
  margin-top: -0.5em;
  margin-left: -0.5em;
  border: var(--mico-border-width-2) solid rgba(255, 255, 255, 0.3);
  border-top-color: currentColor;
  border-radius: var(--mico-radius-full);
  animation: btn-loading-spinner 1s linear infinite;
}

@keyframes btn-loading-spinner {
  from { transform: rotate(0turn); }
  to { transform: rotate(1turn); }
}

/* Disabled State */

.btn:disabled,
.btn-disabled
 {
  opacity: var(--mico-opacity-50);
  cursor: var(--mico-cursor-not-allowed);
  pointer-events: var(--mico-pointer-events-none);
}

/* ========================================================================== */

/* BUTTON LAYOUT MODIFIERS                                                   */

/* ========================================================================== */

/**
 * Button Layout Modifiers
 *
 * These classes control button layout and icon integration.
 */

/* Block Button */

.btn-block {
  display: var(--mico-display-block);
  width: var(--mico-full);
}

/* Icon Buttons */

.btn-icon {
  display: var(--mico-display-inline-flex);
  align-items: center;
  justify-content: center;
  gap: var(--mico-btn-icon-gap);
}

.btn-icon-left {
  display: var(--mico-display-inline-flex);
  align-items: center;
  gap: var(--mico-btn-icon-gap);
}

.btn-icon-right {
  display: var(--mico-display-inline-flex);
  align-items: center;
  flex-direction: row-reverse;
  gap: var(--mico-btn-icon-gap);
}

.btn-icon-only {
  padding: var(--mico-size-12);
  width: var(--mico-btn-icon-only-size);
  height: var(--mico-btn-icon-only-size);
  display: var(--mico-display-inline-flex);
  align-items: center;
  justify-content: center;
}

/* ========================================================================== */

/* BUTTON GROUPING UTILITIES                                                 */

/* ========================================================================== */

/**
 * Button Grouping Utilities
 *
 * These classes create grouped button layouts.
 */

/* Horizontal Button Group */

.btn-group {
  display: var(--mico-display-inline-flex);
  vertical-align: middle;
}

.btn-group > .btn {
  position: relative;
  flex: 1 1 auto;
  margin: var(--mico-value-0);
}

.btn-group > .btn:not(:first-child) {
  margin-left: calc(var(--mico-border-width-1) * -1);
  border-top-left-radius: var(--mico-value-0);
  border-bottom-left-radius: var(--mico-value-0);
}

.btn-group > .btn:not(:last-child) {
  border-top-right-radius: var(--mico-value-0);
  border-bottom-right-radius: var(--mico-value-0);
}

.btn-group > .btn:hover,
.btn-group > .btn:focus,
.btn-group > .btn:active {
  z-index: 1;
}

/* Vertical Button Group */

.btn-group-vertical {
  display: var(--mico-display-inline-flex);
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
}

.btn-group-vertical > .btn {
  width: var(--mico-full);
  margin: var(--mico-value-0);
}

.btn-group-vertical > .btn:not(:first-child) {
  margin-top: calc(var(--mico-border-width-1) * -1);
  border-top-left-radius: var(--mico-value-0);
  border-top-right-radius: var(--mico-value-0);
}

.btn-group-vertical > .btn:not(:last-child) {
  border-bottom-left-radius: var(--mico-value-0);
  border-bottom-right-radius: var(--mico-value-0);
}

/* Button Toolbar */

.btn-toolbar {
  display: var(--mico-display-flex);
  flex-wrap: wrap;
  justify-content: flex-start;
  gap: var(--mico-size-8);
}

/* ========================================================================== */

/* LINK UTILITIES                                                            */

/* ========================================================================== */

/**
 * Link Color Modifiers
 *
 * These classes control the color of links for different purposes.
 */

/* Brand Link Colors */

.link-primary { color: var(--mico-color-primary); }

.link-secondary { color: var(--mico-color-secondary); }

.link-accent { color: var(--mico-color-accent); }

/* State Link Colors */

.link-success { color: var(--mico-color-success); }

.link-danger { color: var(--mico-color-error); }

.link-warning { color: var(--mico-color-warning); }

.link-info { color: var(--mico-color-info); }

/* Neutral Link Colors */

.link-light { color: var(--mico-color-gray-3xlight); }

.link-dark { color: var(--mico-color-gray-5xdark); }

.link-muted { color: var(--mico-color-gray-3xdark); }

.link-body { color: var(--mico-value-inherit); }

/**
 * Link Underline Control
 *
 * These classes control the presence and behavior of link underlines.
 */

/* Basic Underline Control */

.link-underline { text-decoration: underline; }

.link-no-underline { text-decoration: var(--mico-value-none); }

.link-underline-hover:hover { text-decoration: underline; }

.link-no-underline-hover:hover { text-decoration: var(--mico-value-none); }

/* Underline Thickness */

.link-underline-auto { text-decoration-thickness: var(--mico-decoration-thickness-auto); }

.link-underline-from-font { text-decoration-thickness: var(--mico-decoration-thickness-from-font); }

.link-underline-thin { text-decoration-thickness: var(--mico-decoration-thickness-1); }

.link-underline-normal { text-decoration-thickness: var(--mico-decoration-thickness-2); }

.link-underline-thick { text-decoration-thickness: var(--mico-decoration-thickness-4); }

/* Underline Offset */

.link-underline-offset-auto { text-underline-offset: var(--mico-underline-offset-auto); }

.link-underline-offset-sm { text-underline-offset: var(--mico-underline-offset-1); }

.link-underline-offset-md { text-underline-offset: var(--mico-underline-offset-2); }

.link-underline-offset-lg { text-underline-offset: var(--mico-underline-offset-4); }

/* Underline Style */

.link-underline-solid { text-decoration-style: var(--mico-decoration-style-solid); }

.link-underline-dotted { text-decoration-style: var(--mico-decoration-style-dotted); }

.link-underline-dashed { text-decoration-style: var(--mico-decoration-style-dashed); }

.link-underline-wavy { text-decoration-style: var(--mico-decoration-style-wavy); }

.link-underline-double { text-decoration-style: var(--mico-decoration-style-double); }

/* Underline Color */

.link-underline-color-current { text-decoration-color: currentColor; }

.link-underline-color-transparent { text-decoration-color: var(--mico-value-transparent); }

.link-underline-color-primary { text-decoration-color: var(--mico-color-primary); }

.link-underline-color-secondary { text-decoration-color: var(--mico-color-secondary); }

/**
 * Link Opacity Control
 *
 * These classes control link opacity for visual hierarchy.
 */

.link-opacity-100 { opacity: var(--mico-opacity-100); }

.link-opacity-75 { opacity: var(--mico-opacity-75); }

.link-opacity-50 { opacity: var(--mico-opacity-50); }

.link-opacity-25 { opacity: var(--mico-opacity-25); }

.link-hover-opacity-100:hover { opacity: var(--mico-opacity-100); }

.link-hover-opacity-75:hover { opacity: var(--mico-opacity-75); }

/**
 * Link Layout Control
 *
 * These classes control link display and layout behavior.
 */

.link-reset {
  color: var(--mico-value-inherit);
  text-decoration: var(--mico-value-none);
}

.link-block { display: var(--mico-display-block); }

.link-inline-block { display: var(--mico-display-inline-block); }

/* ========================================================================== */

/* ACCESSIBILITY & BROWSER SUPPORT                                           */

/* ========================================================================== */

/**
 * Focus Styles
 *
 * Accessible focus indicators for keyboard navigation.
 */

.btn:focus-visible {
  outline: var(--mico-border-width-2) solid var(--mico-color-primary);
  outline-offset: var(--mico-size-2);
}

/**
 * High Contrast Mode Support
 *
 * Enhanced visibility for high contrast environments.
 */

@media (prefers-contrast: high) {
  .btn {
    border: var(--mico-border-width-2) solid currentColor;
  }

  .btn-outline {
    border-width: var(--mico-border-width-4);
  }

  .link-underline {
    text-decoration-thickness: var(--mico-decoration-thickness-2);
  }
}

/**
 * Reduced Motion Support
 *
 * Respects user preferences for reduced motion.
 */

@media (prefers-reduced-motion: reduce) {
  .btn,
  .btn::after,
  .btn::before {
    transition: var(--mico-value-none);
    animation: var(--mico-value-none);
  }

  .btn-loading::after {
    animation: var(--mico-value-none);
    border: var(--mico-border-width-2) solid currentColor;
    border-right-color: var(--mico-value-transparent);
  }

}

/**
 * Print Media Support
 *
 * Optimized styles for print media.
 */

@media print {
  .btn {
    background: var(--mico-value-transparent) !important;
    color: var(--mico-color-black) !important;
    border: var(--mico-border-width-1) solid var(--mico-color-black) !important;
    box-shadow: var(--mico-value-none) !important;
  }

  .link-underline {
    text-decoration: underline !important;
  }
}

/* ========================================================================== */

/* USAGE EXAMPLES AND DOCUMENTATION                                          */

/* ========================================================================== */

/**
 * USAGE EXAMPLES:
 *
 * 1. Primary button with shadow:
 *    <button class="btn btn-primary btn-shadow">Save Changes</button>
 *
 * 2. Outline button with hover lift:
 *    <button class="btn btn-secondary btn-outline hover-btn-lift">Cancel</button>
 *
 * 3. Icon button:
 *    <button class="btn btn-primary btn-icon">
 *      <svg>...</svg> Download
 *    </button>
 *
 * 4. Button group:
 *    <div class="btn-group">
 *      <button class="btn btn-primary">Left</button>
 *      <button class="btn btn-primary">Middle</button>
 *      <button class="btn btn-primary">Right</button>
 *    </div>
 *
 * 5. Advanced link styling:
 *    <a href="#" class="link-primary link-underline-thick link-underline-offset-sm link-underline-wavy">
 *      Styled Link
 *    </a>
 *
 * 6. Loading button:
 *    <button class="btn btn-primary btn-loading">Processing...</button>
 */

/**
 * Mico CSS Framework - Border, Outline, Shadow & Ring Utilities
 *
 * This file provides comprehensive border and visual enhancement utilities:
 *
 * - Border width, style, and color control
 * - Border radius for rounded corners
 * - Outline utilities for accessibility and focus states
 * - Box shadow utilities for depth and elevation
 * - Ring utilities for focus indicators and highlights
 * - Divide utilities for separating child elements
 *
 * FEATURES:
 * - Complete border control (width, style, color, radius)
 * - Accessible outline and focus management
 * - Flexible shadow system for visual hierarchy
 * - Modern ring utilities using box-shadow
 * - Child element dividers with consistent styling
 *
 * USAGE:
 * Borders: .border, .border-xs, .border-primary
 * Radius: .rounded, .rounded-lg, .rounded-full
 * Outlines: .outline, .outline-xs, .outline-primary
 * Shadows: .shadow, .shadow-lg, .shadow-none
 * Rings: .ring, .ring-xs, .ring-primary
 * Dividers: .divide-y, .divide-x, .divide-gray-200
 */

/* ========================================================================== */

/* BORDER STYLE UTILITIES                                                    */

/* ========================================================================== */

/*
 * Border Style Control
 *
 * These utilities control the style of borders (solid, dashed, dotted, etc.).
 */

.border-solid  { border-style: var(--mico-border-solid) !important; }

.border-dashed { border-style: var(--mico-border-dashed) !important; }

.border-dotted { border-style: var(--mico-border-dotted) !important; }

.border-double { border-style: var(--mico-border-double) !important; }

.border-none   { border-style: var(--mico-border-none) !important; }

/* ========================================================================== */

/* BORDER WIDTH UTILITIES                                                    */

/* ========================================================================== */

/*
 * Border Width Control
 *
 * These utilities control the thickness of borders on all sides or specific sides.
 * Use .border-none to remove borders completely.
 */

/* All sides */

.border-0 { border-width: var(--mico-border-width-0) !important; }

.border-none { border-width: var(--mico-border-width-none) !important; }

.border-xxs  { border-width: var(--mico-border-width-xxs) !important; }

.border-xs { border-width: var(--mico-border-width-xs) !important; }

.border-sm { border-width: var(--mico-border-width-xs) !important; }

.border-md { border-width: var(--mico-border-width-md) !important; }

.border-solid-none { border-width: var(--mico-border-width-none) !important; border-style: var(--mico-border-solid) !important; }

.border-solid-xxs  { border-width: var(--mico-border-xxs) !important; border-style: var(--mico-border-solid) !important; }

.border-solid-xs { border-width: var(--mico-border-xs) !important; border-style: var(--mico-border-solid) !important; }

.border-solid-sm { border-width: var(--mico-border-sm) !important; border-style: var(--mico-border-solid) !important; }

.border-solid-md { border-width: var(--mico-border-md) !important; border-style: var(--mico-border-solid) !important; }

.border-dashed-none { border-width: var(--mico-border-width-none) !important; border-style: var(--mico-border-dashed) !important; }

.border-dashed-xxs  { border-width: var(--mico-border-xxs) !important; border-style: var(--mico-border-dashed) !important; }

.border-dashed-xs { border-width: var(--mico-border-xs) !important; border-style: var(--mico-border-dashed) !important; }

.border-dashed-sm { border-width: var(--mico-border-sm) !important; border-style: var(--mico-border-dashed) !important; }

.border-dashed-md { border-width: var(--mico-border-md) !important; border-style: var(--mico-border-dashed) !important; }

.border-dotted-none { border-width: var(--mico-border-width-none) !important; border-style: var(--mico-border-dotted) !important; }

.border-dotted-xxs  { border-width: var(--mico-border-xxs) !important; border-style: var(--mico-border-dotted) !important; }

.border-dotted-xs { border-width: var(--mico-border-xs) !important; border-style: var(--mico-border-dotted) !important; }

.border-dotted-sm { border-width: var(--mico-border-sm) !important; border-style: var(--mico-border-dotted) !important; }

.border-dotted-md { border-width: var(--mico-border-md) !important; border-style: var(--mico-border-dotted) !important; }

/* ========================================================================== */

/* BORDER WIDTH UTILITIES - INDIVIDUAL SIDES                                 */

/* Individual sides */

.border-solid-t-none { border-top-width: var(--mico-border-width-none) !important; border-top-style: var(--mico-border-solid) !important; }

.border-solid-t-xxs { border-top-width: var(--mico-border-xxs) !important; border-top-style: var(--mico-border-solid) !important; }

.border-solid-t-xs { border-top-width: var(--mico-border-xs) !important; border-top-style: var(--mico-border-solid) !important; }

.border-solid-t-sm { border-top-width: var(--mico-border-sm) !important; border-top-style: var(--mico-border-solid) !important; }

.border-solid-t-md { border-top-width: var(--mico-border-md) !important; border-top-style: var(--mico-border-solid) !important; }

.border-solid-r-none { border-right-width: var(--mico-border-width-none) !important; border-right-style: var(--mico-border-solid) !important; }

.border-solid-r-xxs { border-right-width: var(--mico-border-xxs) !important; border-right-style: var(--mico-border-solid) !important; }

.border-solid-r-xs { border-right-width: var(--mico-border-xs) !important; border-right-style: var(--mico-border-solid) !important; }

.border-solid-r-sm { border-right-width: var(--mico-border-sm) !important; border-right-style: var(--mico-border-solid) !important; }

.border-solid-r-md { border-right-width: var(--mico-border-md) !important; border-right-style: var(--mico-border-solid) !important; }

.border-solid-b-none { border-bottom-width: var(--mico-border-width-none) !important; border-bottom-style: var(--mico-border-solid) !important; }

.border-solid-b-xxs { border-bottom-width: var(--mico-border-xxs) !important; border-bottom-style: var(--mico-border-solid) !important; }

.border-solid-b-xs { border-bottom-width: var(--mico-border-xs) !important; border-bottom-style: var(--mico-border-solid) !important; }

.border-solid-b-sm { border-bottom-width: var(--mico-border-sm) !important; border-bottom-style: var(--mico-border-solid) !important; }

.border-solid-b-md { border-bottom-width: var(--mico-border-md) !important; border-bottom-style: var(--mico-border-solid) !important; }

.border-solid-l-none { border-left-width: var(--mico-border-width-none) !important; border-left-style: var(--mico-border-solid) !important; }

.border-solid-l-xxs { border-left-width: var(--mico-border-xxs) !important; border-left-style: var(--mico-border-solid) !important; }

.border-solid-l-xs { border-left-width: var(--mico-border-xs) !important; border-left-style: var(--mico-border-solid) !important; }

.border-solid-l-sm { border-left-width: var(--mico-border-sm) !important; border-left-style: var(--mico-border-solid) !important; }

.border-solid-l-md { border-left-width: var(--mico-border-md) !important; border-left-style: var(--mico-border-solid) !important; }

/* Horizontal and vertical */

.border-x-none { border-left-width: var(--mico-border-width-none) !important; border-right-width: var(--mico-border-width-none) !important; }

.border-x-xxs { border-left-width: var(--mico-border-xxs) !important; border-right-width: var(--mico-border-xxs) !important; }

.border-x-xs { border-left-width: var(--mico-border-xs) !important; border-right-width: var(--mico-border-xs) !important; }

.border-x-sm { border-left-width: var(--mico-border-sm) !important; border-right-width: var(--mico-border-sm) !important; }

.border-x-md { border-left-width: var(--mico-border-md) !important; border-right-width: var(--mico-border-md) !important; }

.border-y-none { border-top-width: var(--mico-border-width-none) !important; border-bottom-width: var(--mico-border-width-none) !important; }

.border-y-xxs { border-top-width: var(--mico-border-xxs) !important; border-bottom-width: var(--mico-border-xxs) !important; }

.border-y-xs { border-top-width: var(--mico-border-xs) !important; border-bottom-width: var(--mico-border-xs) !important; }

.border-y-sm { border-top-width: var(--mico-border-sm) !important; border-bottom-width: var(--mico-border-sm) !important; }

.border-y-md { border-top-width: var(--mico-border-md) !important; border-bottom-width: var(--mico-border-md) !important; }

/* ========================================================================== */

/* BORDER COLOR UTILITIES                                                    */

/* ========================================================================== */

/**
 * Border Color Control
 *
 * These utilities control the color of borders using the framework's color system.
 */

/* Brand Colors */

.border-primary   { border-color: var(--mico-color-primary) !important; }

.border-secondary { border-color: var(--mico-color-secondary) !important; }

.border-accent    { border-color: var(--mico-color-accent) !important; }

/* Primary Color Variations */

.border-primary-light { border-color: var(--mico-color-primary-light) !important; }

.border-primary-2xlight { border-color: var(--mico-color-primary-2xlight) !important; }

.border-primary-3xlight { border-color: var(--mico-color-primary-3xlight) !important; }

.border-primary-4xlight { border-color: var(--mico-color-primary-4xlight) !important; }

.border-primary-5xlight { border-color: var(--mico-color-primary-5xlight) !important; }

.border-primary-6xlight { border-color: var(--mico-color-primary-6xlight) !important; }

.border-primary-7xlight { border-color: var(--mico-color-primary-7xlight) !important; }

.border-primary-8xlight { border-color: var(--mico-color-primary-8xlight) !important; }

.border-primary-dark { border-color: var(--mico-color-primary-dark) !important; }

.border-primary-2xdark { border-color: var(--mico-color-primary-2xdark) !important; }

.border-primary-3xdark { border-color: var(--mico-color-primary-3xdark) !important; }

.border-primary-4xdark { border-color: var(--mico-color-primary-4xdark) !important; }

.border-primary-5xdark { border-color: var(--mico-color-primary-5xdark) !important; }

.border-primary-6xdark { border-color: var(--mico-color-primary-6xdark) !important; }

.border-primary-7xdark { border-color: var(--mico-color-primary-7xdark) !important; }

.border-primary-8xdark { border-color: var(--mico-color-primary-8xdark) !important; }

/* Secondary Color Variations */

.border-secondary-light { border-color: var(--mico-color-secondary-light) !important; }

.border-secondary-2xlight { border-color: var(--mico-color-secondary-2xlight) !important; }

.border-secondary-3xlight { border-color: var(--mico-color-secondary-3xlight) !important; }

.border-secondary-4xlight { border-color: var(--mico-color-secondary-4xlight) !important; }

.border-secondary-5xlight { border-color: var(--mico-color-secondary-5xlight) !important; }

.border-secondary-6xlight { border-color: var(--mico-color-secondary-6xlight) !important; }

.border-secondary-7xlight { border-color: var(--mico-color-secondary-7xlight) !important; }

.border-secondary-8xlight { border-color: var(--mico-color-secondary-8xlight) !important; }

.border-secondary-dark { border-color: var(--mico-color-secondary-dark) !important; }

.border-secondary-2xdark { border-color: var(--mico-color-secondary-2xdark) !important; }

.border-secondary-3xdark { border-color: var(--mico-color-secondary-3xdark) !important; }

.border-secondary-4xdark { border-color: var(--mico-color-secondary-4xdark) !important; }

.border-secondary-5xdark { border-color: var(--mico-color-secondary-5xdark) !important; }

.border-secondary-6xdark { border-color: var(--mico-color-secondary-6xdark) !important; }

.border-secondary-7xdark { border-color: var(--mico-color-secondary-7xdark) !important; }

.border-secondary-8xdark { border-color: var(--mico-color-secondary-8xdark) !important; }

/* Accent Color Variations */

.border-accent-light { border-color: var(--mico-color-accent-light) !important; }

.border-accent-2xlight { border-color: var(--mico-color-accent-2xlight) !important; }

.border-accent-3xlight { border-color: var(--mico-color-accent-3xlight) !important; }

.border-accent-4xlight { border-color: var(--mico-color-accent-4xlight) !important; }

.border-accent-5xlight { border-color: var(--mico-color-accent-5xlight) !important; }

.border-accent-6xlight { border-color: var(--mico-color-accent-6xlight) !important; }

.border-accent-7xlight { border-color: var(--mico-color-accent-7xlight) !important; }

.border-accent-8xlight { border-color: var(--mico-color-accent-8xlight) !important; }

.border-accent-dark { border-color: var(--mico-color-accent-dark) !important; }

.border-accent-2xdark { border-color: var(--mico-color-accent-2xdark) !important; }

.border-accent-3xdark { border-color: var(--mico-color-accent-3xdark) !important; }

.border-accent-4xdark { border-color: var(--mico-color-accent-4xdark) !important; }

.border-accent-5xdark { border-color: var(--mico-color-accent-5xdark) !important; }

.border-accent-6xdark { border-color: var(--mico-color-accent-6xdark) !important; }

.border-accent-7xdark { border-color: var(--mico-color-accent-7xdark) !important; }

.border-accent-8xdark { border-color: var(--mico-color-accent-8xdark) !important; }

/* State Colors */

.border-success { border-color: var(--mico-color-success) !important; }

.border-error   { border-color: var(--mico-color-error) !important; }

.border-warning { border-color: var(--mico-color-warning) !important; }

.border-info    { border-color: var(--mico-color-info) !important; }

/* Neutral Colors - OKLCH System */

.border-white { border-color: var(--mico-color-white) !important; }

.border-black { border-color: var(--mico-color-black) !important; }

/* Gray Scale - OKLCH System */

.border-gray { border-color: var(--mico-color-gray) !important; }

.border-gray-light { border-color: var(--mico-color-gray-light) !important; }

.border-gray-2xlight { border-color: var(--mico-color-gray-2xlight) !important; }

.border-gray-3xlight { border-color: var(--mico-color-gray-3xlight) !important; }

.border-gray-4xlight { border-color: var(--mico-color-gray-4xlight) !important; }

.border-gray-5xlight { border-color: var(--mico-color-gray-5xlight) !important; }

.border-gray-6xlight { border-color: var(--mico-color-gray-6xlight) !important; }

.border-gray-7xlight { border-color: var(--mico-color-gray-7xlight) !important; }

.border-gray-8xlight { border-color: var(--mico-color-gray-8xlight) !important; }

.border-gray-dark { border-color: var(--mico-color-gray-dark) !important; }

.border-gray-2xdark { border-color: var(--mico-color-gray-2xdark) !important; }

.border-gray-3xdark { border-color: var(--mico-color-gray-3xdark) !important; }

.border-gray-4xdark { border-color: var(--mico-color-gray-4xdark) !important; }

.border-gray-5xdark { border-color: var(--mico-color-gray-5xdark) !important; }

.border-gray-6xdark { border-color: var(--mico-color-gray-6xdark) !important; }

.border-gray-7xdark { border-color: var(--mico-color-gray-7xdark) !important; }

.border-gray-8xdark { border-color: var(--mico-color-gray-8xdark) !important; }

/* Extended Color Palette - OKLCH System */

.border-red { border-color: var(--mico-color-red) !important; }

.border-yellow { border-color: var(--mico-color-yellow) !important; }

.border-green { border-color: var(--mico-color-green) !important; }

.border-blue { border-color: var(--mico-color-blue) !important; }

.border-indigo { border-color: var(--mico-color-indigo) !important; }

.border-purple { border-color: var(--mico-color-purple) !important; }

.border-pink { border-color: var(--mico-color-pink) !important; }

/* Special Colors */

.border-transparent { border-color: var(--mico-value-transparent) !important; }

.border-current     { border-color: currentColor !important; }

/* ========================================================================== */

/* BORDER RADIUS UTILITIES                                                   */

/* ========================================================================== */

/**
 * Border Radius Control
 *
 * These utilities control the roundness of corners for visual design.
 */

/* All corners */

.rounded-none { border-radius: var(--mico-radius-none); }

.rounded-sm   { border-radius: var(--mico-radius-sm); }

.rounded-md   { border-radius: var(--mico-radius-md); }

.rounded-lg   { border-radius: var(--mico-radius-lg); }

.rounded-xl   { border-radius: var(--mico-radius-xl); }

.rounded-xxl  { border-radius: var(--mico-radius-xxl); }

.rounded-xxxl  { border-radius: var(--mico-radius-xxxl); }

.rounded-full { border-radius: var(--mico-radius-full); }

/* Individual corners */

.rounded-t-none { border-top-left-radius: var(--mico-radius-none); border-top-right-radius: var(--mico-radius-none); }

.rounded-t-sm   { border-top-left-radius: var(--mico-radius-sm); border-top-right-radius: var(--mico-radius-sm); }

.rounded-t-md   { border-top-left-radius: var(--mico-radius-md); border-top-right-radius: var(--mico-radius-md); }

.rounded-t-lg   { border-top-left-radius: var(--mico-radius-lg); border-top-right-radius: var(--mico-radius-lg); }

.rounded-t-xl   { border-top-left-radius: var(--mico-radius-xl); border-top-right-radius: var(--mico-radius-xl); }

.rounded-t-xxl  { border-top-left-radius: var(--mico-radius-xxl); border-top-right-radius: var(--mico-radius-xxl); }

.rounded-t-xxxl  { border-top-left-radius: var(--mico-radius-xxxl); border-top-right-radius: var(--mico-radius-xxxl); }

.rounded-t-full { border-top-left-radius: var(--mico-radius-full); border-top-right-radius: var(--mico-radius-full); }

.rounded-r-none { border-top-right-radius: var(--mico-radius-none); border-bottom-right-radius: var(--mico-radius-none); }

.rounded-r-sm   { border-top-right-radius: var(--mico-radius-sm); border-bottom-right-radius: var(--mico-radius-sm); }

.rounded-r-md   { border-top-right-radius: var(--mico-radius-md); border-bottom-right-radius: var(--mico-radius-md); }

.rounded-r-lg   { border-top-right-radius: var(--mico-radius-lg); border-bottom-right-radius: var(--mico-radius-lg); }

.rounded-r-xl   { border-top-right-radius: var(--mico-radius-xl); border-bottom-right-radius: var(--mico-radius-xl); }

.rounded-r-xxl  { border-top-right-radius: var(--mico-radius-xxl); border-bottom-right-radius: var(--mico-radius-xxl); }

.rounded-r-xxxl  { border-top-right-radius: var(--mico-radius-xxxl); border-bottom-right-radius: var(--mico-radius-xxxl); }

.rounded-r-full { border-top-right-radius: var(--mico-radius-full); border-bottom-right-radius: var(--mico-radius-full); }

.rounded-b-none { border-bottom-left-radius: var(--mico-radius-none); border-bottom-right-radius: var(--mico-radius-none); }

.rounded-b-sm   { border-bottom-left-radius: var(--mico-radius-sm); border-bottom-right-radius: var(--mico-radius-sm); }

.rounded-b-md   { border-bottom-left-radius: var(--mico-radius-md); border-bottom-right-radius: var(--mico-radius-md); }

.rounded-b-lg   { border-bottom-left-radius: var(--mico-radius-lg); border-bottom-right-radius: var(--mico-radius-lg); }

.rounded-b-xl   { border-bottom-left-radius: var(--mico-radius-xl); border-bottom-right-radius: var(--mico-radius-xl); }

.rounded-b-xxl  { border-bottom-left-radius: var(--mico-radius-xxl); border-bottom-right-radius: var(--mico-radius-xxl); }

.rounded-b-xxxl  { border-bottom-left-radius: var(--mico-radius-xxxl); border-bottom-right-radius: var(--mico-radius-xxxl); }

.rounded-b-full { border-bottom-left-radius: var(--mico-radius-full); border-bottom-right-radius: var(--mico-radius-full); }

.rounded-l-none { border-top-left-radius: var(--mico-radius-none); border-bottom-left-radius: var(--mico-radius-none); }

.rounded-l-sm   { border-top-left-radius: var(--mico-radius-sm); border-bottom-left-radius: var(--mico-radius-sm); }

.rounded-l-md   { border-top-left-radius: var(--mico-radius-md); border-bottom-left-radius: var(--mico-radius-md); }

.rounded-l-lg   { border-top-left-radius: var(--mico-radius-lg); border-bottom-left-radius: var(--mico-radius-lg); }

.rounded-l-xl   { border-top-left-radius: var(--mico-radius-xl); border-bottom-left-radius: var(--mico-radius-xl); }

.rounded-l-xxl  { border-top-left-radius: var(--mico-radius-xxl); border-bottom-left-radius: var(--mico-radius-xxl); }

.rounded-l-xxxl  { border-top-left-radius: var(--mico-radius-xxxl); border-bottom-left-radius: var(--mico-radius-xxxl); }

.rounded-l-full { border-top-left-radius: var(--mico-radius-full); border-bottom-left-radius: var(--mico-radius-full); }

/* ========================================================================== */

/* OUTLINE UTILITIES                                                         */

/* ========================================================================== */

/**
 * Outline Control
 *
 * These utilities control outlines for accessibility and focus states.
 * Outlines are essential for keyboard navigation and accessibility compliance.
 */

/* Outline Width */

.outline-0 { outline-width: var(--mico-outline-width-0); }

.outline-none { outline-width: var(--mico-outline-width-none); }

.outline-xxs { outline-width: var(--mico-outline-width-xxs); }

.outline-xs { outline-width: var(--mico-outline-width-xs); }

.outline-sm { outline-width: var(--mico-outline-width-sm); }

.outline-md { outline-width: var(--mico-outline-width-md); }

.outline-s-none { outline-width: var(--mico-outline-width-none); outline-style: var(--mico-outline-style-solid); }

.outline-s-xxs { outline-width: var(--mico-outline-width-xxs); outline-style: var(--mico-outline-style-solid); }

.outline-s-xs { outline-width: var(--mico-outline-width-xs); outline-style: var(--mico-outline-style-solid); }

.outline-s-sm { outline-width: var(--mico-outline-width-sm); outline-style: var(--mico-outline-style-solid); }

.outline-s-md { outline-width: var(--mico-outline-width-md); outline-style: var(--mico-outline-style-solid); }

/* Outline Style */

.outline-solid  { outline-style: var(--mico-outline-style-solid); }

.outline-dashed { outline-style: var(--mico-outline-style-dashed); }

.outline-dotted { outline-style: var(--mico-outline-style-dotted); }

.outline-double { outline-style: var(--mico-outline-style-double); }

/* Outline Color - OKLCH System */

.outline-primary   { outline-color: var(--mico-color-primary); }

.outline-secondary { outline-color: var(--mico-color-secondary); }

.outline-accent    { outline-color: var(--mico-color-accent); }

.outline-success   { outline-color: var(--mico-color-success); }

.outline-error     { outline-color: var(--mico-color-error); }

.outline-warning   { outline-color: var(--mico-color-warning); }

.outline-info      { outline-color: var(--mico-color-info); }

.outline-white     { outline-color: var(--mico-color-white); }

.outline-black     { outline-color: var(--mico-color-black); }

.outline-gray      { outline-color: var(--mico-color-gray); }

.outline-gray-3xlight { outline-color: var(--mico-color-gray-3xlight); }

.outline-gray-3xdark  { outline-color: var(--mico-color-gray-3xdark); }

/* Outline Offset */

.outline-offset-none { outline-offset: var(--mico-outline-offset-none); }

.outline-offset-xxs { outline-offset: var(--mico-outline-offset-xxs); }

.outline-offset-xs { outline-offset: var(--mico-outline-offset-xs); }

.outline-offset-sm { outline-offset: var(--mico-outline-offset-sm); }

.outline-offset-md { outline-offset: var(--mico-outline-offset-md); }

/* ========================================================================== */

/* BOX SHADOW UTILITIES                                                      */

/* ========================================================================== */

/**
 * Box Shadow Control
 *
 * These utilities control box shadows for depth, elevation, and visual hierarchy.
 */

.shadow-none{ box-shadow: var(--mico-value-none) !important; }

.shadow-light { box-shadow: var(--mico-shadow-light) !important; }

.shadow-2xlight { box-shadow: var(--mico-shadow-2xlight) !important; }

.shadow-3xlight { box-shadow: var(--mico-shadow-3xlight) !important; }

.shadow-4xlight { box-shadow: var(--mico-shadow-4xlight) !important; }

.shadow-5xlight { box-shadow: var(--mico-shadow-5xlight) !important; }

.shadow-6xlight { box-shadow: var(--mico-shadow-6xlight) !important; }

.shadow-7xlight { box-shadow: var(--mico-shadow-7xlight) !important; }

.shadow-8xlight { box-shadow: var(--mico-shadow-8xlight) !important; }

.shadow-dark { box-shadow: var(--mico-shadow-xs-dark) !important; }

.shadow-2xdark { box-shadow: var(--mico-shadow-2xdark) !important; }

.shadow-3xdark { box-shadow: var(--mico-shadow-3xdark) !important; }

.shadow-4xdark { box-shadow: var(--mico-shadow-4xdark) !important; }

.shadow-5xdark { box-shadow: var(--mico-shadow-5xdark) !important; }

.shadow-6xdark { box-shadow: var(--mico-shadow-6xdark) !important; }

.shadow-7xdark { box-shadow: var(--mico-shadow-7xdark) !important; }

.shadow-8xdark { box-shadow: var(--mico-shadow-8xdark) !important; }

.shadow-primary { box-shadow: var(--mico-shadow-primary) !important; }

.shadow-primary-light { box-shadow: var(--mico-shadow-primary-light) !important; }

.shadow-primary-2xlight { box-shadow: var(--mico-shadow-primary-2xlight) !important; }

.shadow-primary-3xlight { box-shadow: var(--mico-shadow-primary-3xlight) !important; }

.shadow-primary-4xlight { box-shadow: var(--mico-shadow-primary-4xlight) !important; }

.shadow-primary-5xlight { box-shadow: var(--mico-shadow-primary-5xlight) !important; }

.shadow-primary-6xlight { box-shadow: var(--mico-shadow-primary-6xlight) !important; }

.shadow-primary-7xlight { box-shadow: var(--mico-shadow-primary-7xlight) !important; }

.shadow-primary-8xlight { box-shadow: var(--mico-shadow-primary-8xlight) !important; }

.shadow-primary-dark { box-shadow: var(--mico-shadow-primary-dark) !important; }

.shadow-primary-2xdark { box-shadow: var(--mico-shadow-primary-2xdark) !important; }

.shadow-primary-3xdark { box-shadow: var(--mico-shadow-primary-3xdark) !important; }

.shadow-primary-4xdark { box-shadow: var(--mico-shadow-primary-4xdark) !important; }

.shadow-primary-5xdark { box-shadow: var(--mico-shadow-primary-5xdark) !important; }

.shadow-primary-6xdark { box-shadow: var(--mico-shadow-primary-6xdark) !important; }

.shadow-primary-7xdark { box-shadow: var(--mico-shadow-primary-7xdark) !important; }

.shadow-primary-8xdark { box-shadow: var(--mico-shadow-primary-8xdark) !important; }

.shadow-secondary { box-shadow: var(--mico-shadow-secondary) !important; }

.shadow-secondary-light { box-shadow: var(--mico-shadow-secondary-light) !important; }

.shadow-secondary-2xlight { box-shadow: var(--mico-shadow-secondary-2xlight) !important; }

.shadow-secondary-3xlight { box-shadow: var(--mico-shadow-secondary-3xlight) !important; }

.shadow-secondary-4xlight { box-shadow: var(--mico-shadow-secondary-4xlight) !important; }

.shadow-secondary-5xlight { box-shadow: var(--mico-shadow-secondary-5xlight) !important; }

.shadow-secondary-6xlight { box-shadow: var(--mico-shadow-secondary-6xlight) !important; }

.shadow-secondary-7xlight { box-shadow: var(--mico-shadow-secondary-7xlight) !important; }

.shadow-secondary-8xlight { box-shadow: var(--mico-shadow-secondary-8xlight) !important; }

.shadow-secondary-dark { box-shadow: var(--mico-shadow-secondary-dark) !important; }

.shadow-secondary-2xdark { box-shadow: var(--mico-shadow-secondary-2xdark) !important; }

.shadow-secondary-3xdark { box-shadow: var(--mico-shadow-secondary-3xdark) !important; }

.shadow-secondary-4xdark { box-shadow: var(--mico-shadow-secondary-4xdark) !important; }

.shadow-secondary-5xdark { box-shadow: var(--mico-shadow-secondary-5xdark) !important; }

.shadow-secondary-6xdark { box-shadow: var(--mico-shadow-secondary-6xdark) !important; }

.shadow-secondary-7xdark { box-shadow: var(--mico-shadow-secondary-7xdark) !important; }

.shadow-secondary-8xdark { box-shadow: var(--mico-shadow-secondary-8xdark) !important; }

.shadow-accent { box-shadow: var(--mico-shadow-accent) !important; }

.shadow-accent-light { box-shadow: var(--mico-shadow-accent-light) !important; }

.shadow-accent-2xlight { box-shadow: var(--mico-shadow-accent-2xlight) !important; }

.shadow-accent-3xlight { box-shadow: var(--mico-shadow-accent-3xlight) !important; }

.shadow-accent-4xlight { box-shadow: var(--mico-shadow-accent-4xlight) !important; }

.shadow-accent-5xlight { box-shadow: var(--mico-shadow-accent-5xlight) !important; }

.shadow-accent-6xlight { box-shadow: var(--mico-shadow-accent-6xlight) !important; }

.shadow-accent-7xlight { box-shadow: var(--mico-shadow-accent-7xlight) !important; }

.shadow-accent-8xlight { box-shadow: var(--mico-shadow-accent-8xlight) !important; }

.shadow-accent-dark { box-shadow: var(--mico-shadow-accent-dark) !important; }

.shadow-accent-2xdark { box-shadow: var(--mico-shadow-accent-2xdark) !important; }

.shadow-accent-3xdark { box-shadow: var(--mico-shadow-accent-3xdark) !important; }

.shadow-accent-4xdark { box-shadow: var(--mico-shadow-accent-4xdark) !important; }

.shadow-accent-5xdark { box-shadow: var(--mico-shadow-accent-5xdark) !important; }

.shadow-accent-6xdark { box-shadow: var(--mico-shadow-accent-6xdark) !important; }

.shadow-accent-7xdark { box-shadow: var(--mico-shadow-accent-7xdark) !important; }

.shadow-accent-8xdark { box-shadow: var(--mico-shadow-accent-8xdark) !important; }

/* Semantics Colored Shadows */

.shadow-success   { box-shadow: var(--mico-shadow-success) !important; }

.shadow-error     { box-shadow: var(--mico-shadow-error) !important; }

.shadow-warning   { box-shadow: var(--mico-shadow-warning) !important; }

.shadow-info      { box-shadow: var(--mico-shadow-info) !important; }

/* ========================================================================== */

/* DIVIDE UTILITIES                                                          */

/* ========================================================================== */

/**
 * Divide Control
 *
 * These utilities add borders between child elements for visual separation.
 * Perfect for lists, navigation items, and grouped content.
 */

/* Divide Y (Horizontal borders between children) */

.divide-y-none > * + * { border-top-width: var(--mico-divide-width-none); }

.divide-y-xxs  > * + * { border-top-width: var(--mico-divide-width-xxs); }

.divide-y-xs > * + * { border-top-width: var(--mico-divide-width-xs); }

.divide-y-sm > * + * { border-top-width: var(--mico-divide-width-sm); }

.divide-y-md > * + * { border-top-width: var(--mico-divide-width-md); }

/* Divide X (Vertical borders between children) */

.divide-x-none > * + * { border-left-width: var(--mico-divide-width-none); }

.divide-x-xxs  > * + * { border-left-width: var(--mico-divide-width-xxs); }

.divide-x-xs > * + * { border-left-width: var(--mico-divide-width-xs); }

.divide-x-sm > * + * { border-left-width: var(--mico-divide-width-sm); }

.divide-x-md > * + * { border-left-width: var(--mico-divide-width-md); }

/* Divide Colors - OKLCH System */

.divide-primary   > * + * { border-color: var(--mico-color-primary); }

.divide-secondary > * + * { border-color: var(--mico-color-secondary); }

.divide-accent    > * + * { border-color: var(--mico-color-accent); }

.divide-gray      > * + * { border-color: var(--mico-color-gray); }

.divide-gray-2xlight > * + * { border-color: var(--mico-color-gray-2xlight); }

.divide-gray-3xlight > * + * { border-color: var(--mico-color-gray-3xlight); }

.divide-gray-2xdark  > * + * { border-color: var(--mico-color-gray-2xdark); }

/* Divide Styles */

.divide-solid  > * + * { border-style: var(--mico-border-solid); }

.divide-dashed > * + * { border-style: var(--mico-border-dashed); }

.divide-dotted > * + * { border-style: var(--mico-border-dotted); }

/* ========================================================================== */

/* ACCESSIBILITY & BROWSER SUPPORT                                           */

/* ========================================================================== */

/**
 * High Contrast Mode Support
 *
 * Enhanced visibility for high contrast environments.
 */

@media (prefers-contrast: high) {
  .border-xxs,
  .border-xs,
  .border-sm,
  .border-md {
    border-color: currentColor;
  }

  .outline-xxs,
  .outline-xs,
  .outline-sm,
  .outline-md {
    outline-color: currentColor;
  }

}

/**
 * Reduced Motion Support
 *
 * Respects user preferences for reduced motion.
 */

@media (prefers-reduced-motion: reduce) {
  .shadow-xs,
  .shadow-sm,
  .shadow-md,
  .shadow-lg,
  .shadow-xl,
  .shadow-xxl,
  .shadow-xxxl {
    transition: var(--mico-value-none);
  }
}

/**
 * Print Media Support
 *
 * Optimized styles for print media.
 */

@media print {
  .shadow-xs,
  .shadow-sm,
  .shadow-md,
  .shadow-lg,
  .shadow-xl,
  .shadow-xxl,
  .shadow-xxxl {
    box-shadow: var(--mico-value-none) !important;
  }

}

/* ========================================================================== */

/* USAGE EXAMPLES AND DOCUMENTATION                                          */

/* ========================================================================== */

/**
 * USAGE EXAMPLES:
 *
 * 1. Basic border:
 *    <div class="border border-gray-300 rounded">Content</div>
 *
 * 2. Focus ring:
 *    <button class="ring ring-primary ring-offset-xs">Button</button>
 *
 * 3. Card with shadow:
 *    <div class="border border-gray-200 rounded-lg shadow-md">Card</div>
 *
 * 4. Divided list:
 *    <ul class="divide-y divide-gray-200">
 *      <li>Item 1</li>
 *      <li>Item 2</li>
 *    </ul>
 *
 * 5. Accessible outline:
 *    <input class="outline outline-xs outline-primary outline-offset-xs">
 *
 * 6. Complex border styling:
 *    <div class="border-xs border-dashed border-primary rounded-xl">
 *
 * ACCESSIBILITY NOTES:
 * - Always provide sufficient contrast for borders and outlines
 * - Use outline utilities for focus indicators
 * - Test with high contrast mode
 * - Ensure ring utilities are visible for keyboard navigation
 */

/* ************************************************************************************************ */

/* Fluid Padding Spacing - Useful for section paddings e.g, <section class="container-fluid-md"> */

.container-fluid-xxs {
    padding-block: var(--mico-size-fluid-xxs) !important;
    padding-inline: var(--mico-size-fluid-xxs) !important;
  }

.container-fluid-xs {
    padding-block: var(--mico-size-fluid-xxs) !important;
    padding-inline: var(--mico-size-fluid-xs) !important;
  }

.container-fluid-sm {
    padding-block: var(--mico-size-fluid-sm) !important;
    padding-inline: var(--mico-size-fluid-lg) !important;
  }

.container-fluid-md {
    padding-block: var(--mico-size-fluid-sm) !important;
    padding-inline: var(--mico-size-fluid-md) !important;
  }

.container-fluid-lg {
    padding-block: var(--mico-size-fluid-md) !important;
    padding-inline: var(--mico-size-fluid-lg) !important;
  }

.container-fluid-xl {
    padding-block: var(--mico-size-fluid-lg) !important;
    padding-inline: var(--mico-size-fluid-xl) !important;
  }

.container-fluid-xxl {
    padding-block: var(--mico-size-fluid-xl) !important;
    padding-inline: var(--mico-size-fluid-xxl) !important;
  }

.container-fluid-xxxl {
    padding-block: var(--mico-size-fluid-xxl) !important;
    padding-inline: var(--mico-size-fluid-xxxl) !important;
  }

/* Fluid Padding Spacing - Useful for individual sides, x-axis or y-axis paddings e.g, <div class="container-fluid-md"> */

.px-fluid-xs { padding-inline: var(--mico-size-fluid-xxs) !important; }

.py-fluid-xs { padding-block: var(--mico-size-fluid-xxs) !important; }

.px-fluid-xs { padding-inline: var(--mico-size-fluid-xs) !important; }

.py-fluid-xs { padding-block: var(--mico-size-fluid-xs) !important; }

.px-fluid-sm { padding-inline: var(--mico-size-fluid-sm) !important; }

.py-fluid-sm { padding-block: var(--mico-size-fluid-sm) !important; }

.px-fluid-md { padding-inline: var(--mico-size-fluid-md) !important; }

.py-fluid-md { padding-block: var(--mico-size-fluid-md) !important; }

.px-fluid-lg { padding-inline: var(--mico-size-fluid-lg) !important; }

.py-fluid-lg { padding-block: var(--mico-size-fluid-lg) !important; }

.px-fluid-xl { padding-inline: var(--mico-size-fluid-xl) !important; }

.py-fluid-xl { padding-block: var(--mico-size-fluid-xl) !important; }

.px-fluid-xxl { padding-inline: var(--mico-size-fluid-xxl) !important; }

.py-fluid-xxl { padding-block: var(--mico-size-fluid-xxl) !important; }

.px-fluid-xxxl { padding-inline: var(--mico-size-fluid-xxxl) !important; }

.py-fluid-xxxl { padding-block: var(--mico-size-fluid-xxxl) !important; }

.p-fluid-xxs { padding: var(--mico-size-fluid-xxs) !important; }

.p-fluid-xs { padding: var(--mico-size-fluid-xs) !important; }

.p-fluid-sm { padding: var(--mico-size-fluid-sm) !important; }

.p-fluid-md { padding: var(--mico-size-fluid-md) !important; }

.p-fluid-lg { padding: var(--mico-size-fluid-lg) !important; }

.p-fluid-xl { padding: var(--mico-size-fluid-xl) !important; }

.p-fluid-xxl { padding: var(--mico-size-fluid-xxl) !important; }

.p-fluid-xxxl { padding: var(--mico-size-fluid-xxxl) !important; }

.pt-fluid-xxs{ padding-top: var(--mico-size-fluid-xxs) !important; }

.pt-fluid-xs{ padding-top: var(--mico-size-fluid-xs) !important; }

.pt-fluid-sm{ padding-top: var(--mico-size-fluid-sm) !important; }

.pt-fluid-md{ padding-top: var(--mico-size-fluid-md) !important; }

.pt-fluid-lg{ padding-top: var(--mico-size-fluid-lg) !important; }

.pt-fluid-xl{ padding-top: var(--mico-size-fluid-xl) !important; }

.pt-fluid-xxl{ padding-top: var(--mico-size-fluid-xxl) !important; }

.pt-fluid-xxxl{ padding-top: var(--mico-size-fluid-xxxl) !important; }

.pl-fluid-xxs{ padding-left: var(--mico-size-fluid-xxs) !important; }

.pl-fluid-xs{ padding-left: var(--mico-size-fluid-xs) !important; }

.pl-fluid-sm{ padding-left: var(--mico-size-fluid-sm) !important; }

.pl-fluid-md{ padding-left: var(--mico-size-fluid-md) !important; }

.pl-fluid-lg{ padding-left: var(--mico-size-fluid-lg) !important; }

.pl-fluid-xl{ padding-left: var(--mico-size-fluid-xl) !important; }

.pl-fluid-xxl{ padding-left: var(--mico-size-fluid-xxl) !important; }

.pl-fluid-xxxl{ padding-left: var(--mico-size-fluid-xxxl) !important; }

.pb-fluid-xxs{ padding-bottom: var(--mico-size-fluid-xxs) !important; }

.pb-fluid-xs{ padding-bottom: var(--mico-size-fluid-xs) !important; }

.pb-fluid-sm{ padding-bottom: var(--mico-size-fluid-sm) !important; }

.pb-fluid-md{ padding-bottom: var(--mico-size-fluid-md) !important; }

.pb-fluid-lg{ padding-bottom: var(--mico-size-fluid-lg) !important; }

.pb-fluid-xl{ padding-bottom: var(--mico-size-fluid-xl) !important; }

.pb-fluid-xxl{ padding-bottom: var(--mico-size-fluid-xxl) !important; }

.pb-fluid-xxxl{ padding-bottom: var(--mico-size-fluid-xxxl) !important; }

.pr-fluid-xxs{ padding-right: var(--mico-size-fluid-xxs) !important; }

.pr-fluid-xs{ padding-right: var(--mico-size-fluid-xs) !important; }

.pr-fluid-sm{ padding-right: var(--mico-size-fluid-sm) !important; }

.pr-fluid-md{ padding-right: var(--mico-size-fluid-md) !important; }

.pr-fluid-lg{ padding-right: var(--mico-size-fluid-lg) !important; }

.pr-fluid-xl{ padding-right: var(--mico-size-fluid-xl) !important; }

.pr-fluid-xxl{ padding-right: var(--mico-size-fluid-xxl) !important; }

.pr-fluid-xxxl{ padding-right: var(--mico-size-fluid-xxxl) !important; }

/* Margin */

.m-0 { margin: 0 !important; }

.mt-0 { margin-top: 0 !important; }

.mb-0 { margin-bottom: 0 !important; }

.ml-0 { margin-left: 0 !important; }

.mr-0 { margin-right: 0 !important; }

.m-auto { margin: auto !important; }

.mt-auto { margin-top: auto !important; }

.mb-auto { margin-bottom: auto !important; }

.ml-auto { margin-left: auto !important; }

.mr-auto { margin-right: auto !important; }

.mx-auto { margin-inline: auto !important; }

.my-auto { margin-block: auto !important; }

/* Padding */

.p-0 { padding: 0 !important; }

.pt-0 { padding-top: 0 !important; }

.pb-0 { padding-bottom: 0 !important; }

.pl-0 { padding-left: 0 !important; }

.pr-0 { padding-right: 0 !important; }

.px-0 { padding-inline: 0 !important; }

.py-0 { padding-block: 0 !important; }

.p-auto { padding: auto !important; }

.pt-auto { padding-top: auto !important; }

.pb-auto { padding-bottom: auto !important; }

.pl-auto { padding-left: auto !important; }

.pr-auto { padding-right: auto !important; }

.px-auto { padding-inline: auto !important; }

.py-auto { padding-block: auto !important; }

/* Margin classes from 4 to 100 */

.m-4 { margin: var(--mico-size-4) !important; }

.m-8 { margin: var(--mico-size-8) !important; }

.m-12 { margin: var(--mico-size-12) !important; }

.m-16 { margin: var(--mico-size-16) !important; }

.m-20 { margin: var(--mico-size-20) !important; }

.m-24 { margin: var(--mico-size-24) !important; }

.m-28 { margin: var(--mico-size-28) !important; }

.m-32 { margin: var(--mico-size-32) !important; }

.m-36 { margin: var(--mico-size-36) !important; }

.m-40 { margin: var(--mico-size-40) !important; }

.m-44 { margin: var(--mico-size-44) !important; }

.m-48 { margin: var(--mico-size-48) !important; }

.m-52 { margin: var(--mico-size-52) !important; }

.m-56 { margin: var(--mico-size-56) !important; }

.m-60 { margin: var(--mico-size-60) !important; }

.m-64 { margin: var(--mico-size-64) !important; }

.m-68 { margin: var(--mico-size-68) !important; }

.m-72 { margin: var(--mico-size-72) !important; }

.m-76 { margin: var(--mico-size-76) !important; }

.m-80 { margin: var(--mico-size-80) !important; }

.m-84 { margin: var(--mico-size-84) !important; }

.m-88 { margin: var(--mico-size-88) !important; }

.m-92 { margin: var(--mico-size-92) !important; }

.m-96 { margin: var(--mico-size-96) !important; }

.m-100 { margin: var(--mico-size-100) !important; }

.m-104 { margin: var(--mico-size-104) !important; }

.m-108 { margin: var(--mico-size-108) !important; }

.m-112 { margin: var(--mico-size-112) !important; }

.m-116 { margin: var(--mico-size-116) !important; }

.m-120 { margin: var(--mico-size-120) !important; }

.m-124 { margin: var(--mico-size-124) !important; }

.m-128 { margin: var(--mico-size-128) !important; }

.m-132 { margin: var(--mico-size-132) !important; }

.m-136 { margin: var(--mico-size-136) !important; }

.m-140 { margin: var(--mico-size-140) !important; }

.m-144 { margin: var(--mico-size-144) !important; }

.m-148 { margin: var(--mico-size-148) !important; }

.m-152 { margin: var(--mico-size-152) !important; }

.m-156 { margin: var(--mico-size-156) !important; }

.m-160 { margin: var(--mico-size-160) !important; }

.m-164 { margin: var(--mico-size-164) !important; }

.m-168 { margin: var(--mico-size-168) !important; }

.m-172 { margin: var(--mico-size-172) !important; }

.m-176 { margin: var(--mico-size-176) !important; }

.m-180 { margin: var(--mico-size-180) !important; }

.m-184 { margin: var(--mico-size-184) !important; }

.m-188 { margin: var(--mico-size-188) !important; }

.m-192 { margin: var(--mico-size-192) !important; }

.m-196 { margin: var(--mico-size-196) !important; }

.m-200 { margin: var(--mico-size-200) !important; }

.m-204 { margin: var(--mico-size-204) !important; }

.m-208 { margin: var(--mico-size-208) !important; }

.m-212 { margin: var(--mico-size-212) !important; }

.m-216 { margin: var(--mico-size-216) !important; }

.m-220 { margin: var(--mico-size-220) !important; }

.m-224 { margin: var(--mico-size-224) !important; }

.m-228 { margin: var(--mico-size-228) !important; }

.m-232 { margin: var(--mico-size-232) !important; }

.m-236 { margin: var(--mico-size-236) !important; }

.m-240 { margin: var(--mico-size-240) !important; }

.m-244 { margin: var(--mico-size-244) !important; }

.m-248 { margin: var(--mico-size-248) !important; }

.m-252 { margin: var(--mico-size-252) !important; }

.m-256 { margin: var(--mico-size-256) !important; }

.m-260 { margin: var(--mico-size-260) !important; }

.m-264 { margin: var(--mico-size-264) !important; }

.m-268 { margin: var(--mico-size-268) !important; }

.m-272 { margin: var(--mico-size-272) !important; }

.m-276 { margin: var(--mico-size-276) !important; }

.m-280 { margin: var(--mico-size-280) !important; }

.m-284 { margin: var(--mico-size-284) !important; }

.m-288 { margin: var(--mico-size-288) !important; }

.m-292 { margin: var(--mico-size-292) !important; }

.m-296 { margin: var(--mico-size-296) !important; }

.m-300 { margin: var(--mico-size-300) !important; }

.m-304 { margin: var(--mico-size-304) !important; }

.m-308 { margin: var(--mico-size-308) !important; }

.m-312 { margin: var(--mico-size-312) !important; }

.m-316 { margin: var(--mico-size-316) !important; }

.m-320 { margin: var(--mico-size-320) !important; }

.m-324 { margin: var(--mico-size-324) !important; }

.m-328 { margin: var(--mico-size-328) !important; }

.m-332 { margin: var(--mico-size-332) !important; }

.m-336 { margin: var(--mico-size-336) !important; }

.m-340 { margin: var(--mico-size-340) !important; }

.m-344 { margin: var(--mico-size-344) !important; }

.m-348 { margin: var(--mico-size-348) !important; }

.m-352 { margin: var(--mico-size-352) !important; }

.m-356 { margin: var(--mico-size-356) !important; }

.m-360 { margin: var(--mico-size-360) !important; }

.m-364 { margin: var(--mico-size-364) !important; }

.m-368 { margin: var(--mico-size-368) !important; }

.m-372 { margin: var(--mico-size-372) !important; }

.m-376 { margin: var(--mico-size-376) !important; }

.m-380 { margin: var(--mico-size-380) !important; }

.m-384 { margin: var(--mico-size-384) !important; }

.m-388 { margin: var(--mico-size-388) !important; }

.m-392 { margin: var(--mico-size-392) !important; }

.m-396 { margin: var(--mico-size-396) !important; }

.m-400 { margin: var(--mico-size-400) !important; }

/* Margin-top classes from 4 to 100 */

.mt-4 { margin-top: var(--mico-size-4) !important; }

.mt-8 { margin-top: var(--mico-size-8) !important; }

.mt-12 { margin-top: var(--mico-size-12) !important; }

.mt-16 { margin-top: var(--mico-size-16) !important; }

.mt-20 { margin-top: var(--mico-size-20) !important; }

.mt-24 { margin-top: var(--mico-size-24) !important; }

.mt-28 { margin-top: var(--mico-size-28) !important; }

.mt-32 { margin-top: var(--mico-size-32) !important; }

.mt-36 { margin-top: var(--mico-size-36) !important; }

.mt-40 { margin-top: var(--mico-size-40) !important; }

.mt-44 { margin-top: var(--mico-size-44) !important; }

.mt-48 { margin-top: var(--mico-size-48) !important; }

.mt-52 { margin-top: var(--mico-size-52) !important; }

.mt-56 { margin-top: var(--mico-size-56) !important; }

.mt-60 { margin-top: var(--mico-size-60) !important; }

.mt-64 { margin-top: var(--mico-size-64) !important; }

.mt-68 { margin-top: var(--mico-size-68) !important; }

.mt-72 { margin-top: var(--mico-size-72) !important; }

.mt-76 { margin-top: var(--mico-size-76) !important; }

.mt-80 { margin-top: var(--mico-size-80) !important; }

.mt-84 { margin-top: var(--mico-size-84) !important; }

.mt-88 { margin-top: var(--mico-size-88) !important; }

.mt-92 { margin-top: var(--mico-size-92) !important; }

.mt-96 { margin-top: var(--mico-size-96) !important; }

.mt-100 { margin-top: var(--mico-size-100) !important; }

.mt-104 { margin-top: var(--mico-size-104) !important; }

.mt-108 { margin-top: var(--mico-size-108) !important; }

.mt-112 { margin-top: var(--mico-size-112) !important; }

.mt-116 { margin-top: var(--mico-size-116) !important; }

.mt-120 { margin-top: var(--mico-size-120) !important; }

.mt-124 { margin-top: var(--mico-size-124) !important; }

.mt-128 { margin-top: var(--mico-size-128) !important; }

.mt-132 { margin-top: var(--mico-size-132) !important; }

.mt-136 { margin-top: var(--mico-size-136) !important; }

.mt-140 { margin-top: var(--mico-size-140) !important; }

.mt-144 { margin-top: var(--mico-size-144) !important; }

.mt-148 { margin-top: var(--mico-size-148) !important; }

.mt-152 { margin-top: var(--mico-size-152) !important; }

.mt-156 { margin-top: var(--mico-size-156) !important; }

.mt-160 { margin-top: var(--mico-size-160) !important; }

.mt-164 { margin-top: var(--mico-size-164) !important; }

.mt-168 { margin-top: var(--mico-size-168) !important; }

.mt-172 { margin-top: var(--mico-size-172) !important; }

.mt-176 { margin-top: var(--mico-size-176) !important; }

.mt-180 { margin-top: var(--mico-size-180) !important; }

.mt-184 { margin-top: var(--mico-size-184) !important; }

.mt-188 { margin-top: var(--mico-size-188) !important; }

.mt-192 { margin-top: var(--mico-size-192) !important; }

.mt-196 { margin-top: var(--mico-size-196) !important; }

.mt-200 { margin-top: var(--mico-size-200) !important; }

.mt-204 { margin-top: var(--mico-size-204) !important; }

.mt-208 { margin-top: var(--mico-size-208) !important; }

.mt-212 { margin-top: var(--mico-size-212) !important; }

.mt-216 { margin-top: var(--mico-size-216) !important; }

.mt-220 { margin-top: var(--mico-size-220) !important; }

.mt-224 { margin-top: var(--mico-size-224) !important; }

.mt-228 { margin-top: var(--mico-size-228) !important; }

.mt-232 { margin-top: var(--mico-size-232) !important; }

.mt-236 { margin-top: var(--mico-size-236) !important; }

.mt-240 { margin-top: var(--mico-size-240) !important; }

.mt-244 { margin-top: var(--mico-size-244) !important; }

.mt-248 { margin-top: var(--mico-size-248) !important; }

.mt-252 { margin-top: var(--mico-size-252) !important; }

.mt-256 { margin-top: var(--mico-size-256) !important; }

.mt-260 { margin-top: var(--mico-size-260) !important; }

.mt-264 { margin-top: var(--mico-size-264) !important; }

.mt-268 { margin-top: var(--mico-size-268) !important; }

.mt-272 { margin-top: var(--mico-size-272) !important; }

.mt-276 { margin-top: var(--mico-size-276) !important; }

.mt-280 { margin-top: var(--mico-size-280) !important; }

.mt-284 { margin-top: var(--mico-size-284) !important; }

.mt-288 { margin-top: var(--mico-size-288) !important; }

.mt-292 { margin-top: var(--mico-size-292) !important; }

.mt-296 { margin-top: var(--mico-size-296) !important; }

.mt-300 { margin-top: var(--mico-size-300) !important; }

.mt-304 { margin-top: var(--mico-size-304) !important; }

.mt-308 { margin-top: var(--mico-size-308) !important; }

.mt-312 { margin-top: var(--mico-size-312) !important; }

.mt-316 { margin-top: var(--mico-size-316) !important; }

.mt-320 { margin-top: var(--mico-size-320) !important; }

.mt-324 { margin-top: var(--mico-size-324) !important; }

.mt-328 { margin-top: var(--mico-size-328) !important; }

.mt-332 { margin-top: var(--mico-size-332) !important; }

.mt-336 { margin-top: var(--mico-size-336) !important; }

.mt-340 { margin-top: var(--mico-size-340) !important; }

.mt-344 { margin-top: var(--mico-size-344) !important; }

.mt-348 { margin-top: var(--mico-size-348) !important; }

.mt-352 { margin-top: var(--mico-size-352) !important; }

.mt-356 { margin-top: var(--mico-size-356) !important; }

.mt-360 { margin-top: var(--mico-size-360) !important; }

.mt-364 { margin-top: var(--mico-size-364) !important; }

.mt-368 { margin-top: var(--mico-size-368) !important; }

.mt-372 { margin-top: var(--mico-size-372) !important; }

.mt-376 { margin-top: var(--mico-size-376) !important; }

.mt-380 { margin-top: var(--mico-size-380) !important; }

.mt-384 { margin-top: var(--mico-size-384) !important; }

.mt-388 { margin-top: var(--mico-size-388) !important; }

.mt-392 { margin-top: var(--mico-size-392) !important; }

.mt-396 { margin-top: var(--mico-size-396) !important; }

.mt-400 { margin-top: var(--mico-size-400) !important; }

/* Margin-bottom classes from 4 to 100 */

.mb-4 { margin-bottom: var(--mico-size-4) !important; }

.mb-8 { margin-bottom: var(--mico-size-8) !important; }

.mb-12 { margin-bottom: var(--mico-size-12) !important; }

.mb-16 { margin-bottom: var(--mico-size-16) !important; }

.mb-20 { margin-bottom: var(--mico-size-20) !important; }

.mb-24 { margin-bottom: var(--mico-size-24) !important; }

.mb-28 { margin-bottom: var(--mico-size-28) !important; }

.mb-32 { margin-bottom: var(--mico-size-32) !important; }

.mb-36 { margin-bottom: var(--mico-size-36) !important; }

.mb-40 { margin-bottom: var(--mico-size-40) !important; }

.mb-44 { margin-bottom: var(--mico-size-44) !important; }

.mb-48 { margin-bottom: var(--mico-size-48) !important; }

.mb-52 { margin-bottom: var(--mico-size-52) !important; }

.mb-56 { margin-bottom: var(--mico-size-56) !important; }

.mb-60 { margin-bottom: var(--mico-size-60) !important; }

.mb-64 { margin-bottom: var(--mico-size-64) !important; }

.mb-68 { margin-bottom: var(--mico-size-68) !important; }

.mb-72 { margin-bottom: var(--mico-size-72) !important; }

.mb-76 { margin-bottom: var(--mico-size-76) !important; }

.mb-80 { margin-bottom: var(--mico-size-80) !important; }

.mb-84 { margin-bottom: var(--mico-size-84) !important; }

.mb-88 { margin-bottom: var(--mico-size-88) !important; }

.mb-92 { margin-bottom: var(--mico-size-92) !important; }

.mb-96 { margin-bottom: var(--mico-size-96) !important; }

.mb-100 { margin-bottom: var(--mico-size-100) !important; }

.mb-104 { margin-bottom: var(--mico-size-104) !important; }

.mb-108 { margin-bottom: var(--mico-size-108) !important; }

.mb-112 { margin-bottom: var(--mico-size-112) !important; }

.mb-116 { margin-bottom: var(--mico-size-116) !important; }

.mb-120 { margin-bottom: var(--mico-size-120) !important; }

.mb-124 { margin-bottom: var(--mico-size-124) !important; }

.mb-128 { margin-bottom: var(--mico-size-128) !important; }

.mb-132 { margin-bottom: var(--mico-size-132) !important; }

.mb-136 { margin-bottom: var(--mico-size-136) !important; }

.mb-140 { margin-bottom: var(--mico-size-140) !important; }

.mb-144 { margin-bottom: var(--mico-size-144) !important; }

.mb-148 { margin-bottom: var(--mico-size-148) !important; }

.mb-152 { margin-bottom: var(--mico-size-152) !important; }

.mb-156 { margin-bottom: var(--mico-size-156) !important; }

.mb-160 { margin-bottom: var(--mico-size-160) !important; }

.mb-164 { margin-bottom: var(--mico-size-164) !important; }

.mb-168 { margin-bottom: var(--mico-size-168) !important; }

.mb-172 { margin-bottom: var(--mico-size-172) !important; }

.mb-176 { margin-bottom: var(--mico-size-176) !important; }

.mb-180 { margin-bottom: var(--mico-size-180) !important; }

.mb-184 { margin-bottom: var(--mico-size-184) !important; }

.mb-188 { margin-bottom: var(--mico-size-188) !important; }

.mb-192 { margin-bottom: var(--mico-size-192) !important; }

.mb-196 { margin-bottom: var(--mico-size-196) !important; }

.mb-200 { margin-bottom: var(--mico-size-200) !important; }

.mb-204 { margin-bottom: var(--mico-size-204) !important; }

.mb-208 { margin-bottom: var(--mico-size-208) !important; }

.mb-212 { margin-bottom: var(--mico-size-212) !important; }

.mb-216 { margin-bottom: var(--mico-size-216) !important; }

.mb-220 { margin-bottom: var(--mico-size-220) !important; }

.mb-224 { margin-bottom: var(--mico-size-224) !important; }

.mb-228 { margin-bottom: var(--mico-size-228) !important; }

.mb-232 { margin-bottom: var(--mico-size-232) !important; }

.mb-236 { margin-bottom: var(--mico-size-236) !important; }

.mb-240 { margin-bottom: var(--mico-size-240) !important; }

.mb-244 { margin-bottom: var(--mico-size-244) !important; }

.mb-248 { margin-bottom: var(--mico-size-248) !important; }

.mb-252 { margin-bottom: var(--mico-size-252) !important; }

.mb-256 { margin-bottom: var(--mico-size-256) !important; }

.mb-260 { margin-bottom: var(--mico-size-260) !important; }

.mb-264 { margin-bottom: var(--mico-size-264) !important; }

.mb-268 { margin-bottom: var(--mico-size-268) !important; }

.mb-272 { margin-bottom: var(--mico-size-272) !important; }

.mb-276 { margin-bottom: var(--mico-size-276) !important; }

.mb-280 { margin-bottom: var(--mico-size-280) !important; }

.mb-284 { margin-bottom: var(--mico-size-284) !important; }

.mb-288 { margin-bottom: var(--mico-size-288) !important; }

.mb-292 { margin-bottom: var(--mico-size-292) !important; }

.mb-296 { margin-bottom: var(--mico-size-296) !important; }

.mb-300 { margin-bottom: var(--mico-size-300) !important; }

.mb-304 { margin-bottom: var(--mico-size-304) !important; }

.mb-308 { margin-bottom: var(--mico-size-308) !important; }

.mb-312 { margin-bottom: var(--mico-size-312) !important; }

.mb-316 { margin-bottom: var(--mico-size-316) !important; }

.mb-320 { margin-bottom: var(--mico-size-320) !important; }

.mb-324 { margin-bottom: var(--mico-size-324) !important; }

.mb-328 { margin-bottom: var(--mico-size-328) !important; }

.mb-332 { margin-bottom: var(--mico-size-332) !important; }

.mb-336 { margin-bottom: var(--mico-size-336) !important; }

.mb-340 { margin-bottom: var(--mico-size-340) !important; }

.mb-344 { margin-bottom: var(--mico-size-344) !important; }

.mb-348 { margin-bottom: var(--mico-size-348) !important; }

.mb-352 { margin-bottom: var(--mico-size-352) !important; }

.mb-356 { margin-bottom: var(--mico-size-356) !important; }

.mb-360 { margin-bottom: var(--mico-size-360) !important; }

.mb-364 { margin-bottom: var(--mico-size-364) !important; }

.mb-368 { margin-bottom: var(--mico-size-368) !important; }

.mb-372 { margin-bottom: var(--mico-size-372) !important; }

.mb-376 { margin-bottom: var(--mico-size-376) !important; }

.mb-380 { margin-bottom: var(--mico-size-380) !important; }

.mb-384 { margin-bottom: var(--mico-size-384) !important; }

.mb-388 { margin-bottom: var(--mico-size-388) !important; }

.mb-392 { margin-bottom: var(--mico-size-392) !important; }

.mb-396 { margin-bottom: var(--mico-size-396) !important; }

.mb-400 { margin-bottom: var(--mico-size-400) !important; }

/* Margin-left classes from 4 to 100 */

.ml-4 { margin-left: var(--mico-size-4) !important; }

.ml-8 { margin-left: var(--mico-size-8) !important; }

.ml-12 { margin-left: var(--mico-size-12) !important; }

.ml-16 { margin-left: var(--mico-size-16) !important; }

.ml-20 { margin-left: var(--mico-size-20) !important; }

.ml-24 { margin-left: var(--mico-size-24) !important; }

.ml-28 { margin-left: var(--mico-size-28) !important; }

.ml-32 { margin-left: var(--mico-size-32) !important; }

.ml-36 { margin-left: var(--mico-size-36) !important; }

.ml-40 { margin-left: var(--mico-size-40) !important; }

.ml-44 { margin-left: var(--mico-size-44) !important; }

.ml-48 { margin-left: var(--mico-size-48) !important; }

.ml-52 { margin-left: var(--mico-size-52) !important; }

.ml-56 { margin-left: var(--mico-size-56) !important; }

.ml-60 { margin-left: var(--mico-size-60) !important; }

.ml-64 { margin-left: var(--mico-size-64) !important; }

.ml-68 { margin-left: var(--mico-size-68) !important; }

.ml-72 { margin-left: var(--mico-size-72) !important; }

.ml-76 { margin-left: var(--mico-size-76) !important; }

.ml-80 { margin-left: var(--mico-size-80) !important; }

.ml-84 { margin-left: var(--mico-size-84) !important; }

.ml-88 { margin-left: var(--mico-size-88) !important; }

.ml-92 { margin-left: var(--mico-size-92) !important; }

.ml-96 { margin-left: var(--mico-size-96) !important; }

.ml-100 { margin-left: var(--mico-size-100) !important; }

.ml-104 { margin-left: var(--mico-size-104) !important; }

.ml-108 { margin-left: var(--mico-size-108) !important; }

.ml-112 { margin-left: var(--mico-size-112) !important; }

.ml-116 { margin-left: var(--mico-size-116) !important; }

.ml-120 { margin-left: var(--mico-size-120) !important; }

.ml-124 { margin-left: var(--mico-size-124) !important; }

.ml-128 { margin-left: var(--mico-size-128) !important; }

.ml-132 { margin-left: var(--mico-size-132) !important; }

.ml-136 { margin-left: var(--mico-size-136) !important; }

.ml-140 { margin-left: var(--mico-size-140) !important; }

.ml-144 { margin-left: var(--mico-size-144) !important; }

.ml-148 { margin-left: var(--mico-size-148) !important; }

.ml-152 { margin-left: var(--mico-size-152) !important; }

.ml-156 { margin-left: var(--mico-size-156) !important; }

.ml-160 { margin-left: var(--mico-size-160) !important; }

.ml-164 { margin-left: var(--mico-size-164) !important; }

.ml-168 { margin-left: var(--mico-size-168) !important; }

.ml-172 { margin-left: var(--mico-size-172) !important; }

.ml-176 { margin-left: var(--mico-size-176) !important; }

.ml-180 { margin-left: var(--mico-size-180) !important; }

.ml-184 { margin-left: var(--mico-size-184) !important; }

.ml-188 { margin-left: var(--mico-size-188) !important; }

.ml-192 { margin-left: var(--mico-size-192) !important; }

.ml-196 { margin-left: var(--mico-size-196) !important; }

.ml-200 { margin-left: var(--mico-size-200) !important; }

.ml-204 { margin-left: var(--mico-size-204) !important; }

.ml-208 { margin-left: var(--mico-size-208) !important; }

.ml-212 { margin-left: var(--mico-size-212) !important; }

.ml-216 { margin-left: var(--mico-size-216) !important; }

.ml-220 { margin-left: var(--mico-size-220) !important; }

.ml-224 { margin-left: var(--mico-size-224) !important; }

.ml-228 { margin-left: var(--mico-size-228) !important; }

.ml-232 { margin-left: var(--mico-size-232) !important; }

.ml-236 { margin-left: var(--mico-size-236) !important; }

.ml-240 { margin-left: var(--mico-size-240) !important; }

.ml-244 { margin-left: var(--mico-size-244) !important; }

.ml-248 { margin-left: var(--mico-size-248) !important; }

.ml-252 { margin-left: var(--mico-size-252) !important; }

.ml-256 { margin-left: var(--mico-size-256) !important; }

.ml-260 { margin-left: var(--mico-size-260) !important; }

.ml-264 { margin-left: var(--mico-size-264) !important; }

.ml-268 { margin-left: var(--mico-size-268) !important; }

.ml-272 { margin-left: var(--mico-size-272) !important; }

.ml-276 { margin-left: var(--mico-size-276) !important; }

.ml-280 { margin-left: var(--mico-size-280) !important; }

.ml-284 { margin-left: var(--mico-size-284) !important; }

.ml-288 { margin-left: var(--mico-size-288) !important; }

.ml-292 { margin-left: var(--mico-size-292) !important; }

.ml-296 { margin-left: var(--mico-size-296) !important; }

.ml-300 { margin-left: var(--mico-size-300) !important; }

.ml-304 { margin-left: var(--mico-size-304) !important; }

.ml-308 { margin-left: var(--mico-size-308) !important; }

.ml-312 { margin-left: var(--mico-size-312) !important; }

.ml-316 { margin-left: var(--mico-size-316) !important; }

.ml-320 { margin-left: var(--mico-size-320) !important; }

.ml-324 { margin-left: var(--mico-size-324) !important; }

.ml-328 { margin-left: var(--mico-size-328) !important; }

.ml-332 { margin-left: var(--mico-size-332) !important; }

.ml-336 { margin-left: var(--mico-size-336) !important; }

.ml-340 { margin-left: var(--mico-size-340) !important; }

.ml-344 { margin-left: var(--mico-size-344) !important; }

.ml-348 { margin-left: var(--mico-size-348) !important; }

.ml-352 { margin-left: var(--mico-size-352) !important; }

.ml-356 { margin-left: var(--mico-size-356) !important; }

.ml-360 { margin-left: var(--mico-size-360) !important; }

.ml-364 { margin-left: var(--mico-size-364) !important; }

.ml-368 { margin-left: var(--mico-size-368) !important; }

.ml-372 { margin-left: var(--mico-size-372) !important; }

.ml-376 { margin-left: var(--mico-size-376) !important; }

.ml-380 { margin-left: var(--mico-size-380) !important; }

.ml-384 { margin-left: var(--mico-size-384) !important; }

.ml-388 { margin-left: var(--mico-size-388) !important; }

.ml-392 { margin-left: var(--mico-size-392) !important; }

.ml-396 { margin-left: var(--mico-size-396) !important; }

.ml-400 { margin-left: var(--mico-size-400) !important; }

/* Margin-right classes from 4 to 100 */

.mr-4 { margin-right: var(--mico-size-4) !important; }

.mr-8 { margin-right: var(--mico-size-8) !important; }

.mr-12 { margin-right: var(--mico-size-12) !important; }

.mr-16 { margin-right: var(--mico-size-16) !important; }

.mr-20 { margin-right: var(--mico-size-20) !important; }

.mr-24 { margin-right: var(--mico-size-24) !important; }

.mr-28 { margin-right: var(--mico-size-28) !important; }

.mr-32 { margin-right: var(--mico-size-32) !important; }

.mr-36 { margin-right: var(--mico-size-36) !important; }

.mr-40 { margin-right: var(--mico-size-40) !important; }

.mr-44 { margin-right: var(--mico-size-44) !important; }

.mr-48 { margin-right: var(--mico-size-48) !important; }

.mr-52 { margin-right: var(--mico-size-52) !important; }

.mr-56 { margin-right: var(--mico-size-56) !important; }

.mr-60 { margin-right: var(--mico-size-60) !important; }

.mr-64 { margin-right: var(--mico-size-64) !important; }

.mr-68 { margin-right: var(--mico-size-68) !important; }

.mr-72 { margin-right: var(--mico-size-72) !important; }

.mr-76 { margin-right: var(--mico-size-76) !important; }

.mr-80 { margin-right: var(--mico-size-80) !important; }

.mr-84 { margin-right: var(--mico-size-84) !important; }

.mr-88 { margin-right: var(--mico-size-88) !important; }

.mr-92 { margin-right: var(--mico-size-92) !important; }

.mr-96 { margin-right: var(--mico-size-96) !important; }

.mr-100 { margin-right: var(--mico-size-100) !important; }

.mr-104 { margin-right: var(--mico-size-104) !important; }

.mr-108 { margin-right: var(--mico-size-108) !important; }

.mr-112 { margin-right: var(--mico-size-112) !important; }

.mr-116 { margin-right: var(--mico-size-116) !important; }

.mr-120 { margin-right: var(--mico-size-120) !important; }

.mr-124 { margin-right: var(--mico-size-124) !important; }

.mr-128 { margin-right: var(--mico-size-128) !important; }

.mr-132 { margin-right: var(--mico-size-132) !important; }

.mr-136 { margin-right: var(--mico-size-136) !important; }

.mr-140 { margin-right: var(--mico-size-140) !important; }

.mr-144 { margin-right: var(--mico-size-144) !important; }

.mr-148 { margin-right: var(--mico-size-148) !important; }

.mr-152 { margin-right: var(--mico-size-152) !important; }

.mr-156 { margin-right: var(--mico-size-156) !important; }

.mr-160 { margin-right: var(--mico-size-160) !important; }

.mr-164 { margin-right: var(--mico-size-164) !important; }

.mr-168 { margin-right: var(--mico-size-168) !important; }

.mr-172 { margin-right: var(--mico-size-172) !important; }

.mr-176 { margin-right: var(--mico-size-176) !important; }

.mr-180 { margin-right: var(--mico-size-180) !important; }

.mr-184 { margin-right: var(--mico-size-184) !important; }

.mr-188 { margin-right: var(--mico-size-188) !important; }

.mr-192 { margin-right: var(--mico-size-192) !important; }

.mr-196 { margin-right: var(--mico-size-196) !important; }

.mr-200 { margin-right: var(--mico-size-200) !important; }

.mr-204 { margin-right: var(--mico-size-204) !important; }

.mr-208 { margin-right: var(--mico-size-208) !important; }

.mr-212 { margin-right: var(--mico-size-212) !important; }

.mr-216 { margin-right: var(--mico-size-216) !important; }

.mr-220 { margin-right: var(--mico-size-220) !important; }

.mr-224 { margin-right: var(--mico-size-224) !important; }

.mr-228 { margin-right: var(--mico-size-228) !important; }

.mr-232 { margin-right: var(--mico-size-232) !important; }

.mr-236 { margin-right: var(--mico-size-236) !important; }

.mr-240 { margin-right: var(--mico-size-240) !important; }

.mr-244 { margin-right: var(--mico-size-244) !important; }

.mr-248 { margin-right: var(--mico-size-248) !important; }

.mr-252 { margin-right: var(--mico-size-252) !important; }

.mr-256 { margin-right: var(--mico-size-256) !important; }

.mr-260 { margin-right: var(--mico-size-260) !important; }

.mr-264 { margin-right: var(--mico-size-264) !important; }

.mr-268 { margin-right: var(--mico-size-268) !important; }

.mr-272 { margin-right: var(--mico-size-272) !important; }

.mr-276 { margin-right: var(--mico-size-276) !important; }

.mr-280 { margin-right: var(--mico-size-280) !important; }

.mr-284 { margin-right: var(--mico-size-284) !important; }

.mr-288 { margin-right: var(--mico-size-288) !important; }

.mr-292 { margin-right: var(--mico-size-292) !important; }

.mr-296 { margin-right: var(--mico-size-296) !important; }

.mr-300 { margin-right: var(--mico-size-300) !important; }

.mr-304 { margin-right: var(--mico-size-304) !important; }

.mr-308 { margin-right: var(--mico-size-308) !important; }

.mr-312 { margin-right: var(--mico-size-312) !important; }

.mr-316 { margin-right: var(--mico-size-316) !important; }

.mr-320 { margin-right: var(--mico-size-320) !important; }

.mr-324 { margin-right: var(--mico-size-324) !important; }

.mr-328 { margin-right: var(--mico-size-328) !important; }

.mr-332 { margin-right: var(--mico-size-332) !important; }

.mr-336 { margin-right: var(--mico-size-336) !important; }

.mr-340 { margin-right: var(--mico-size-340) !important; }

.mr-344 { margin-right: var(--mico-size-344) !important; }

.mr-348 { margin-right: var(--mico-size-348) !important; }

.mr-352 { margin-right: var(--mico-size-352) !important; }

.mr-356 { margin-right: var(--mico-size-356) !important; }

.mr-360 { margin-right: var(--mico-size-360) !important; }

.mr-364 { margin-right: var(--mico-size-364) !important; }

.mr-368 { margin-right: var(--mico-size-368) !important; }

.mr-372 { margin-right: var(--mico-size-372) !important; }

.mr-376 { margin-right: var(--mico-size-376) !important; }

.mr-380 { margin-right: var(--mico-size-380) !important; }

.mr-384 { margin-right: var(--mico-size-384) !important; }

.mr-388 { margin-right: var(--mico-size-388) !important; }

.mr-392 { margin-right: var(--mico-size-392) !important; }

.mr-396 { margin-right: var(--mico-size-396) !important; }

.mr-400 { margin-right: var(--mico-size-400) !important; }

/* Margin-inline classes from 4 to 100 */

.mx-4 { margin-inline: var(--mico-size-4) !important; }

.mx-8 { margin-inline: var(--mico-size-8) !important; }

.mx-12 { margin-inline: var(--mico-size-12) !important; }

.mx-16 { margin-inline: var(--mico-size-16) !important; }

.mx-20 { margin-inline: var(--mico-size-20) !important; }

.mx-24 { margin-inline: var(--mico-size-24) !important; }

.mx-28 { margin-inline: var(--mico-size-28) !important; }

.mx-32 { margin-inline: var(--mico-size-32) !important; }

.mx-36 { margin-inline: var(--mico-size-36) !important; }

.mx-40 { margin-inline: var(--mico-size-40) !important; }

.mx-44 { margin-inline: var(--mico-size-44) !important; }

.mx-48 { margin-inline: var(--mico-size-48) !important; }

.mx-52 { margin-inline: var(--mico-size-52) !important; }

.mx-56 { margin-inline: var(--mico-size-56) !important; }

.mx-60 { margin-inline: var(--mico-size-60) !important; }

.mx-64 { margin-inline: var(--mico-size-64) !important; }

.mx-68 { margin-inline: var(--mico-size-68) !important; }

.mx-72 { margin-inline: var(--mico-size-72) !important; }

.mx-76 { margin-inline: var(--mico-size-76) !important; }

.mx-80 { margin-inline: var(--mico-size-80) !important; }

.mx-84 { margin-inline: var(--mico-size-84) !important; }

.mx-88 { margin-inline: var(--mico-size-88) !important; }

.mx-92 { margin-inline: var(--mico-size-92) !important; }

.mx-96 { margin-inline: var(--mico-size-96) !important; }

.mx-100 { margin-inline: var(--mico-size-100) !important; }

.mx-104 { margin-inline: var(--mico-size-104) !important; }

.mx-108 { margin-inline: var(--mico-size-108) !important; }

.mx-112 { margin-inline: var(--mico-size-112) !important; }

.mx-116 { margin-inline: var(--mico-size-116) !important; }

.mx-120 { margin-inline: var(--mico-size-120) !important; }

.mx-124 { margin-inline: var(--mico-size-124) !important; }

.mx-128 { margin-inline: var(--mico-size-128) !important; }

.mx-132 { margin-inline: var(--mico-size-132) !important; }

.mx-136 { margin-inline: var(--mico-size-136) !important; }

.mx-140 { margin-inline: var(--mico-size-140) !important; }

.mx-144 { margin-inline: var(--mico-size-144) !important; }

.mx-148 { margin-inline: var(--mico-size-148) !important; }

.mx-152 { margin-inline: var(--mico-size-152) !important; }

.mx-156 { margin-inline: var(--mico-size-156) !important; }

.mx-160 { margin-inline: var(--mico-size-160) !important; }

.mx-164 { margin-inline: var(--mico-size-164) !important; }

.mx-168 { margin-inline: var(--mico-size-168) !important; }

.mx-172 { margin-inline: var(--mico-size-172) !important; }

.mx-176 { margin-inline: var(--mico-size-176) !important; }

.mx-180 { margin-inline: var(--mico-size-180) !important; }

.mx-184 { margin-inline: var(--mico-size-184) !important; }

.mx-188 { margin-inline: var(--mico-size-188) !important; }

.mx-192 { margin-inline: var(--mico-size-192) !important; }

.mx-196 { margin-inline: var(--mico-size-196) !important; }

.mx-200 { margin-inline: var(--mico-size-200) !important; }

.mx-204 { margin-inline: var(--mico-size-204) !important; }

.mx-208 { margin-inline: var(--mico-size-208) !important; }

.mx-212 { margin-inline: var(--mico-size-212) !important; }

.mx-216 { margin-inline: var(--mico-size-216) !important; }

.mx-220 { margin-inline: var(--mico-size-220) !important; }

.mx-224 { margin-inline: var(--mico-size-224) !important; }

.mx-228 { margin-inline: var(--mico-size-228) !important; }

.mx-232 { margin-inline: var(--mico-size-232) !important; }

.mx-236 { margin-inline: var(--mico-size-236) !important; }

.mx-240 { margin-inline: var(--mico-size-240) !important; }

.mx-244 { margin-inline: var(--mico-size-244) !important; }

.mx-248 { margin-inline: var(--mico-size-248) !important; }

.mx-252 { margin-inline: var(--mico-size-252) !important; }

.mx-256 { margin-inline: var(--mico-size-256) !important; }

.mx-260 { margin-inline: var(--mico-size-260) !important; }

.mx-264 { margin-inline: var(--mico-size-264) !important; }

.mx-268 { margin-inline: var(--mico-size-268) !important; }

.mx-272 { margin-inline: var(--mico-size-272) !important; }

.mx-276 { margin-inline: var(--mico-size-276) !important; }

.mx-280 { margin-inline: var(--mico-size-280) !important; }

.mx-284 { margin-inline: var(--mico-size-284) !important; }

.mx-288 { margin-inline: var(--mico-size-288) !important; }

.mx-292 { margin-inline: var(--mico-size-292) !important; }

.mx-296 { margin-inline: var(--mico-size-296) !important; }

.mx-300 { margin-inline: var(--mico-size-300) !important; }

.mx-304 { margin-inline: var(--mico-size-304) !important; }

.mx-308 { margin-inline: var(--mico-size-308) !important; }

.mx-312 { margin-inline: var(--mico-size-312) !important; }

.mx-316 { margin-inline: var(--mico-size-316) !important; }

.mx-320 { margin-inline: var(--mico-size-320) !important; }

.mx-324 { margin-inline: var(--mico-size-324) !important; }

.mx-328 { margin-inline: var(--mico-size-328) !important; }

.mx-332 { margin-inline: var(--mico-size-332) !important; }

.mx-336 { margin-inline: var(--mico-size-336) !important; }

.mx-340 { margin-inline: var(--mico-size-340) !important; }

.mx-344 { margin-inline: var(--mico-size-344) !important; }

.mx-348 { margin-inline: var(--mico-size-348) !important; }

.mx-352 { margin-inline: var(--mico-size-352) !important; }

.mx-356 { margin-inline: var(--mico-size-356) !important; }

.mx-360 { margin-inline: var(--mico-size-360) !important; }

.mx-364 { margin-inline: var(--mico-size-364) !important; }

.mx-368 { margin-inline: var(--mico-size-368) !important; }

.mx-372 { margin-inline: var(--mico-size-372) !important; }

.mx-376 { margin-inline: var(--mico-size-376) !important; }

.mx-380 { margin-inline: var(--mico-size-380) !important; }

.mx-384 { margin-inline: var(--mico-size-384) !important; }

.mx-388 { margin-inline: var(--mico-size-388) !important; }

.mx-392 { margin-inline: var(--mico-size-392) !important; }

.mx-396 { margin-inline: var(--mico-size-396) !important; }

.mx-400 { margin-inline: var(--mico-size-400) !important; }

/* Margin-block classes from 4 to 100 */

.my-4 { margin-block: var(--mico-size-4) !important; }

.my-8 { margin-block: var(--mico-size-8) !important; }

.my-12 { margin-block: var(--mico-size-12) !important; }

.my-16 { margin-block: var(--mico-size-16) !important; }

.my-20 { margin-block: var(--mico-size-20) !important; }

.my-24 { margin-block: var(--mico-size-24) !important; }

.my-28 { margin-block: var(--mico-size-28) !important; }

.my-32 { margin-block: var(--mico-size-32) !important; }

.my-36 { margin-block: var(--mico-size-36) !important; }

.my-40 { margin-block: var(--mico-size-40) !important; }

.my-44 { margin-block: var(--mico-size-44) !important; }

.my-48 { margin-block: var(--mico-size-48) !important; }

.my-52 { margin-block: var(--mico-size-52) !important; }

.my-56 { margin-block: var(--mico-size-56) !important; }

.my-60 { margin-block: var(--mico-size-60) !important; }

.my-64 { margin-block: var(--mico-size-64) !important; }

.my-68 { margin-block: var(--mico-size-68) !important; }

.my-72 { margin-block: var(--mico-size-72) !important; }

.my-76 { margin-block: var(--mico-size-76) !important; }

.my-80 { margin-block: var(--mico-size-80) !important; }

.my-84 { margin-block: var(--mico-size-84) !important; }

.my-88 { margin-block: var(--mico-size-88) !important; }

.my-92 { margin-block: var(--mico-size-92) !important; }

.my-96 { margin-block: var(--mico-size-96) !important; }

.my-100 { margin-block: var(--mico-size-100) !important; }

.my-104 { margin-block: var(--mico-size-104) !important; }

.my-108 { margin-block: var(--mico-size-108) !important; }

.my-112 { margin-block: var(--mico-size-112) !important; }

.my-116 { margin-block: var(--mico-size-116) !important; }

.my-120 { margin-block: var(--mico-size-120) !important; }

.my-124 { margin-block: var(--mico-size-124) !important; }

.my-128 { margin-block: var(--mico-size-128) !important; }

.my-132 { margin-block: var(--mico-size-132) !important; }

.my-136 { margin-block: var(--mico-size-136) !important; }

.my-140 { margin-block: var(--mico-size-140) !important; }

.my-144 { margin-block: var(--mico-size-144) !important; }

.my-148 { margin-block: var(--mico-size-148) !important; }

.my-152 { margin-block: var(--mico-size-152) !important; }

.my-156 { margin-block: var(--mico-size-156) !important; }

.my-160 { margin-block: var(--mico-size-160) !important; }

.my-164 { margin-block: var(--mico-size-164) !important; }

.my-168 { margin-block: var(--mico-size-168) !important; }

.my-172 { margin-block: var(--mico-size-172) !important; }

.my-176 { margin-block: var(--mico-size-176) !important; }

.my-180 { margin-block: var(--mico-size-180) !important; }

.my-184 { margin-block: var(--mico-size-184) !important; }

.my-188 { margin-block: var(--mico-size-188) !important; }

.my-192 { margin-block: var(--mico-size-192) !important; }

.my-196 { margin-block: var(--mico-size-196) !important; }

.my-200 { margin-block: var(--mico-size-200) !important; }

.my-204 { margin-block: var(--mico-size-204) !important; }

.my-208 { margin-block: var(--mico-size-208) !important; }

.my-212 { margin-block: var(--mico-size-212) !important; }

.my-216 { margin-block: var(--mico-size-216) !important; }

.my-220 { margin-block: var(--mico-size-220) !important; }

.my-224 { margin-block: var(--mico-size-224) !important; }

.my-228 { margin-block: var(--mico-size-228) !important; }

.my-232 { margin-block: var(--mico-size-232) !important; }

.my-236 { margin-block: var(--mico-size-236) !important; }

.my-240 { margin-block: var(--mico-size-240) !important; }

.my-244 { margin-block: var(--mico-size-244) !important; }

.my-248 { margin-block: var(--mico-size-248) !important; }

.my-252 { margin-block: var(--mico-size-252) !important; }

.my-256 { margin-block: var(--mico-size-256) !important; }

.my-260 { margin-block: var(--mico-size-260) !important; }

.my-264 { margin-block: var(--mico-size-264) !important; }

.my-268 { margin-block: var(--mico-size-268) !important; }

.my-272 { margin-block: var(--mico-size-272) !important; }

.my-276 { margin-block: var(--mico-size-276) !important; }

.my-280 { margin-block: var(--mico-size-280) !important; }

.my-284 { margin-block: var(--mico-size-284) !important; }

.my-288 { margin-block: var(--mico-size-288) !important; }

.my-292 { margin-block: var(--mico-size-292) !important; }

.my-296 { margin-block: var(--mico-size-296) !important; }

.my-300 { margin-block: var(--mico-size-300) !important; }

.my-304 { margin-block: var(--mico-size-304) !important; }

.my-308 { margin-block: var(--mico-size-308) !important; }

.my-312 { margin-block: var(--mico-size-312) !important; }

.my-316 { margin-block: var(--mico-size-316) !important; }

.my-320 { margin-block: var(--mico-size-320) !important; }

.my-324 { margin-block: var(--mico-size-324) !important; }

.my-328 { margin-block: var(--mico-size-328) !important; }

.my-332 { margin-block: var(--mico-size-332) !important; }

.my-336 { margin-block: var(--mico-size-336) !important; }

.my-340 { margin-block: var(--mico-size-340) !important; }

.my-344 { margin-block: var(--mico-size-344) !important; }

.my-348 { margin-block: var(--mico-size-348) !important; }

.my-352 { margin-block: var(--mico-size-352) !important; }

.my-356 { margin-block: var(--mico-size-356) !important; }

.my-360 { margin-block: var(--mico-size-360) !important; }

.my-364 { margin-block: var(--mico-size-364) !important; }

.my-368 { margin-block: var(--mico-size-368) !important; }

.my-372 { margin-block: var(--mico-size-372) !important; }

.my-376 { margin-block: var(--mico-size-376) !important; }

.my-380 { margin-block: var(--mico-size-380) !important; }

.my-384 { margin-block: var(--mico-size-384) !important; }

.my-388 { margin-block: var(--mico-size-388) !important; }

.my-392 { margin-block: var(--mico-size-392) !important; }

.my-396 { margin-block: var(--mico-size-396) !important; }

.my-400 { margin-block: var(--mico-size-400) !important; }

/* Padding classes from 4 to 100 */

.p-4 { padding: var(--mico-size-4) !important; }

.p-8 { padding: var(--mico-size-8) !important; }

.p-12 { padding: var(--mico-size-12) !important; }

.p-16 { padding: var(--mico-size-16) !important; }

.p-20 { padding: var(--mico-size-20) !important; }

.p-24 { padding: var(--mico-size-24) !important; }

.p-28 { padding: var(--mico-size-28) !important; }

.p-32 { padding: var(--mico-size-32) !important; }

.p-36 { padding: var(--mico-size-36) !important; }

.p-40 { padding: var(--mico-size-40) !important; }

.p-44 { padding: var(--mico-size-44) !important; }

.p-48 { padding: var(--mico-size-48) !important; }

.p-52 { padding: var(--mico-size-52) !important; }

.p-56 { padding: var(--mico-size-56) !important; }

.p-60 { padding: var(--mico-size-60) !important; }

.p-64 { padding: var(--mico-size-64) !important; }

.p-68 { padding: var(--mico-size-68) !important; }

.p-72 { padding: var(--mico-size-72) !important; }

.p-76 { padding: var(--mico-size-76) !important; }

.p-80 { padding: var(--mico-size-80) !important; }

.p-84 { padding: var(--mico-size-84) !important; }

.p-88 { padding: var(--mico-size-88) !important; }

.p-92 { padding: var(--mico-size-92) !important; }

.p-96 { padding: var(--mico-size-96) !important; }

.p-100 { padding: var(--mico-size-100) !important; }

.p-104 { padding: var(--mico-size-104) !important; }

.p-108 { padding: var(--mico-size-108) !important; }

.p-112 { padding: var(--mico-size-112) !important; }

.p-116 { padding: var(--mico-size-116) !important; }

.p-120 { padding: var(--mico-size-120) !important; }

.p-124 { padding: var(--mico-size-124) !important; }

.p-128 { padding: var(--mico-size-128) !important; }

.p-132 { padding: var(--mico-size-132) !important; }

.p-136 { padding: var(--mico-size-136) !important; }

.p-140 { padding: var(--mico-size-140) !important; }

.p-144 { padding: var(--mico-size-144) !important; }

.p-148 { padding: var(--mico-size-148) !important; }

.p-152 { padding: var(--mico-size-152) !important; }

.p-156 { padding: var(--mico-size-156) !important; }

.p-160 { padding: var(--mico-size-160) !important; }

.p-164 { padding: var(--mico-size-164) !important; }

.p-168 { padding: var(--mico-size-168) !important; }

.p-172 { padding: var(--mico-size-172) !important; }

.p-176 { padding: var(--mico-size-176) !important; }

.p-180 { padding: var(--mico-size-180) !important; }

.p-184 { padding: var(--mico-size-184) !important; }

.p-188 { padding: var(--mico-size-188) !important; }

.p-192 { padding: var(--mico-size-192) !important; }

.p-196 { padding: var(--mico-size-196) !important; }

.p-200 { padding: var(--mico-size-200) !important; }

.p-204 { padding: var(--mico-size-204) !important; }

.p-208 { padding: var(--mico-size-208) !important; }

.p-212 { padding: var(--mico-size-212) !important; }

.p-216 { padding: var(--mico-size-216) !important; }

.p-220 { padding: var(--mico-size-220) !important; }

.p-224 { padding: var(--mico-size-224) !important; }

.p-228 { padding: var(--mico-size-228) !important; }

.p-232 { padding: var(--mico-size-232) !important; }

.p-236 { padding: var(--mico-size-236) !important; }

.p-240 { padding: var(--mico-size-240) !important; }

.p-244 { padding: var(--mico-size-244) !important; }

.p-248 { padding: var(--mico-size-248) !important; }

.p-252 { padding: var(--mico-size-252) !important; }

.p-256 { padding: var(--mico-size-256) !important; }

.p-260 { padding: var(--mico-size-260) !important; }

.p-264 { padding: var(--mico-size-264) !important; }

.p-268 { padding: var(--mico-size-268) !important; }

.p-272 { padding: var(--mico-size-272) !important; }

.p-276 { padding: var(--mico-size-276) !important; }

.p-280 { padding: var(--mico-size-280) !important; }

.p-284 { padding: var(--mico-size-284) !important; }

.p-288 { padding: var(--mico-size-288) !important; }

.p-292 { padding: var(--mico-size-292) !important; }

.p-296 { padding: var(--mico-size-296) !important; }

.p-300 { padding: var(--mico-size-300) !important; }

.p-304 { padding: var(--mico-size-304) !important; }

.p-308 { padding: var(--mico-size-308) !important; }

.p-312 { padding: var(--mico-size-312) !important; }

.p-316 { padding: var(--mico-size-316) !important; }

.p-320 { padding: var(--mico-size-320) !important; }

.p-324 { padding: var(--mico-size-324) !important; }

.p-328 { padding: var(--mico-size-328) !important; }

.p-332 { padding: var(--mico-size-332) !important; }

.p-336 { padding: var(--mico-size-336) !important; }

.p-340 { padding: var(--mico-size-340) !important; }

.p-344 { padding: var(--mico-size-344) !important; }

.p-348 { padding: var(--mico-size-348) !important; }

.p-352 { padding: var(--mico-size-352) !important; }

.p-356 { padding: var(--mico-size-356) !important; }

.p-360 { padding: var(--mico-size-360) !important; }

.p-364 { padding: var(--mico-size-364) !important; }

.p-368 { padding: var(--mico-size-368) !important; }

.p-372 { padding: var(--mico-size-372) !important; }

.p-376 { padding: var(--mico-size-376) !important; }

.p-380 { padding: var(--mico-size-380) !important; }

.p-384 { padding: var(--mico-size-384) !important; }

.p-388 { padding: var(--mico-size-388) !important; }

.p-392 { padding: var(--mico-size-392) !important; }

.p-396 { padding: var(--mico-size-396) !important; }

.p-400 { padding: var(--mico-size-400) !important; }

/* Padding-top classes from 4 to 100 */

.pt-4 { padding-top: var(--mico-size-4) !important; }

.pt-8 { padding-top: var(--mico-size-8) !important; }

.pt-12 { padding-top: var(--mico-size-12) !important; }

.pt-16 { padding-top: var(--mico-size-16) !important; }

.pt-20 { padding-top: var(--mico-size-20) !important; }

.pt-24 { padding-top: var(--mico-size-24) !important; }

.pt-28 { padding-top: var(--mico-size-28) !important; }

.pt-32 { padding-top: var(--mico-size-32) !important; }

.pt-36 { padding-top: var(--mico-size-36) !important; }

.pt-40 { padding-top: var(--mico-size-40) !important; }

.pt-44 { padding-top: var(--mico-size-44) !important; }

.pt-48 { padding-top: var(--mico-size-48) !important; }

.pt-52 { padding-top: var(--mico-size-52) !important; }

.pt-56 { padding-top: var(--mico-size-56) !important; }

.pt-60 { padding-top: var(--mico-size-60) !important; }

.pt-64 { padding-top: var(--mico-size-64) !important; }

.pt-68 { padding-top: var(--mico-size-68) !important; }

.pt-72 { padding-top: var(--mico-size-72) !important; }

.pt-76 { padding-top: var(--mico-size-76) !important; }

.pt-80 { padding-top: var(--mico-size-80) !important; }

.pt-84 { padding-top: var(--mico-size-84) !important; }

.pt-88 { padding-top: var(--mico-size-88) !important; }

.pt-92 { padding-top: var(--mico-size-92) !important; }

.pt-96 { padding-top: var(--mico-size-96) !important; }

.pt-100 { padding-top: var(--mico-size-100) !important; }

.pt-104 { padding-top: var(--mico-size-104) !important; }

.pt-108 { padding-top: var(--mico-size-108) !important; }

.pt-112 { padding-top: var(--mico-size-112) !important; }

.pt-116 { padding-top: var(--mico-size-116) !important; }

.pt-120 { padding-top: var(--mico-size-120) !important; }

.pt-124 { padding-top: var(--mico-size-124) !important; }

.pt-128 { padding-top: var(--mico-size-128) !important; }

.pt-132 { padding-top: var(--mico-size-132) !important; }

.pt-136 { padding-top: var(--mico-size-136) !important; }

.pt-140 { padding-top: var(--mico-size-140) !important; }

.pt-144 { padding-top: var(--mico-size-144) !important; }

.pt-148 { padding-top: var(--mico-size-148) !important; }

.pt-152 { padding-top: var(--mico-size-152) !important; }

.pt-156 { padding-top: var(--mico-size-156) !important; }

.pt-160 { padding-top: var(--mico-size-160) !important; }

.pt-164 { padding-top: var(--mico-size-164) !important; }

.pt-168 { padding-top: var(--mico-size-168) !important; }

.pt-172 { padding-top: var(--mico-size-172) !important; }

.pt-176 { padding-top: var(--mico-size-176) !important; }

.pt-180 { padding-top: var(--mico-size-180) !important; }

.pt-184 { padding-top: var(--mico-size-184) !important; }

.pt-188 { padding-top: var(--mico-size-188) !important; }

.pt-192 { padding-top: var(--mico-size-192) !important; }

.pt-196 { padding-top: var(--mico-size-196) !important; }

.pt-200 { padding-top: var(--mico-size-200) !important; }

.pt-204 { padding-top: var(--mico-size-204) !important; }

.pt-208 { padding-top: var(--mico-size-208) !important; }

.pt-212 { padding-top: var(--mico-size-212) !important; }

.pt-216 { padding-top: var(--mico-size-216) !important; }

.pt-220 { padding-top: var(--mico-size-220) !important; }

.pt-224 { padding-top: var(--mico-size-224) !important; }

.pt-228 { padding-top: var(--mico-size-228) !important; }

.pt-232 { padding-top: var(--mico-size-232) !important; }

.pt-236 { padding-top: var(--mico-size-236) !important; }

.pt-240 { padding-top: var(--mico-size-240) !important; }

.pt-244 { padding-top: var(--mico-size-244) !important; }

.pt-248 { padding-top: var(--mico-size-248) !important; }

.pt-252 { padding-top: var(--mico-size-252) !important; }

.pt-256 { padding-top: var(--mico-size-256) !important; }

.pt-260 { padding-top: var(--mico-size-260) !important; }

.pt-264 { padding-top: var(--mico-size-264) !important; }

.pt-268 { padding-top: var(--mico-size-268) !important; }

.pt-272 { padding-top: var(--mico-size-272) !important; }

.pt-276 { padding-top: var(--mico-size-276) !important; }

.pt-280 { padding-top: var(--mico-size-280) !important; }

.pt-284 { padding-top: var(--mico-size-284) !important; }

.pt-288 { padding-top: var(--mico-size-288) !important; }

.pt-292 { padding-top: var(--mico-size-292) !important; }

.pt-296 { padding-top: var(--mico-size-296) !important; }

.pt-300 { padding-top: var(--mico-size-300) !important; }

.pt-304 { padding-top: var(--mico-size-304) !important; }

.pt-308 { padding-top: var(--mico-size-308) !important; }

.pt-312 { padding-top: var(--mico-size-312) !important; }

.pt-316 { padding-top: var(--mico-size-316) !important; }

.pt-320 { padding-top: var(--mico-size-320) !important; }

.pt-324 { padding-top: var(--mico-size-324) !important; }

.pt-328 { padding-top: var(--mico-size-328) !important; }

.pt-332 { padding-top: var(--mico-size-332) !important; }

.pt-336 { padding-top: var(--mico-size-336) !important; }

.pt-340 { padding-top: var(--mico-size-340) !important; }

.pt-344 { padding-top: var(--mico-size-344) !important; }

.pt-348 { padding-top: var(--mico-size-348) !important; }

.pt-352 { padding-top: var(--mico-size-352) !important; }

.pt-356 { padding-top: var(--mico-size-356) !important; }

.pt-360 { padding-top: var(--mico-size-360) !important; }

.pt-364 { padding-top: var(--mico-size-364) !important; }

.pt-368 { padding-top: var(--mico-size-368) !important; }

.pt-372 { padding-top: var(--mico-size-372) !important; }

.pt-376 { padding-top: var(--mico-size-376) !important; }

.pt-380 { padding-top: var(--mico-size-380) !important; }

.pt-384 { padding-top: var(--mico-size-384) !important; }

.pt-388 { padding-top: var(--mico-size-388) !important; }

.pt-392 { padding-top: var(--mico-size-392) !important; }

.pt-396 { padding-top: var(--mico-size-396) !important; }

.pt-400 { padding-top: var(--mico-size-400) !important; }

/* Padding-bottom classes from 4 to 100 */

.pb-4 { padding-bottom: var(--mico-size-4) !important; }

.pb-8 { padding-bottom: var(--mico-size-8) !important; }

.pb-12 { padding-bottom: var(--mico-size-12) !important; }

.pb-16 { padding-bottom: var(--mico-size-16) !important; }

.pb-20 { padding-bottom: var(--mico-size-20) !important; }

.pb-24 { padding-bottom: var(--mico-size-24) !important; }

.pb-28 { padding-bottom: var(--mico-size-28) !important; }

.pb-32 { padding-bottom: var(--mico-size-32) !important; }

.pb-36 { padding-bottom: var(--mico-size-36) !important; }

.pb-40 { padding-bottom: var(--mico-size-40) !important; }

.pb-44 { padding-bottom: var(--mico-size-44) !important; }

.pb-48 { padding-bottom: var(--mico-size-48) !important; }

.pb-52 { padding-bottom: var(--mico-size-52) !important; }

.pb-56 { padding-bottom: var(--mico-size-56) !important; }

.pb-60 { padding-bottom: var(--mico-size-60) !important; }

.pb-64 { padding-bottom: var(--mico-size-64) !important; }

.pb-68 { padding-bottom: var(--mico-size-68) !important; }

.pb-72 { padding-bottom: var(--mico-size-72) !important; }

.pb-76 { padding-bottom: var(--mico-size-76) !important; }

.pb-80 { padding-bottom: var(--mico-size-80) !important; }

.pb-84 { padding-bottom: var(--mico-size-84) !important; }

.pb-88 { padding-bottom: var(--mico-size-88) !important; }

.pb-92 { padding-bottom: var(--mico-size-92) !important; }

.pb-96 { padding-bottom: var(--mico-size-96) !important; }

.pb-100 { padding-bottom: var(--mico-size-100) !important; }

.pb-104 { padding-bottom: var(--mico-size-104) !important; }

.pb-108 { padding-bottom: var(--mico-size-108) !important; }

.pb-112 { padding-bottom: var(--mico-size-112) !important; }

.pb-116 { padding-bottom: var(--mico-size-116) !important; }

.pb-120 { padding-bottom: var(--mico-size-120) !important; }

.pb-124 { padding-bottom: var(--mico-size-124) !important; }

.pb-128 { padding-bottom: var(--mico-size-128) !important; }

.pb-132 { padding-bottom: var(--mico-size-132) !important; }

.pb-136 { padding-bottom: var(--mico-size-136) !important; }

.pb-140 { padding-bottom: var(--mico-size-140) !important; }

.pb-144 { padding-bottom: var(--mico-size-144) !important; }

.pb-148 { padding-bottom: var(--mico-size-148) !important; }

.pb-152 { padding-bottom: var(--mico-size-152) !important; }

.pb-156 { padding-bottom: var(--mico-size-156) !important; }

.pb-160 { padding-bottom: var(--mico-size-160) !important; }

.pb-164 { padding-bottom: var(--mico-size-164) !important; }

.pb-168 { padding-bottom: var(--mico-size-168) !important; }

.pb-172 { padding-bottom: var(--mico-size-172) !important; }

.pb-176 { padding-bottom: var(--mico-size-176) !important; }

.pb-180 { padding-bottom: var(--mico-size-180) !important; }

.pb-184 { padding-bottom: var(--mico-size-184) !important; }

.pb-188 { padding-bottom: var(--mico-size-188) !important; }

.pb-192 { padding-bottom: var(--mico-size-192) !important; }

.pb-196 { padding-bottom: var(--mico-size-196) !important; }

.pb-200 { padding-bottom: var(--mico-size-200) !important; }

.pb-204 { padding-bottom: var(--mico-size-204) !important; }

.pb-208 { padding-bottom: var(--mico-size-208) !important; }

.pb-212 { padding-bottom: var(--mico-size-212) !important; }

.pb-216 { padding-bottom: var(--mico-size-216) !important; }

.pb-220 { padding-bottom: var(--mico-size-220) !important; }

.pb-224 { padding-bottom: var(--mico-size-224) !important; }

.pb-228 { padding-bottom: var(--mico-size-228) !important; }

.pb-232 { padding-bottom: var(--mico-size-232) !important; }

.pb-236 { padding-bottom: var(--mico-size-236) !important; }

.pb-240 { padding-bottom: var(--mico-size-240) !important; }

.pb-244 { padding-bottom: var(--mico-size-244) !important; }

.pb-248 { padding-bottom: var(--mico-size-248) !important; }

.pb-252 { padding-bottom: var(--mico-size-252) !important; }

.pb-256 { padding-bottom: var(--mico-size-256) !important; }

.pb-260 { padding-bottom: var(--mico-size-260) !important; }

.pb-264 { padding-bottom: var(--mico-size-264) !important; }

.pb-268 { padding-bottom: var(--mico-size-268) !important; }

.pb-272 { padding-bottom: var(--mico-size-272) !important; }

.pb-276 { padding-bottom: var(--mico-size-276) !important; }

.pb-280 { padding-bottom: var(--mico-size-280) !important; }

.pb-284 { padding-bottom: var(--mico-size-284) !important; }

.pb-288 { padding-bottom: var(--mico-size-288) !important; }

.pb-292 { padding-bottom: var(--mico-size-292) !important; }

.pb-296 { padding-bottom: var(--mico-size-296) !important; }

.pb-300 { padding-bottom: var(--mico-size-300) !important; }

.pb-304 { padding-bottom: var(--mico-size-304) !important; }

.pb-308 { padding-bottom: var(--mico-size-308) !important; }

.pb-312 { padding-bottom: var(--mico-size-312) !important; }

.pb-316 { padding-bottom: var(--mico-size-316) !important; }

.pb-320 { padding-bottom: var(--mico-size-320) !important; }

.pb-324 { padding-bottom: var(--mico-size-324) !important; }

.pb-328 { padding-bottom: var(--mico-size-328) !important; }

.pb-332 { padding-bottom: var(--mico-size-332) !important; }

.pb-336 { padding-bottom: var(--mico-size-336) !important; }

.pb-340 { padding-bottom: var(--mico-size-340) !important; }

.pb-344 { padding-bottom: var(--mico-size-344) !important; }

.pb-348 { padding-bottom: var(--mico-size-348) !important; }

.pb-352 { padding-bottom: var(--mico-size-352) !important; }

.pb-356 { padding-bottom: var(--mico-size-356) !important; }

.pb-360 { padding-bottom: var(--mico-size-360) !important; }

.pb-364 { padding-bottom: var(--mico-size-364) !important; }

.pb-368 { padding-bottom: var(--mico-size-368) !important; }

.pb-372 { padding-bottom: var(--mico-size-372) !important; }

.pb-376 { padding-bottom: var(--mico-size-376) !important; }

.pb-380 { padding-bottom: var(--mico-size-380) !important; }

.pb-384 { padding-bottom: var(--mico-size-384) !important; }

.pb-388 { padding-bottom: var(--mico-size-388) !important; }

.pb-392 { padding-bottom: var(--mico-size-392) !important; }

.pb-396 { padding-bottom: var(--mico-size-396) !important; }

.pb-400 { padding-bottom: var(--mico-size-400) !important; }

/* Padding-left classes from 4 to 100 */

.pl-4 { padding-left: var(--mico-size-4) !important; }

.pl-8 { padding-left: var(--mico-size-8) !important; }

.pl-12 { padding-left: var(--mico-size-12) !important; }

.pl-16 { padding-left: var(--mico-size-16) !important; }

.pl-20 { padding-left: var(--mico-size-20) !important; }

.pl-24 { padding-left: var(--mico-size-24) !important; }

.pl-28 { padding-left: var(--mico-size-28) !important; }

.pl-32 { padding-left: var(--mico-size-32) !important; }

.pl-36 { padding-left: var(--mico-size-36) !important; }

.pl-40 { padding-left: var(--mico-size-40) !important; }

.pl-44 { padding-left: var(--mico-size-44) !important; }

.pl-48 { padding-left: var(--mico-size-48) !important; }

.pl-52 { padding-left: var(--mico-size-52) !important; }

.pl-56 { padding-left: var(--mico-size-56) !important; }

.pl-60 { padding-left: var(--mico-size-60) !important; }

.pl-64 { padding-left: var(--mico-size-64) !important; }

.pl-68 { padding-left: var(--mico-size-68) !important; }

.pl-72 { padding-left: var(--mico-size-72) !important; }

.pl-76 { padding-left: var(--mico-size-) !important; }

.pl-72 { padding-left: var(--mico-size-72) !important; }

.pl-76 { padding-left: var(--mico-size-76) !important; }

.pl-80 { padding-left: var(--mico-size-80) !important; }

.pl-84 { padding-left: var(--mico-size-84) !important; }

.pl-88 { padding-left: var(--mico-size-88) !important; }

.pl-92 { padding-left: var(--mico-size-92) !important; }

.pl-96 { padding-left: var(--mico-size-96) !important; }

.pl-100 { padding-left: var(--mico-size-100) !important; }

.pl-104 { padding-left: var(--mico-size-104) !important; }

.pl-108 { padding-left: var(--mico-size-108) !important; }

.pl-112 { padding-left: var(--mico-size-112) !important; }

.pl-116 { padding-left: var(--mico-size-116) !important; }

.pl-120 { padding-left: var(--mico-size-120) !important; }

.pl-124 { padding-left: var(--mico-size-124) !important; }

.pl-128 { padding-left: var(--mico-size-128) !important; }

.pl-132 { padding-left: var(--mico-size-132) !important; }

.pl-136 { padding-left: var(--mico-size-136) !important; }

.pl-140 { padding-left: var(--mico-size-140) !important; }

.pl-144 { padding-left: var(--mico-size-144) !important; }

.pl-148 { padding-left: var(--mico-size-148) !important; }

.pl-152 { padding-left: var(--mico-size-152) !important; }

.pl-156 { padding-left: var(--mico-size-156) !important; }

.pl-160 { padding-left: var(--mico-size-160) !important; }

.pl-164 { padding-left: var(--mico-size-164) !important; }

.pl-168 { padding-left: var(--mico-size-168) !important; }

.pl-172 { padding-left: var(--mico-size-172) !important; }

.pl-176 { padding-left: var(--mico-size-176) !important; }

.pl-180 { padding-left: var(--mico-size-180) !important; }

.pl-184 { padding-left: var(--mico-size-184) !important; }

.pl-188 { padding-left: var(--mico-size-188) !important; }

.pl-192 { padding-left: var(--mico-size-192) !important; }

.pl-196 { padding-left: var(--mico-size-196) !important; }

.pl-200 { padding-left: var(--mico-size-200) !important; }

.pl-204 { padding-left: var(--mico-size-204) !important; }

.pl-208 { padding-left: var(--mico-size-208) !important; }

.pl-212 { padding-left: var(--mico-size-212) !important; }

.pl-216 { padding-left: var(--mico-size-216) !important; }

.pl-220 { padding-left: var(--mico-size-220) !important; }

.pl-224 { padding-left: var(--mico-size-224) !important; }

.pl-228 { padding-left: var(--mico-size-228) !important; }

.pl-232 { padding-left: var(--mico-size-232) !important; }

.pl-236 { padding-left: var(--mico-size-236) !important; }

.pl-240 { padding-left: var(--mico-size-240) !important; }

.pl-244 { padding-left: var(--mico-size-244) !important; }

.pl-248 { padding-left: var(--mico-size-248) !important; }

.pl-252 { padding-left: var(--mico-size-252) !important; }

.pl-256 { padding-left: var(--mico-size-256) !important; }

.pl-260 { padding-left: var(--mico-size-260) !important; }

.pl-264 { padding-left: var(--mico-size-264) !important; }

.pl-268 { padding-left: var(--mico-size-268) !important; }

.pl-272 { padding-left: var(--mico-size-272) !important; }

.pl-276 { padding-left: var(--mico-size-276) !important; }

.pl-280 { padding-left: var(--mico-size-280) !important; }

.pl-284 { padding-left: var(--mico-size-284) !important; }

.pl-288 { padding-left: var(--mico-size-288) !important; }

.pl-292 { padding-left: var(--mico-size-292) !important; }

.pl-296 { padding-left: var(--mico-size-296) !important; }

.pl-300 { padding-left: var(--mico-size-300) !important; }

.pl-304 { padding-left: var(--mico-size-304) !important; }

.pl-308 { padding-left: var(--mico-size-308) !important; }

.pl-312 { padding-left: var(--mico-size-312) !important; }

.pl-316 { padding-left: var(--mico-size-316) !important; }

.pl-320 { padding-left: var(--mico-size-320) !important; }

.pl-324 { padding-left: var(--mico-size-324) !important; }

.pl-328 { padding-left: var(--mico-size-328) !important; }

.pl-332 { padding-left: var(--mico-size-332) !important; }

.pl-336 { padding-left: var(--mico-size-336) !important; }

.pl-340 { padding-left: var(--mico-size-340) !important; }

.pl-344 { padding-left: var(--mico-size-344) !important; }

.pl-348 { padding-left: var(--mico-size-348) !important; }

.pl-352 { padding-left: var(--mico-size-352) !important; }

.pl-356 { padding-left: var(--mico-size-356) !important; }

.pl-360 { padding-left: var(--mico-size-360) !important; }

.pl-364 { padding-left: var(--mico-size-364) !important; }

.pl-368 { padding-left: var(--mico-size-368) !important; }

.pl-372 { padding-left: var(--mico-size-372) !important; }

.pl-376 { padding-left: var(--mico-size-376) !important; }

.pl-380 { padding-left: var(--mico-size-380) !important; }

.pl-384 { padding-left: var(--mico-size-384) !important; }

.pl-388 { padding-left: var(--mico-size-388) !important; }

.pl-392 { padding-left: var(--mico-size-392) !important; }

.pl-396 { padding-left: var(--mico-size-396) !important; }

.pl-400 { padding-left: var(--mico-size-400) !important; }

/* Padding-right classes from 4 to 100 */

.pr-4 { padding-right: var(--mico-size-4) !important; }

.pr-8 { padding-right: var(--mico-size-8) !important; }

.pr-12 { padding-right: var(--mico-size-12) !important; }

.pr-16 { padding-right: var(--mico-size-16) !important; }

.pr-20 { padding-right: var(--mico-size-20) !important; }

.pr-24 { padding-right: var(--mico-size-24) !important; }

.pr-28 { padding-right: var(--mico-size-28) !important; }

.pr-32 { padding-right: var(--mico-size-32) !important; }

.pr-36 { padding-right: var(--mico-size-36) !important; }

.pr-40 { padding-right: var(--mico-size-40) !important; }

.pr-44 { padding-right: var(--mico-size-44) !important; }

.pr-48 { padding-right: var(--mico-size-48) !important; }

.pr-52 { padding-right: var(--mico-size-52) !important; }

.pr-56 { padding-right: var(--mico-size-56) !important; }

.pr-60 { padding-right: var(--mico-size-60) !important; }

.pr-64 { padding-right: var(--mico-size-64) !important; }

.pr-68 { padding-right: var(--mico-size-68) !important; }

.pr-72 { padding-right: var(--mico-size-72) !important; }

.pr-76 { padding-right: var(--mico-size-76) !important; }

.pr-80 { padding-right: var(--mico-size-80) !important; }

.pr-84 { padding-right: var(--mico-size-84) !important; }

.pr-88 { padding-right: var(--mico-size-88) !important; }

.pr-92 { padding-right: var(--mico-size-92) !important; }

.pr-96 { padding-right: var(--mico-size-96) !important; }

.pr-100 { padding-right: var(--mico-size-100) !important; }

.pr-104 { padding-right: var(--mico-size-104) !important; }

.pr-108 { padding-right: var(--mico-size-108) !important; }

.pr-112 { padding-right: var(--mico-size-112) !important; }

.pr-116 { padding-right: var(--mico-size-116) !important; }

.pr-120 { padding-right: var(--mico-size-120) !important; }

.pr-124 { padding-right: var(--mico-size-124) !important; }

.pr-128 { padding-right: var(--mico-size-128) !important; }

.pr-132 { padding-right: var(--mico-size-132) !important; }

.pr-136 { padding-right: var(--mico-size-136) !important; }

.pr-140 { padding-right: var(--mico-size-140) !important; }

.pr-144 { padding-right: var(--mico-size-144) !important; }

.pr-148 { padding-right: var(--mico-size-148) !important; }

.pr-152 { padding-right: var(--mico-size-152) !important; }

.pr-156 { padding-right: var(--mico-size-156) !important; }

.pr-160 { padding-right: var(--mico-size-160) !important; }

.pr-164 { padding-right: var(--mico-size-164) !important; }

.pr-168 { padding-right: var(--mico-size-168) !important; }

.pr-172 { padding-right: var(--mico-size-172) !important; }

.pr-176 { padding-right: var(--mico-size-176) !important; }

.pr-180 { padding-right: var(--mico-size-180) !important; }

.pr-184 { padding-right: var(--mico-size-184) !important; }

.pr-188 { padding-right: var(--mico-size-188) !important; }

.pr-192 { padding-right: var(--mico-size-192) !important; }

.pr-196 { padding-right: var(--mico-size-196) !important; }

.pr-200 { padding-right: var(--mico-size-200) !important; }

.pr-204 { padding-right: var(--mico-size-204) !important; }

.pr-208 { padding-right: var(--mico-size-208) !important; }

.pr-212 { padding-right: var(--mico-size-212) !important; }

.pr-216 { padding-right: var(--mico-size-216) !important; }

.pr-220 { padding-right: var(--mico-size-220) !important; }

.pr-224 { padding-right: var(--mico-size-224) !important; }

.pr-228 { padding-right: var(--mico-size-228) !important; }

.pr-232 { padding-right: var(--mico-size-232) !important; }

.pr-236 { padding-right: var(--mico-size-236) !important; }

.pr-240 { padding-right: var(--mico-size-240) !important; }

.pr-244 { padding-right: var(--mico-size-244) !important; }

.pr-248 { padding-right: var(--mico-size-248) !important; }

.pr-252 { padding-right: var(--mico-size-252) !important; }

.pr-256 { padding-right: var(--mico-size-256) !important; }

.pr-260 { padding-right: var(--mico-size-260) !important; }

.pr-264 { padding-right: var(--mico-size-264) !important; }

.pr-268 { padding-right: var(--mico-size-268) !important; }

.pr-272 { padding-right: var(--mico-size-272) !important; }

.pr-276 { padding-right: var(--mico-size-276) !important; }

.pr-280 { padding-right: var(--mico-size-280) !important; }

.pr-284 { padding-right: var(--mico-size-284) !important; }

.pr-288 { padding-right: var(--mico-size-288) !important; }

.pr-292 { padding-right: var(--mico-size-292) !important; }

.pr-296 { padding-right: var(--mico-size-296) !important; }

.pr-300 { padding-right: var(--mico-size-300) !important; }

.pr-304 { padding-right: var(--mico-size-304) !important; }

.pr-308 { padding-right: var(--mico-size-308) !important; }

.pr-312 { padding-right: var(--mico-size-312) !important; }

.pr-316 { padding-right: var(--mico-size-316) !important; }

.pr-320 { padding-right: var(--mico-size-320) !important; }

.pr-324 { padding-right: var(--mico-size-324) !important; }

.pr-328 { padding-right: var(--mico-size-328) !important; }

.pr-332 { padding-right: var(--mico-size-332) !important; }

.pr-336 { padding-right: var(--mico-size-336) !important; }

.pr-340 { padding-right: var(--mico-size-340) !important; }

.pr-344 { padding-right: var(--mico-size-344) !important; }

.pr-348 { padding-right: var(--mico-size-348) !important; }

.pr-352 { padding-right: var(--mico-size-352) !important; }

.pr-356 { padding-right: var(--mico-size-356) !important; }

.pr-360 { padding-right: var(--mico-size-360) !important; }

.pr-364 { padding-right: var(--mico-size-364) !important; }

.pr-368 { padding-right: var(--mico-size-368) !important; }

.pr-372 { padding-right: var(--mico-size-372) !important; }

.pr-376 { padding-right: var(--mico-size-376) !important; }

.pr-380 { padding-right: var(--mico-size-380) !important; }

.pr-384 { padding-right: var(--mico-size-384) !important; }

.pr-388 { padding-right: var(--mico-size-388) !important; }

.pr-392 { padding-right: var(--mico-size-392) !important; }

.pr-396 { padding-right: var(--mico-size-396) !important; }

.pr-400 { padding-right: var(--mico-size-400) !important; }

/* Padding-inline classes from 4 to 100 */

.px-4 { padding-inline: var(--mico-size-4) !important; }

.px-8 { padding-inline: var(--mico-size-8) !important; }

.px-12 { padding-inline: var(--mico-size-12) !important; }

.px-16 { padding-inline: var(--mico-size-16) !important; }

.px-20 { padding-inline: var(--mico-size-20) !important; }

.px-24 { padding-inline: var(--mico-size-24) !important; }

.px-28 { padding-inline: var(--mico-size-28) !important; }

.px-32 { padding-inline: var(--mico-size-32) !important; }

.px-36 { padding-inline: var(--mico-size-36) !important; }

.px-40 { padding-inline: var(--mico-size-40) !important; }

.px-44 { padding-inline: var(--mico-size-44) !important; }

.px-48 { padding-inline: var(--mico-size-48) !important; }

.px-52 { padding-inline: var(--mico-size-52) !important; }

.px-56 { padding-inline: var(--mico-size-56) !important; }

.px-60 { padding-inline: var(--mico-size-60) !important; }

.px-64 { padding-inline: var(--mico-size-64) !important; }

.px-68 { padding-inline: var(--mico-size-68) !important; }

.px-72 { padding-inline: var(--mico-size-72) !important; }

.px-76 { padding-inline: var(--mico-size-76) !important; }

.px-80 { padding-inline: var(--mico-size-80) !important; }

.px-84 { padding-inline: var(--mico-size-84) !important; }

.px-88 { padding-inline: var(--mico-size-88) !important; }

.px-92 { padding-inline: var(--mico-size-92) !important; }

.px-96 { padding-inline: var(--mico-size-96) !important; }

.px-100 { padding-inline: var(--mico-size-100) !important; }

.px-104 { padding-inline: var(--mico-size-104) !important; }

.px-108 { padding-inline: var(--mico-size-108) !important; }

.px-112 { padding-inline: var(--mico-size-112) !important; }

.px-116 { padding-inline: var(--mico-size-116) !important; }

.px-120 { padding-inline: var(--mico-size-120) !important; }

.px-124 { padding-inline: var(--mico-size-124) !important; }

.px-128 { padding-inline: var(--mico-size-128) !important; }

.px-132 { padding-inline: var(--mico-size-132) !important; }

.px-136 { padding-inline: var(--mico-size-136) !important; }

.px-140 { padding-inline: var(--mico-size-140) !important; }

.px-144 { padding-inline: var(--mico-size-144) !important; }

.px-148 { padding-inline: var(--mico-size-148) !important; }

.px-152 { padding-inline: var(--mico-size-152) !important; }

.px-156 { padding-inline: var(--mico-size-156) !important; }

.px-160 { padding-inline: var(--mico-size-160) !important; }

.px-164 { padding-inline: var(--mico-size-164) !important; }

.px-168 { padding-inline: var(--mico-size-168) !important; }

.px-172 { padding-inline: var(--mico-size-172) !important; }

.px-176 { padding-inline: var(--mico-size-176) !important; }

.px-180 { padding-inline: var(--mico-size-180) !important; }

.px-184 { padding-inline: var(--mico-size-184) !important; }

.px-188 { padding-inline: var(--mico-size-188) !important; }

.px-192 { padding-inline: var(--mico-size-192) !important; }

.px-196 { padding-inline: var(--mico-size-196) !important; }

.px-200 { padding-inline: var(--mico-size-200) !important; }

.px-204 { padding-inline: var(--mico-size-204) !important; }

.px-208 { padding-inline: var(--mico-size-208) !important; }

.px-212 { padding-inline: var(--mico-size-212) !important; }

.px-216 { padding-inline: var(--mico-size-216) !important; }

.px-220 { padding-inline: var(--mico-size-220) !important; }

.px-224 { padding-inline: var(--mico-size-224) !important; }

.px-228 { padding-inline: var(--mico-size-228) !important; }

.px-232 { padding-inline: var(--mico-size-232) !important; }

.px-236 { padding-inline: var(--mico-size-236) !important; }

.px-240 { padding-inline: var(--mico-size-240) !important; }

.px-244 { padding-inline: var(--mico-size-244) !important; }

.px-248 { padding-inline: var(--mico-size-248) !important; }

.px-252 { padding-inline: var(--mico-size-252) !important; }

.px-256 { padding-inline: var(--mico-size-256) !important; }

.px-260 { padding-inline: var(--mico-size-260) !important; }

.px-264 { padding-inline: var(--mico-size-264) !important; }

.px-268 { padding-inline: var(--mico-size-268) !important; }

.px-272 { padding-inline: var(--mico-size-272) !important; }

.px-276 { padding-inline: var(--mico-size-276) !important; }

.px-280 { padding-inline: var(--mico-size-280) !important; }

.px-284 { padding-inline: var(--mico-size-284) !important; }

.px-288 { padding-inline: var(--mico-size-288) !important; }

.px-292 { padding-inline: var(--mico-size-292) !important; }

.px-296 { padding-inline: var(--mico-size-296) !important; }

.px-300 { padding-inline: var(--mico-size-300) !important; }

.px-304 { padding-inline: var(--mico-size-304) !important; }

.px-308 { padding-inline: var(--mico-size-308) !important; }

.px-312 { padding-inline: var(--mico-size-312) !important; }

.px-316 { padding-inline: var(--mico-size-316) !important; }

.px-320 { padding-inline: var(--mico-size-320) !important; }

.px-324 { padding-inline: var(--mico-size-324) !important; }

.px-328 { padding-inline: var(--mico-size-328) !important; }

.px-332 { padding-inline: var(--mico-size-332) !important; }

.px-336 { padding-inline: var(--mico-size-336) !important; }

.px-340 { padding-inline: var(--mico-size-340) !important; }

.px-344 { padding-inline: var(--mico-size-344) !important; }

.px-348 { padding-inline: var(--mico-size-348) !important; }

.px-352 { padding-inline: var(--mico-size-352) !important; }

.px-356 { padding-inline: var(--mico-size-356) !important; }

.px-360 { padding-inline: var(--mico-size-360) !important; }

.px-364 { padding-inline: var(--mico-size-364) !important; }

.px-368 { padding-inline: var(--mico-size-368) !important; }

.px-372 { padding-inline: var(--mico-size-372) !important; }

.px-376 { padding-inline: var(--mico-size-376) !important; }

.px-380 { padding-inline: var(--mico-size-380) !important; }

.px-384 { padding-inline: var(--mico-size-384) !important; }

.px-388 { padding-inline: var(--mico-size-388) !important; }

.px-392 { padding-inline: var(--mico-size-392) !important; }

.px-396 { padding-inline: var(--mico-size-396) !important; }

.px-400 { padding-inline: var(--mico-size-400) !important; }

/* Padding-block classes from 4 to 100 */

.py-4 { padding-block: var(--mico-size-4) !important; }

.py-8 { padding-block: var(--mico-size-8) !important; }

.py-12 { padding-block: var(--mico-size-12) !important; }

.py-16 { padding-block: var(--mico-size-16) !important; }

.py-20 { padding-block: var(--mico-size-20) !important; }

.py-24 { padding-block: var(--mico-size-24) !important; }

.py-28 { padding-block: var(--mico-size-28) !important; }

.py-32 { padding-block: var(--mico-size-32) !important; }

.py-36 { padding-block: var(--mico-size-36) !important; }

.py-40 { padding-block: var(--mico-size-40) !important; }

.py-44 { padding-block: var(--mico-size-44) !important; }

.py-48 { padding-block: var(--mico-size-48) !important; }

.py-52 { padding-block: var(--mico-size-52) !important; }

.py-56 { padding-block: var(--mico-size-56) !important; }

.py-60 { padding-block: var(--mico-size-60) !important; }

.py-64 { padding-block: var(--mico-size-64) !important; }

.py-68 { padding-block: var(--mico-size-68) !important; }

.py-72 { padding-block: var(--mico-size-72) !important; }

.py-76 { padding-block: var(--mico-size-76) !important; }

.py-80 { padding-block: var(--mico-size-80) !important; }

.py-84 { padding-block: var(--mico-size-84) !important; }

.py-88 { padding-block: var(--mico-size-88) !important; }

.py-92 { padding-block: var(--mico-size-92) !important; }

.py-96 { padding-block: var(--mico-size-96) !important; }

.py-100 { padding-block: var(--mico-size-100) !important; }

.py-104 { padding-block: var(--mico-size-104) !important; }

.py-108 { padding-block: var(--mico-size-108) !important; }

.py-112 { padding-block: var(--mico-size-112) !important; }

.py-116 { padding-block: var(--mico-size-116) !important; }

.py-120 { padding-block: var(--mico-size-120) !important; }

.py-124 { padding-block: var(--mico-size-124) !important; }

.py-128 { padding-block: var(--mico-size-128) !important; }

.py-132 { padding-block: var(--mico-size-132) !important; }

.py-136 { padding-block: var(--mico-size-136) !important; }

.py-140 { padding-block: var(--mico-size-140) !important; }

.py-144 { padding-block: var(--mico-size-144) !important; }

.py-148 { padding-block: var(--mico-size-148) !important; }

.py-152 { padding-block: var(--mico-size-152) !important; }

.py-156 { padding-block: var(--mico-size-156) !important; }

.py-160 { padding-block: var(--mico-size-160) !important; }

.py-164 { padding-block: var(--mico-size-164) !important; }

.py-168 { padding-block: var(--mico-size-168) !important; }

.py-172 { padding-block: var(--mico-size-172) !important; }

.py-176 { padding-block: var(--mico-size-176) !important; }

.py-180 { padding-block: var(--mico-size-180) !important; }

.py-184 { padding-block: var(--mico-size-184) !important; }

.py-188 { padding-block: var(--mico-size-188) !important; }

.py-192 { padding-block: var(--mico-size-192) !important; }

.py-196 { padding-block: var(--mico-size-196) !important; }

.py-200 { padding-block: var(--mico-size-200) !important; }

.py-204 { padding-block: var(--mico-size-204) !important; }

.py-208 { padding-block: var(--mico-size-208) !important; }

.py-212 { padding-block: var(--mico-size-212) !important; }

.py-216 { padding-block: var(--mico-size-216) !important; }

.py-220 { padding-block: var(--mico-size-220) !important; }

.py-224 { padding-block: var(--mico-size-224) !important; }

.py-228 { padding-block: var(--mico-size-228) !important; }

.py-232 { padding-block: var(--mico-size-232) !important; }

.py-236 { padding-block: var(--mico-size-236) !important; }

.py-240 { padding-block: var(--mico-size-240) !important; }

.py-244 { padding-block: var(--mico-size-244) !important; }

.py-248 { padding-block: var(--mico-size-248) !important; }

.py-252 { padding-block: var(--mico-size-252) !important; }

.py-256 { padding-block: var(--mico-size-256) !important; }

.py-260 { padding-block: var(--mico-size-260) !important; }

.py-264 { padding-block: var(--mico-size-264) !important; }

.py-268 { padding-block: var(--mico-size-268) !important; }

.py-272 { padding-block: var(--mico-size-272) !important; }

.py-276 { padding-block: var(--mico-size-276) !important; }

.py-280 { padding-block: var(--mico-size-280) !important; }

.py-284 { padding-block: var(--mico-size-284) !important; }

.py-288 { padding-block: var(--mico-size-288) !important; }

.py-292 { padding-block: var(--mico-size-292) !important; }

.py-296 { padding-block: var(--mico-size-296) !important; }

.py-300 { padding-block: var(--mico-size-300) !important; }

.py-304 { padding-block: var(--mico-size-304) !important; }

.py-308 { padding-block: var(--mico-size-308) !important; }

.py-312 { padding-block: var(--mico-size-312) !important; }

.py-316 { padding-block: var(--mico-size-316) !important; }

.py-320 { padding-block: var(--mico-size-320) !important; }

.py-324 { padding-block: var(--mico-size-324) !important; }

.py-328 { padding-block: var(--mico-size-328) !important; }

.py-332 { padding-block: var(--mico-size-332) !important; }

.py-336 { padding-block: var(--mico-size-336) !important; }

.py-340 { padding-block: var(--mico-size-340) !important; }

.py-344 { padding-block: var(--mico-size-344) !important; }

.py-348 { padding-block: var(--mico-size-348) !important; }

.py-352 { padding-block: var(--mico-size-352) !important; }

.py-356 { padding-block: var(--mico-size-356) !important; }

.py-360 { padding-block: var(--mico-size-360) !important; }

.py-364 { padding-block: var(--mico-size-364) !important; }

.py-368 { padding-block: var(--mico-size-368) !important; }

.py-372 { padding-block: var(--mico-size-372) !important; }

.py-376 { padding-block: var(--mico-size-376) !important; }

.py-380 { padding-block: var(--mico-size-380) !important; }

.py-384 { padding-block: var(--mico-size-384) !important; }

.py-388 { padding-block: var(--mico-size-388) !important; }

.py-392 { padding-block: var(--mico-size-392) !important; }

.py-396 { padding-block: var(--mico-size-396) !important; }

.py-400 { padding-block: var(--mico-size-400) !important; }

/**
 * Mico CSS Framework - Layout Utilities
 *
 * This file provides utilities for controlling the layout of elements:
 *
 * - Box model properties (sizing, decoration, etc.)
 * - Float and clear properties
 * - Isolation and stacking context
 * - Object fit and position
 * - Overflow behavior
 * - Visibility control
 * - Positioning (static, fixed, absolute, etc.)
 * - Display properties (block, inline, flex, grid, etc.)
 * - Flexbox properties (flex container and item control)
 * - Grid properties (grid container and item control)
 * - Width and height control
 * - Min and max width/height control
 * - Aspect ratio control
 * - Overscroll behavior
 * - Z-index control
 * - Gap control (for flex and grid)
 *
 * USAGE:
 * Box Model: .box-border, .box-content
 * Float and Clear: .float-right, .clear-both
 * Isolation: .isolate
 * Object Fit and Position: .object-contain, .object-top
 * Overflow: .overflow-hidden, .overflow-x-auto
 * Visibility: .visibility-hidden
 * Positioning: .fixed, .absolute, .top-0
 * Display: .d-block, .d-flex
 * Flexbox: .flex-row, .flex-wrap, .justify-content-center
 * Grid: .grid, .grid-cols-2, .grid-rows-3
 * Width and Height: .w-100, .h-50
 * Min and Max Width/Height: .min-w-20, .max-h-80
 * Aspect Ratio: .aspect-16-9
 * Z-index: .z-0, .z-10
 * Gap: .gap-4, .gap-x-8
 *
 *
*/

/* Aspect Ratio */

.aspect-ratio-square { aspect-ratio:  var( --mico-aspect-ratio-square ); }

.aspect-ratio-video { aspect-ratio:  var( --mico-aspect-ratio-video ); }

.aspect-ratio-portrait { aspect-ratio:  var( --mico-aspect-ratio-portrait ); }

.aspect-ratio-landscape { aspect-ratio:  var( --mico-aspect-ratio-landscape ); }

.aspect-ratio-widescreen { aspect-ratio:  var( --mico-aspect-ratio-widescreen ); }

.aspect-ratio-golden { aspect-ratio:  var( --mico-aspect-ratio-golden ); }

/* Box Model */

.box-border { box-sizing: border-box; }

.box-content { box-sizing: content-box; }

.decoration-slice { box-decoration-break: slice; }

.decoration-clone { box-decoration-break: clone; }

/* Float and Clear */

.float-right { float: right !important; }

.float-left { float: left !important; }

.float-none { float: none !important; }

.clear-left { clear: left !important; }

.clear-right { clear: right !important; }

.clear-both { clear: both !important; }

.clear-none { clear: none !important; }

/* Isolation */

.isolate { isolation: isolate; }

.isolate-auto { isolation: auto; }

/* Object Fit and Position */

.object-contain { object-fit: contain; }

.object-cover { object-fit: cover; }

.object-fill { object-fit: fill; }

.object-none { object-fit: none; }

.object-scale-down { object-fit: scale-down; }

.object-top { object-position: top; }

.object-bottom { object-position: bottom; }

.object-center { object-position: center; }

.object-left { object-position: left; }

.object-right { object-position: right; }

.object-top-left { object-position: top left; }

.object-top-right { object-position: top right; }

.object-bottom-left { object-position: bottom left; }

.object-bottom-right { object-position: bottom right; }

/* Overflow */

.overflow-visible { overflow: visible; }

.overflow-hidden { overflow: hidden; }

.overflow-clip { overflow: clip; }

.overflow-scroll { overflow: scroll; }

.overflow-auto { overflow: auto; }

.overflow-x-visible { overflow-x: visible; }

.overflow-x-hidden { overflow-x: hidden; }

.overflow-x-clip { overflow-x: clip; }

.overflow-x-scroll { overflow-x: scroll; }

.overflow-x-auto { overflow-x: auto; }

.overflow-y-visible { overflow-y: visible; }

.overflow-y-hidden { overflow-y: hidden; }

.overflow-y-clip { overflow-y: clip; }

.overflow-y-scroll { overflow-y: scroll; }

.overflow-y-auto { overflow-y: auto; }

/* Visibility */

.visibility-visible { visibility: visible; }

.visibility-hidden { visibility: hidden; }

.visibility-collapse { visibility: collapse; }

/* Overscroll Behavior */

.overscroll-auto { overscroll-behavior: auto; }

.overscroll-contain { overscroll-behavior: contain; }

.overscroll-none { overscroll-behavior: none; }

.overscroll-x-auto { overscroll-behavior-x: auto; }

.overscroll-x-contain { overscroll-behavior-x: contain; }

.overscroll-x-none { overscroll-behavior-x: none; }

.overscroll-y-auto { overscroll-behavior-y: auto; }

.overscroll-y-contain { overscroll-behavior-y: contain; }

.overscroll-y-none { overscroll-behavior-y: none; }

/* Position */

.static { position: static; }

.fixed { position: fixed; }

.absolute { position: absolute; }

.relative { position: relative; }

.sticky { position: sticky; }

.top-0 { top: 0; }

.top-5p { top: 5%; }

.top-10p { top: 10%; }

.top-15p { top: 15%; }

.top-20p { top: 20%; }

.top-25p { top: 25%; }

.top-30p { top: 30%; }

.top-35p { top: 35%; }

.top-40p { top: 40%; }

.top-45p { top: 45%; }

.top-50p { top: 50%; }

.top-55p { top: 55%; }

.top-60p { top: 60%; }

.top-65p { top: 65%; }

.top-70p { top: 70%; }

.top-75p { top: 75%; }

.top-80p { top: 80%; }

.top-85p { top: 85%; }

.top-90p { top: 90%; }

.top-95p { top: 95%; }

.top-100p { top: 100%; }

.right-0 { right: 0; }

.bottom-0 { bottom: 0; }

.left-0 { left: 0; }

.inset-0 { inset: 0; }

.inset-auto { inset: auto; }

.inset-x-0 { left: 0; right: 0; }

.inset-y-0 { top: 0; bottom: 0; }

.inset-x-auto { left: auto; right: auto; }

.inset-y-auto { top: auto; bottom: auto; }

/* Display */

.none { display: none !important; }

.inline { display: inline !important; }

.inline-block { display: inline-block !important; }

.block { display: block !important; }

.flex { display: flex !important; }

.inline-flex { display: inline-flex !important; }

.grid { display: grid !important; }

.table { display: table !important; }

.table-row { display: table-row !important; }

.table-cell { display: table-cell !important; }

.table-column { display: table-column !important; }

.table-column-group { display: table-column-group !important; }

.table-header-group { display: table-header-group !important; }

.table-footer-group { display: table-footer-group !important; }

.table-row-group { display: table-row-group !important; }

.flow-root { display: flow-root !important; }

.contents { display: contents !important; }

.list-item { display: list-item !important; }

.ruby { display: ruby !important; }

.ruby-base { display: ruby-base !important; }

.ruby-text { display: ruby-text !important; }

.ruby-base-container { display: ruby-base-container !important; }

/* Flexbox */

.flex-row { flex-direction: row !important; }

.flex-column { flex-direction: column !important; }

.flex-row-reverse { flex-direction: row-reverse !important; }

.flex-column-reverse { flex-direction: column-reverse !important; }

.flex-wrap { flex-wrap: wrap !important; }

.flex-nowrap { flex-wrap: nowrap !important; }

.flex-wrap-reverse { flex-wrap: wrap-reverse !important; }

.justify-items-start { justify-items: flex-start !important; }

.justify-items-end { justify-items: flex-end !important; }

.justify-items-center { justify-items: center !important; }

.justify-content-start { justify-content: flex-start !important; }

.justify-content-end { justify-content: flex-end !important; }

.justify-content-center { justify-content: center !important; }

.justify-content-between { justify-content: space-between !important; }

.justify-content-around { justify-content: space-around !important; }

.justify-content-evenly { justify-content: space-evenly !important; }

.align-items-start { align-items: flex-start !important; }

.align-items-end { align-items: flex-end !important; }

.align-items-center { align-items: center !important; }

.align-items-baseline { align-items: baseline !important; }

.align-items-stretch { align-items: stretch !important; }

.align-content-start { align-content: flex-start !important; }

.align-content-end { align-content: flex-end !important; }

.align-content-center { align-content: center !important; }

.align-content-between { align-content: space-between !important; }

.align-content-around { align-content: space-around !important; }

.align-content-stretch { align-content: stretch !important; }

.align-self-auto { align-self: auto !important; }

.align-self-start { align-self: flex-start !important; }

.align-self-end { align-self: flex-end !important; }

.align-self-center { align-self: center !important; }

.align-self-baseline { align-self: baseline !important; }

.align-self-stretch { align-self: stretch !important; }

.flex-grow-0 { flex-grow: 0 !important; }

.flex-grow-1 { flex-grow: 1 !important; }

.flex-shrink-0 { flex-shrink: 0 !important; }

.flex-shrink-1 { flex-shrink: 1 !important; }

.flex-1 { flex: 1 1 0% !important; }

.flex-auto { flex: 1 1 auto !important; }

.flex-initial { flex: 0 1 auto !important; }

.flex-none { flex: none !important; }

/* Z-index */

.z-auto { z-index: auto; }

.z-0 { z-index: 0; }

.z-4 { z-index: 4; }

.z-8 { z-index: 8; }

.z-12 { z-index: 12; }

.z-16 { z-index: 16; }

.z-20 { z-index: 20; }

.z-n4 { z-index: -4; }

.z-n8 { z-index: -8; }

.z-n12 { z-index: -12; }

.z-n16 { z-index: -16; }

.z-n20 { z-index: -20; }

.z-100 { z-index: 100; }

.z-200 { z-index: 200; }

.z-max { z-index: 9999; }

/* Gap */

.gap-0 { gap: var(--mico-size-0) !important; }

.gap-4 { gap: var(--mico-size-4) !important; }

.gap-8 { gap: var(--mico-size-8) !important; }

.gap-12 { gap: var(--mico-size-12) !important; }

.gap-16 { gap: var(--mico-size-16) !important; }

.gap-20 { gap: var(--mico-size-20) !important; }

.gap-24 { gap: var(--mico-size-24) !important; }

.gap-28 { gap: var(--mico-size-28) !important; }

.gap-32 { gap: var(--mico-size-32) !important; }

.gap-36 { gap: var(--mico-size-36) !important; }

.gap-40 { gap: var(--mico-size-40) !important; }

.gap-44 { gap: var(--mico-size-44) !important; }

.gap-48 { gap: var(--mico-size-48) !important; }

.gap-52 { gap: var(--mico-size-52) !important; }

.gap-56 { gap: var(--mico-size-56) !important; }

.gap-60 { gap: var(--mico-size-60) !important; }

.gap-64 { gap: var(--mico-size-64) !important; }

/* Grid */

.grid-cols-1 { grid-template-columns: repeat(1, 1fr) !important; }

.grid-cols-2 { grid-template-columns: repeat(2, 1fr) !important; }

.grid-cols-3 { grid-template-columns: repeat(3, 1fr) !important; }

.grid-cols-4 { grid-template-columns: repeat(4, 1fr) !important; }

.grid-cols-5 { grid-template-columns: repeat(5, 1fr) !important; }

.grid-cols-6 { grid-template-columns: repeat(6, 1fr) !important; }

.grid-cols-7 { grid-template-columns: repeat(7, 1fr) !important; }

.grid-cols-8 { grid-template-columns: repeat(8, 1fr) !important; }

.grid-cols-9 { grid-template-columns: repeat(9, 1fr) !important; }

.grid-cols-10 { grid-template-columns: repeat(10, 1fr) !important; }

.grid-cols-11 { grid-template-columns: repeat(11, 1fr) !important; }

.grid-cols-12 { grid-template-columns: repeat(12, 1fr) !important; }

.grid-rows-1 { grid-template-rows: repeat(1, minmax(0, 1fr)) !important; }

.grid-rows-2 { grid-template-rows: repeat(2, minmax(0, 1fr)) !important; }

.grid-rows-3 { grid-template-rows: repeat(3, minmax(0, 1fr)) !important; }

.grid-rows-4 { grid-template-rows: repeat(4, minmax(0, 1fr)) !important; }

.grid-rows-5 { grid-template-rows: repeat(5, minmax(0, 1fr)) !important; }

.grid-rows-6 { grid-template-rows: repeat(6, minmax(0, 1fr)) !important; }

.grid-rows-7 { grid-template-rows: repeat(7, minmax(0, 1fr)) !important; }

.grid-rows-8 { grid-template-rows: repeat(8, minmax(0, 1fr)) !important; }

.grid-rows-9 { grid-template-rows: repeat(9, minmax(0, 1fr)) !important; }

.grid-rows-10 { grid-template-rows: repeat(10, minmax(0, 1fr)) !important; }

.grid-rows-11 { grid-template-rows: repeat(11, minmax(0, 1fr)) !important; }

.grid-rows-12 { grid-template-rows: repeat(12, minmax(0, 1fr)) !important; }

.col-1 { grid-column: span 1 !important; }

.col-2 { grid-column: span 2 !important; }

.col-3 { grid-column: span 3 !important; }

.col-4 { grid-column: span 4 !important; }

.col-5 { grid-column: span 5 !important; }

.col-6 { grid-column: span 6 !important; }

.col-7 { grid-column: span 7 !important; }

.col-8 { grid-column: span 8 !important; }

.col-9 { grid-column: span 9 !important; }

.col-10 { grid-column: span 10 !important; }

.col-11 { grid-column: span 11 !important; }

.col-12 { grid-column: span 12 !important; }

.row-1 { grid-row: span 1 !important; }

.row-2 { grid-row: span 2 !important; }

.row-3 { grid-row: span 3 !important; }

.row-4 { grid-row: span 4 !important; }

.row-5 { grid-row: span 5 !important; }

.row-6 { grid-row: span 6 !important; }

.row-7 { grid-row: span 7 !important; }

.row-8 { grid-row: span 8 !important; }

.row-9 { grid-row: span 9 !important; }

.row-10 { grid-row: span 10 !important; }

.row-11 { grid-row: span 11 !important; }

.row-12 { grid-row: span 12 !important; }

.col-1-2 { grid-column: 1/2 !important; }

.col-1-3 { grid-column: 1/3 !important; }

.col-1-4 { grid-column: 1/4 !important; }

.col-1-5 { grid-column: 1/5 !important; }

.col-1-6 { grid-column: 1/6 !important; }

.col-1-7 { grid-column: 1/7 !important; }

.col-1-8 { grid-column: 1/8 !important; }

.col-1-9 { grid-column: 1/9 !important; }

.col-1-10 { grid-column: 1/10 !important; }

.col-1-11 { grid-column: 1/11 !important; }

.col-1-12 { grid-column: 1/12 !important; }

.col-2-3 { grid-column: 2/3 !important; }

.col-2-4 { grid-column: 2/4 !important; }

.col-2-5 { grid-column: 2/5 !important; }

.col-2-6 { grid-column: 2/6 !important; }

.col-2-7 { grid-column: 2/7 !important; }

.col-2-8 { grid-column: 2/8 !important; }

.col-2-9 { grid-column: 2/9 !important; }

.col-2-10 { grid-column: 2/10 !important; }

.col-2-11 { grid-column: 2/11 !important; }

.col-2-12 { grid-column: 2/12 !important; }

.col-3-4 { grid-column: 3/4 !important; }

.col-3-5 { grid-column: 3/5 !important; }

.col-3-6 { grid-column: 3/6 !important; }

.col-3-7 { grid-column: 3/7 !important; }

.col-3-8 { grid-column: 3/8 !important; }

.col-3-9 { grid-column: 3/9 !important; }

.col-3-10 { grid-column: 3/10 !important; }

.col-3-11 { grid-column: 3/11 !important; }

.col-3-12 { grid-column: 3/12 !important; }

.col-4-5 { grid-column: 4/5 !important; }

.col-4-6 { grid-column: 4/6 !important; }

.col-4-7 { grid-column: 4/7 !important; }

.col-4-8 { grid-column: 4/8 !important; }

.col-4-9 { grid-column: 4/9 !important; }

.col-4-10 { grid-column: 4/10 !important; }

.col-4-11 { grid-column: 4/11 !important; }

.col-4-12 { grid-column: 4/12 !important; }

.col-5-6 { grid-column: 5/6 !important; }

.col-5-7 { grid-column: 5/7 !important; }

.col-5-8 { grid-column: 5/8 !important; }

.col-5-9 { grid-column: 5/9 !important; }

.col-5-10 { grid-column: 5/10 !important; }

.col-5-11 { grid-column: 5/11 !important; }

.col-5-12 { grid-column: 5/12 !important; }

.col-6-7 { grid-column: 6/7 !important; }

.col-6-8 { grid-column: 6/8 !important; }

.col-6-9 { grid-column: 6/9 !important; }

.col-6-10 { grid-column: 6/10 !important; }

.col-6-11 { grid-column: 6/11 !important; }

.col-6-12 { grid-column: 6/12 !important; }

.col-7-8 { grid-column: 7/8 !important; }

.col-7-9 { grid-column: 7/9 !important; }

.col-7-10 { grid-column: 7/10 !important; }

.col-7-11 { grid-column: 7/11 !important; }

.col-7-12 { grid-column: 7/12 !important; }

.col-8-9 { grid-column: 8/9 !important; }

.col-8-10 { grid-column: 8/10 !important; }

.col-8-11 { grid-column: 8/11 !important; }

.col-8-12 { grid-column: 8/12 !important; }

.col-9-10 { grid-column: 9/10 !important; }

.col-9-11 { grid-column: 9/11 !important; }

.col-9-12 { grid-column: 9/12 !important; }

.col-10-11 { grid-column: 10/11 !important; }

.col-10-12 { grid-column: 10/12 !important; }

.col-11-12 { grid-column: 10/12 !important; }

.row-1-2 { grid-row: 1/2 !important; }

.row-1-3 { grid-row: 1/3 !important; }

.row-1-4 { grid-row: 1/4 !important; }

.row-1-5 { grid-row: 1/5 !important; }

.row-1-6 { grid-row: 1/6 !important; }

.row-1-7 { grid-row: 1/7 !important; }

.row-1-8 { grid-row: 1/8 !important; }

.row-1-9 { grid-row: 1/9 !important; }

.row-1-10 { grid-row: 1/10 !important; }

.row-1-11 { grid-row: 1/11 !important; }

.row-1-12 { grid-row: 1/12 !important; }

.row-2-3 { grid-row: 2/3 !important; }

.row-2-4 { grid-row: 2/4 !important; }

.row-2-5 { grid-row: 2/5 !important; }

.row-2-6 { grid-row: 2/6 !important; }

.row-2-7 { grid-row: 2/7 !important; }

.row-2-8 { grid-row: 2/8 !important; }

.row-2-9 { grid-row: 2/9 !important; }

.row-2-10 { grid-row: 2/10 !important; }

.row-2-11 { grid-row: 2/11 !important; }

.row-2-12 { grid-row: 2/12 !important; }

.row-3-4 { grid-row: 3/4 !important; }

.row-3-5 { grid-row: 3/5 !important; }

.row-3-6 { grid-row: 3/6 !important; }

.row-3-7 { grid-row: 3/7 !important; }

.row-3-8 { grid-row: 3/8 !important; }

.row-3-9 { grid-row: 3/9 !important; }

.row-3-10 { grid-row: 3/10 !important; }

.row-3-11 { grid-row: 3/11 !important; }

.row-3-12 { grid-row: 3/12 !important; }

.row-4-5 { grid-row: 4/5 !important; }

.row-4-6 { grid-row: 4/6 !important; }

.row-4-7 { grid-row: 4/7 !important; }

.row-4-8 { grid-row: 4/8 !important; }

.row-4-9 { grid-row: 4/9 !important; }

.row-4-10 { grid-row: 4/10 !important; }

.row-4-11 { grid-row: 4/11 !important; }

.row-4-12 { grid-row: 4/12 !important; }

.row-5-6 { grid-row: 5/6 !important; }

.row-5-7 { grid-row: 5/7 !important; }

.row-5-8 { grid-row: 5/8 !important; }

.row-5-9 { grid-row: 5/9 !important; }

.row-5-10 { grid-row: 5/10 !important; }

.row-5-11 { grid-row: 5/11 !important; }

.row-5-12 { grid-row: 5/12 !important; }

.row-6-7 { grid-row: 6/7 !important; }

.row-6-8 { grid-row: 6/8 !important; }

.row-6-9 { grid-row: 6/9 !important; }

.row-6-10 { grid-row: 6/10 !important; }

.row-6-11 { grid-row: 6/11 !important; }

.row-6-12 { grid-row: 6/12 !important; }

.row-7-8 { grid-row: 7/8 !important; }

.row-7-9 { grid-row: 7/9 !important; }

.row-7-10 { grid-row: 7/10 !important; }

.row-7-11 { grid-row: 7/11 !important; }

.row-7-12 { grid-row: 7/12 !important; }

.row-8-9 { grid-row: 8/9 !important; }

.row-8-10 { grid-row: 8/10 !important; }

.row-8-11 { grid-row: 8/11 !important; }

.row-8-12 { grid-row: 8/12 !important; }

.row-9-10 { grid-row: 9/10 !important; }

.row-9-11 { grid-row: 9/11 !important; }

.row-9-12 { grid-row: 9/12 !important; }

.row-10-11 { grid-row: 10/11 !important; }

.row-10-12 { grid-row: 10/12 !important; }

.row-11-12 { grid-row: 10/12 !important; }

.col-start-0{ grid-column-start: 0; }

.col-start-1{ grid-column-start: 1; }

.col-start-2{ grid-column-start: 2; }

.col-start-3{ grid-column-start: 3; }

.col-start-4{ grid-column-start: 4; }

.col-start-5{ grid-column-start: 5; }

.col-start-6{ grid-column-start: 6; }

.col-start-7{ grid-column-start: 7; }

.col-start-8{ grid-column-start: 8; }

.col-start-9{ grid-column-start: 9; }

.col-start-10{ grid-column-start: 10; }

.col-start-11{ grid-column-start: 11; }

.col-start-12{ grid-column-start: 12; }

.col-end-0{ grid-column-end: 0; }

.col-end-1{ grid-column-end: 1; }

.col-end-2{ grid-column-end: 2; }

.col-end-3{ grid-column-end: 3; }

.col-end-4{ grid-column-end: 4; }

.col-end-5{ grid-column-end: 5; }

.col-end-6{ grid-column-end: 6; }

.col-end-7{ grid-column-end: 7; }

.col-end-8{ grid-column-end: 8; }

.col-end-9{ grid-column-end: 9; }

.col-end-10{ grid-column-end: 10; }

.col-end-11{ grid-column-end: 11; }

.col-end-12{ grid-column-end: 12; }

.row-start-0{ grid-row-start: 0; }

.row-start-1{ grid-row-start: 1; }

.row-start-2{ grid-row-start: 2; }

.row-start-3{ grid-row-start: 3; }

.row-start-4{ grid-row-start: 4; }

.row-start-5{ grid-row-start: 5; }

.row-start-6{ grid-row-start: 6; }

.row-start-7{ grid-row-start: 7; }

.row-start-8{ grid-row-start: 8; }

.row-start-9{ grid-row-start: 9; }

.row-start-10{ grid-row-start: 10; }

.row-start-11{ grid-row-start: 11; }

.row-start-12{ grid-row-start: 12; }

.row-end-0{ grid-row-end: 0; }

.row-end-1{ grid-row-end: 1; }

.row-end-2{ grid-row-end: 2; }

.row-end-3{ grid-row-end: 3; }

.row-end-4{ grid-row-end: 4; }

.row-end-5{ grid-row-end: 5; }

.row-end-6{ grid-row-end: 6; }

.row-end-7{ grid-row-end: 7; }

.row-end-8{ grid-row-end: 8; }

.row-end-9{ grid-row-end: 9; }

.row-end-10{ grid-row-end: 10; }

.row-end-11{ grid-row-end: 11; }

.row-end-12{ grid-row-end: 12; }

/* Minimum row height of created rows */

.grid-auto-row { grid-auto-rows: var(--mico-grid-min-row-height); }

.grid-auto-flow-col { grid-auto-flow: column; }

.grid-auto-flow-row { grid-auto-flow: row; }

.grid-auto-flow-dense { grid-auto-flow: dense; }

.place-items-start{ place-items: start !important; }

.place-items-center{ place-items: center !important; }

.place-items-end{ place-items: end !important; }

.grid-auto-fit { grid-template-columns: var(--mico-grid-auto-fit); }

.grid-auto-fill { grid-template-columns: var(--mico-grid-auto-fill); }

.grid-area {
  grid-area: var(--mico-grid-area);
}

.grid-template-areas {
  grid-template-areas: var(--mico-grid-template-areas);
}

/* Width and Height */

.w-none { width: none !important; }

.w-auto { width: auto !important; }

.w-screen { width: 100vw !important; }

.w-fit { min-width: fit-content !important; }

.w-min { min-width: min-content !important; }

.w-max { min-width: max-content !important; }

.w-1p { width: 1% !important; }

.w-2p { width: 2% !important; }

.w-3p { width: 3% !important; }

.w-4p { width: 4% !important; }

.w-5p { width: 5% !important; }

.w-6p { width: 6% !important; }

.w-7p { width: 7% !important; }

.w-8p { width: 8% !important; }

.w-9p { width: 9% !important; }

.w-10p { width: 10% !important; }

.w-11p { width: 11% !important; }

.w-12p { width: 12% !important; }

.w-13p { width: 13% !important; }

.w-14p { width: 14% !important; }

.w-15p { width: 15% !important; }

.w-16p { width: 16% !important; }

.w-17p { width: 17% !important; }

.w-18p { width: 18% !important; }

.w-19p { width: 19% !important; }

.w-20p { width: 20% !important; }

.w-21p { width: 21% !important; }

.w-22p { width: 22% !important; }

.w-23p { width: 23% !important; }

.w-24p { width: 24% !important; }

.w-25p { width: 25% !important; }

.w-26p { width: 26% !important; }

.w-27p { width: 27% !important; }

.w-28p { width: 28% !important; }

.w-29p { width: 29% !important; }

.w-30p { width: 30% !important; }

.w-31p { width: 31% !important; }

.w-32p { width: 32% !important; }

.w-33p { width: 33.3333% !important; }

.w-34p { width: 34% !important; }

.w-35p { width: 35% !important; }

.w-36p { width: 36% !important; }

.w-37p { width: 37% !important; }

.w-38p { width: 38% !important; }

.w-39p { width: 39% !important; }

.w-40p { width: 40% !important; }

.w-41p { width: 41% !important; }

.w-42p { width: 42% !important; }

.w-43p { width: 43% !important; }

.w-44p { width: 44% !important; }

.w-45p { width: 45% !important; }

.w-46p { width: 46% !important; }

.w-47p { width: 47% !important; }

.w-48p { width: 48% !important; }

.w-49p { width: 49% !important; }

.w-50p { width: 50% !important; }

.w-51p { width: 51% !important; }

.w-52p { width: 52% !important; }

.w-53p { width: 53% !important; }

.w-54p { width: 54% !important; }

.w-55p { width: 55% !important; }

.w-56p { width: 56% !important; }

.w-57p { width: 57% !important; }

.w-58p { width: 58% !important; }

.w-59p { width: 59% !important; }

.w-60p { width: 60% !important; }

.w-61p { width: 61% !important; }

.w-62p { width: 62% !important; }

.w-63p { width: 63% !important; }

.w-64p { width: 64% !important; }

.w-65p { width: 65% !important; }

.w-66p { width: 66.6667% !important; }

.w-67p { width: 67% !important; }

.w-68p { width: 68% !important; }

.w-69p { width: 69% !important; }

.w-70p { width: 70% !important; }

.w-71p { width: 71% !important; }

.w-72p { width: 72% !important; }

.w-73p { width: 73% !important; }

.w-74p { width: 74% !important; }

.w-75p { width: 75% !important; }

.w-76p { width: 76% !important; }

.w-77p { width: 77% !important; }

.w-78p { width: 78% !important; }

.w-79p { width: 79% !important; }

.w-80p { width: 80% !important; }

.w-81p { width: 81% !important; }

.w-82p { width: 82% !important; }

.w-83p { width: 83% !important; }

.w-84p { width: 84% !important; }

.w-85p { width: 85% !important; }

.w-86p { width: 86% !important; }

.w-87p { width: 87% !important; }

.w-88p { width: 88% !important; }

.w-89p { width: 89% !important; }

.w-90p { width: 90% !important; }

.w-91p { width: 91% !important; }

.w-92p { width: 92% !important; }

.w-93p { width: 93% !important; }

.w-94p { width: 94% !important; }

.w-95p { width: 95% !important; }

.w-96p { width: 96% !important; }

.w-97p { width: 97% !important; }

.w-98p { width: 98% !important; }

.w-99p { width: 99% !important; }

.w-100p { width: 100% !important; }

.h-none { height: none !important; }

.h-auto { height: auto !important; }

.h-fit { height: fit-content !important; }

.h-min { height: min-content !important; }

.h-max { height: max-content !important; }

.h-1p { height: 1% !important; }

.h-2p { height: 2% !important; }

.h-3p { height: 3% !important; }

.h-4p { height: 4% !important; }

.h-5p { height: 5% !important; }

.h-6p { height: 6% !important; }

.h-7p { height: 7% !important; }

.h-8p { height: 8% !important; }

.h-9p { height: 9% !important; }

.h-10p { height: 10% !important; }

.h-11p { height: 11% !important; }

.h-12p { height: 12% !important; }

.h-13p { height: 13% !important; }

.h-14p { height: 14% !important; }

.h-15p { height: 15% !important; }

.h-16p { height: 16% !important; }

.h-17p { height: 17% !important; }

.h-18p { height: 18% !important; }

.h-19p { height: 19% !important; }

.h-20p { height: 20% !important; }

.h-21p { height: 21% !important; }

.h-22p { height: 22% !important; }

.h-23p { height: 23% !important; }

.h-24p { height: 24% !important; }

.h-25p { height: 25% !important; }

.h-26p { height: 26% !important; }

.h-27p { height: 27% !important; }

.h-28p { height: 28% !important; }

.h-29p { height: 29% !important; }

.h-30p { height: 30% !important; }

.h-31p { height: 31% !important; }

.h-32p { height: 32% !important; }

.h-33p { height: 33% !important; }

.h-34p { height: 34% !important; }

.h-35p { height: 35% !important; }

.h-36p { height: 36% !important; }

.h-37p { height: 37% !important; }

.h-38p { height: 38% !important; }

.h-39p { height: 39% !important; }

.h-40p { height: 40% !important; }

.h-41p { height: 41% !important; }

.h-42p { height: 42% !important; }

.h-43p { height: 43% !important; }

.h-44p { height: 44% !important; }

.h-45p { height: 45% !important; }

.h-46p { height: 46% !important; }

.h-47p { height: 47% !important; }

.h-48p { height: 48% !important; }

.h-49p { height: 49% !important; }

.h-50p { height: 50% !important; }

.h-51p { height: 51% !important; }

.h-52p { height: 52% !important; }

.h-53p { height: 53% !important; }

.h-54p { height: 54% !important; }

.h-55p { height: 55% !important; }

.h-56p { height: 56% !important; }

.h-57p { height: 57% !important; }

.h-58p { height: 58% !important; }

.h-59p { height: 59% !important; }

.h-60p { height: 60% !important; }

.h-61p { height: 61% !important; }

.h-62p { height: 62% !important; }

.h-63p { height: 63% !important; }

.h-64p { height: 64% !important; }

.h-65p { height: 65% !important; }

.h-66p { height: 66% !important; }

.h-67p { height: 67% !important; }

.h-68p { height: 68% !important; }

.h-69p { height: 69% !important; }

.h-70p { height: 70% !important; }

.h-71p { height: 71% !important; }

.h-72p { height: 72% !important; }

.h-73p { height: 73% !important; }

.h-74p { height: 74% !important; }

.h-75p { height: 75% !important; }

.h-76p { height: 76% !important; }

.h-77p { height: 77% !important; }

.h-78p { height: 78% !important; }

.h-79p { height: 79% !important; }

.h-80p { height: 80% !important; }

.h-81p { height: 81% !important; }

.h-82p { height: 82% !important; }

.h-83p { height: 83% !important; }

.h-84p { height: 84% !important; }

.h-85p { height: 85% !important; }

.h-86p { height: 86% !important; }

.h-87p { height: 87% !important; }

.h-88p { height: 88% !important; }

.h-89p { height: 89% !important; }

.h-90p { height: 90% !important; }

.h-91p { height: 91% !important; }

.h-92p { height: 92% !important; }

.h-93p { height: 93% !important; }

.h-94p { height: 94% !important; }

.h-95p { height: 95% !important; }

.h-96p { height: 96% !important; }

.h-97p { height: 97% !important; }

.h-98p { height: 98% !important; }

.h-99p { height: 99% !important; }

.h-100p { height: 100% !important; }

/* Min Width and Height */

.min-w-none { min-width: none !important; }

.min-w-auto { min-width: auto !important; }

.min-w-screen { min-width: 100vw !important; }

.min-w-fit { min-width: fit-content !important; }

.min-w-min { min-width: min-content !important; }

.min-w-max { min-width: max-content !important; }

.min-w-10p { min-width: 10% !important; }

.min-w-20p { min-width: 20% !important; }

.min-w-25p { min-width: var(--mico-quarter) !important; }

.min-w-30p { min-width: 30% !important; }

.min-w-33p { min-width: var(--mico-third) !important; }

.min-w-40p { min-width: 40% !important; }

.min-w-50p { min-width: 50% !important; }

.min-w-60p { min-width: 60% !important; }

.min-w-70p { min-width: 70% !important; }

.min-w-80p { min-width: 80% !important; }

.min-w-90p { min-width: 90% !important; }

.min-w-100p { min-width: 100% !important; }

.min-h-none { min-height: none !important; }

.min-h-auto { min-height: auto !important; }

.min-h-screen { min-height: 100vh !important; }

.min-h-10p { min-height: 10% !important; }

.min-h-20p { min-height: 20% !important; }

.min-h-25p { min-height: var(--mico-quarter) !important; }

.min-h-30p { min-height: 30% !important; }

.min-h-33p { min-height: var(--mico-third) !important; }

.min-h-40p { min-height: 40% !important; }

.min-h-50p { min-height: 50% !important; }

.min-h-60p { min-height: 60% !important; }

.min-h-70p { min-height: 70% !important; }

.min-h-80p { min-height: 80% !important; }

.min-h-90p { min-height: 90% !important; }

.min-h-100p { min-height: 100% !important; }

/* Max Width and Height */

.max-w-none { max-width: none !important; }

.max-w-auto { max-width: auto !important; }

.max-w-screen { max-width: 100vw !important; }

.max-w-fit { max-width: fit-content !important; }

.max-w-min { max-width: min-content !important; }

.max-w-max { max-width: max-content !important; }

.max-w-10p { max-width: 10% !important; }

.max-w-20p { max-width: 20% !important; }

.max-w-25p { max-width: var(--mico-quarter) !important; }

.max-w-30p { max-width: 30% !important; }

.max-w-33p { max-width: var(--mico-third) !important; }

.max-w-40p { max-width: 40% !important; }

.max-w-50p { max-width: 50% !important; }

.max-w-60p { max-width: 60% !important; }

.max-w-70p { max-width: 70% !important; }

.max-w-80p { max-width: 80% !important; }

.max-w-90p { max-width: 90% !important; }

.max-w-100p { max-width: 100% !important; }

.max-h-none { max-height: none !important; }

.max-h-auto { max-height: auto !important; }

.max-h-screen { max-height: 100vh !important; }

.max-h-10p { max-height: 10% !important; }

.max-h-20p { max-height: 20% !important; }

.max-h-30p { max-height: 30% !important; }

.max-h-40p { max-height: 40% !important; }

.max-h-50p { max-height: 50% !important; }

.max-h-60p { max-height: 60% !important; }

.max-h-70p { max-height: 70% !important; }

.max-h-80p { max-height: 80% !important; }

.max-h-90p { max-height: 90% !important; }

.max-h-100p { max-height: 100% !important; }

/* Column spans */

.col-1 { grid-column: span 1 !important; }

.col-2 { grid-column: span 2 !important; }

.col-3 { grid-column: span 3 !important; }

.col-4 { grid-column: span 4 !important; }

.col-5 { grid-column: span 5 !important; }

.col-6 { grid-column: span 6 !important; }

.col-7 { grid-column: span 7 !important; }

.col-8 { grid-column: span 8 !important; }

.col-9 { grid-column: span 9 !important; }

.col-10 { grid-column: span 10 !important; }

.col-11 { grid-column: span 11 !important; }

.col-12 { grid-column: span 12 !important; }

/* Advanced grid features */

.grid-masonry {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(var(--mico-grid-min-column-width), 1fr));
  grid-auto-rows: 1px;
}

.grid-masonry > * {
  break-inside: avoid;
}

/* Fallbacks for older browsers */

@supports not (display: grid) {
  .grid-masonry {
    column-count: auto;
    column-width: var(--mico-grid-min-column-width);
  }
  .grid-masonry > * {
    display: inline-block;
    width: 100%;
  }
  
  .grid {
    display: flex;
    flex-wrap: wrap;
    margin: calc(-1 * var(--mico-gap-md));
  }


  /* Grid item styles */
  .grid > * {
    flex-basis: calc((100% / var(--mico-grid-column-count)) - (2 * var(--mico-gap-md)));
    margin: var(--mico-gap-md);
  }

  /* Responsive grid items */
  @media (max-width: 768px) {
    .grid > * {
      flex-basis: calc(50% - (2 * var(--mico-gap-md)));
    }
  }

  @media (max-width: 320px) {
    .grid > * {
      flex-basis: 100%;
    }
  }

}

/* ========================================================================== */

/* MICO CSS FRAMEWORK - TYPOGRAPHY UTILITIES                                 */

/* ========================================================================== */

.font-display { font-family: var(--mico-font-display) !important; }

.font-body { font-family: var(--mico-font-body) !important; }

.font-mono { font-family: var(--mico-font-mono) !important; }

.font-num { font-family: var(--mico-font-num) !important; }

.fs-xxs { font-size: var(--mico-fs-xxs) !important; }

.fs-xs { font-size: var(--mico-fs-xs) !important; }

.fs-sm { font-size: var(--mico-fs-sm) !important; }

.fs-md { font-size: var(--mico-fs-md) !important; }

.fs-lg { font-size: var(--mico-fs-lg) !important; }

.fs-xl { font-size: var(--mico-fs-xl) !important; }

.fs-xxl { font-size: var(--mico-fs-xxl) !important; }

.fs-xxxl { font-size: var(--mico-fs-xxxl) !important; }

.fw-100 { font-weight: var(--mico-fw-100) !important; }

.fw-200 { font-weight: var(--mico-fw-200) !important; }

.fw-300 { font-weight: var(--mico-fw-300) !important; }

.fw-400 { font-weight: var(--mico-fw-400) !important; }

.fw-500 { font-weight: var(--mico-fw-500) !important; }

.fw-600 { font-weight: var(--mico-fw-600) !important; }

.fw-700 { font-weight: var(--mico-fw-700) !important; }

.fw-800 { font-weight: var(--mico-fw-800) !important; }

.fw-900 { font-weight: var(--mico-fw-900) !important; }

.lh-xxs { line-height: var(--mico-lh-xxs) !important; }

.lh-xs { line-height: var(--mico-lh-xs) !important; }

.lh-sm { line-height: var(--mico-lh-sm) !important; }

.lh-md { line-height: var(--mico-lh-md) !important; }

.lh-lg { line-height: var(--mico-lh-lg) !important; }

.lh-xl { line-height: var(--mico-lh-xl) !important; }

.lh-xxl { line-height: var(--mico-lh-xxl) !important; }

.lh-xxxl { line-height: var(--mico-lh-xxxl) !important; }

.ls-xxs { letter-spacing: var(--mico-ls-xxs) !important; }

.ls-xs { letter-spacing: var(--mico-ls-xs) !important; }

.ls-sm { letter-spacing: var(--mico-ls-sm) !important; }

.ls-md { letter-spacing: var(--mico-ls-md) !important; }

.ls-lg { letter-spacing: var(--mico-ls-lg) !important; }

.ls-xl { letter-spacing: var(--mico-ls-xl) !important; }

.ls-xxl { letter-spacing: var(--mico-ls-xxl) !important; }

.ls-xxxl { letter-spacing: var(--mico-ls-xxxl) !important; }

.f-normal { font-style: var(--mico-font-style-normal) !important; }

.f-italic { font-style: var(--mico-font-style-italic) !important; }

.f-stretch-ultra-condensed { font-stretch: var(--mico-font-stretch-ultra-condensed) !important; }

.f-stretch-extra-condensed { font-stretch: var(--mico-font-stretch-extra-condensed) !important; }

.f-stretch-condensed { font-stretch: var(--mico-font-stretch-condensed) !important; }

.f-stretch-semi-condensed { font-stretch: var(--mico-font-stretch-semi-condensed) !important; }

.f-stretch-normal { font-stretch: var(--mico-font-stretch-normal) !important; }

.f-stretch-semi-expanded { font-stretch: var(--mico-font-stretch-semi-expanded) !important; }

.f-stretch-expanded { font-stretch: var(--mico-font-stretch-expanded) !important; }

.f-stretch-extra-expanded { font-stretch: var(--mico-font-stretch-extra-expanded) !important; }

.f-stretch-ultra-expanded { font-stretch: var(--mico-font-stretch-ultra-expanded) !important; }

.text-left { text-align: var(--mico-text-align-left) !important; }

.text-center { text-align: var(--mico-text-align-center) !important; }

.text-right { text-align: var(--mico-text-align-right) !important; }

.text-justify { text-align: var(--mico-text-align-justify) !important; }

.text-start { text-align: var(--mico-text-align-start) !important; }

.text-end { text-align: var(--mico-text-align-end) !important; }

/* ========================================================================== */

/* TEXT TRANSFORM UTILITIES                                                  */

/* ========================================================================== */

.uppercase { text-transform: var(--mico-text-transform-uppercase) !important; }

.lowercase { text-transform: var(--mico-text-transform-lowercase) !important; }

.capitalize { text-transform: var(--mico-text-transform-capitalize) !important; }

.normal-case { text-transform: var(--mico-text-transform-none) !important; }

/* ========================================================================== */

/* TEXT DECORATION UTILITIES                                                 */

/* ========================================================================== */

.underline { text-decoration-line: underline !important; }

.overline { text-decoration-line: overline !important; }

.line-through { text-decoration-line: line-through !important; }

.no-underline { text-decoration-line: var(--mico-value-none) !important; }

/* Text Decoration Style */

.decoration-solid { text-decoration-style: var(--mico-decoration-style-solid) !important; }

.decoration-double { text-decoration-style: var(--mico-decoration-style-double) !important; }

.decoration-dotted { text-decoration-style: var(--mico-decoration-style-dotted) !important; }

.decoration-dashed { text-decoration-style: var(--mico-decoration-style-dashed) !important; }

.decoration-wavy { text-decoration-style: var(--mico-decoration-style-wavy) !important; }

/* Text Decoration Thickness */

.decoration-auto { text-decoration-thickness: var(--mico-decoration-thickness-auto) !important; }

.decoration-from-font { text-decoration-thickness: var(--mico-decoration-thickness-from-font) !important; }

.decoration-0 { text-decoration-thickness: var(--mico-decoration-thickness-0) !important; }

.decoration-1 { text-decoration-thickness: var(--mico-decoration-thickness-1) !important; }

.decoration-2 { text-decoration-thickness: var(--mico-decoration-thickness-2) !important; }

.decoration-4 { text-decoration-thickness: var(--mico-decoration-thickness-4) !important; }

.decoration-8 { text-decoration-thickness: var(--mico-decoration-thickness-8) !important; }

/* Text Underline Offset */

.underline-offset-auto { text-underline-offset: var(--mico-underline-offset-auto) !important; }

.underline-offset-0 { text-underline-offset: var(--mico-underline-offset-0) !important; }

.underline-offset-1 { text-underline-offset: var(--mico-underline-offset-1) !important; }

.underline-offset-2 { text-underline-offset: var(--mico-underline-offset-2) !important; }

.underline-offset-4 { text-underline-offset: var(--mico-underline-offset-4) !important; }

.underline-offset-8 { text-underline-offset: var(--mico-underline-offset-8) !important; }

/* ========================================================================== */

/* TEXT OVERFLOW UTILITIES                                                   */

/* ========================================================================== */

.text-ellipsis { text-overflow: var(--mico-text-overflow-ellipsis) !important; }

.text-clip { text-overflow: var(--mico-text-overflow-clip) !important; }

.truncate {
  overflow: hidden !important;
  text-overflow: var(--mico-text-overflow-ellipsis) !important;
  white-space: var(--mico-whitespace-nowrap) !important;
}

/* ========================================================================== */

/* WHITESPACE UTILITIES                                                      */

/* ========================================================================== */

.whitespace-normal { white-space: var(--mico-whitespace-normal) !important; }

.whitespace-nowrap { white-space: var(--mico-whitespace-nowrap) !important; }

.whitespace-pre { white-space: var(--mico-whitespace-pre) !important; }

.whitespace-pre-line { white-space: var(--mico-whitespace-pre-line) !important; }

.whitespace-pre-wrap { white-space: var(--mico-whitespace-pre-wrap) !important; }

.whitespace-break-spaces { white-space: var(--mico-whitespace-break-spaces) !important; }

/* ========================================================================== */

/* WORD BREAK UTILITIES                                                      */

/* ========================================================================== */

.break-normal {
  overflow-wrap: var(--mico-overflow-wrap-normal) !important;
  word-break: var(--mico-word-break-normal) !important;
}

.break-words { overflow-wrap: var(--mico-overflow-wrap-break-word) !important; }

.break-all { word-break: var(--mico-word-break-break-all) !important; }

.break-keep { word-break: var(--mico-word-break-keep-all) !important; }

/* ========================================================================== */

/* TEXT DIRECTION UTILITIES                                                  */

/* ========================================================================== */

.text-ltr { direction: var(--mico-text-direction-ltr) !important; }

.text-rtl { direction: var(--mico-text-direction-rtl) !important; }

/* ========================================================================== */

/* VERTICAL ALIGNMENT UTILITIES                                              */

/* ========================================================================== */

.align-baseline { vertical-align: baseline !important; }

.align-top { vertical-align: top !important; }

.align-middle { vertical-align: middle !important; }

.align-bottom { vertical-align: bottom !important; }

.align-text-top { vertical-align: text-top !important; }

.align-text-bottom { vertical-align: text-bottom !important; }

.align-sub { vertical-align: sub !important; }

.align-super { vertical-align: super !important; }

/* ========================================================================== */

/* TEXT INDENT UTILITIES                                                     */

/* ========================================================================== */

.indent-0 { text-indent: var(--mico-indent-0) !important; }

.indent-xs { text-indent: var(--mico-indent-xs) !important; }

.indent-sm { text-indent: var(--mico-indent-sm) !important; }

.indent-md { text-indent: var(--mico-indent-md) !important; }

.indent-lg { text-indent: var(--mico-indent-lg) !important; }

.indent-xl { text-indent: var(--mico-indent-xl) !important; }

/* ========================================================================== */

/* TEXT SHADOW UTILITIES                                                     */

/* ========================================================================== */

.text-shadow-none { text-shadow: var(--mico-text-shadow-none) !important; }

.text-shadow-xs { text-shadow: var(--mico-text-shadow-xs) !important; }

.text-shadow-sm { text-shadow: var(--mico-text-shadow-sm) !important; }

.text-shadow-md { text-shadow: var(--mico-text-shadow-md) !important; }

.text-shadow-lg { text-shadow: var(--mico-text-shadow-lg) !important; }

/* ========================================================================== */

/* TEXT STROKE UTILITIES                                                     */

/* ========================================================================== */

.text-stroke-xs { -webkit-text-stroke-width: var(--mico-text-stroke-xs) !important; }

.text-stroke-sm { -webkit-text-stroke-width: var(--mico-text-stroke-sm) !important; }

.text-stroke-md { -webkit-text-stroke-width: var(--mico-text-stroke-md) !important; }

/* ========================================================================== */

/* FONT VARIANT UTILITIES                                                    */

/* ========================================================================== */

/* Font Variant Numeric */

.font-variant-normal { font-variant-numeric: var(--mico-font-variant-numeric-normal) !important; }

.font-variant-ordinal { font-variant-numeric: var(--mico-font-variant-numeric-ordinal) !important; }

.font-variant-slashed-zero { font-variant-numeric: var(--mico-font-variant-numeric-slashed-zero) !important; }

.font-variant-lining-nums { font-variant-numeric: var(--mico-font-variant-numeric-lining-nums) !important; }

.font-variant-oldstyle-nums { font-variant-numeric: var(--mico-font-variant-numeric-oldstyle-nums) !important; }

.font-variant-proportional-nums { font-variant-numeric: var(--mico-font-variant-numeric-proportional-nums) !important; }

.font-variant-tabular-nums { font-variant-numeric: var(--mico-font-variant-numeric-tabular-nums) !important; }

.font-variant-diagonal-fractions { font-variant-numeric: var(--mico-font-variant-numeric-diagonal-fractions) !important; }

.font-variant-stacked-fractions { font-variant-numeric: var(--mico-font-variant-numeric-stacked-fractions) !important; }

/* Font Variant Ligatures */

.ligatures-common { font-variant-ligatures: var(--mico-font-variant-ligatures-common) !important; }

.ligatures-no-common { font-variant-ligatures: var(--mico-font-variant-ligatures-no-common) !important; }

.ligatures-discretionary { font-variant-ligatures: var(--mico-font-variant-ligatures-discretionary) !important; }

.ligatures-no-discretionary { font-variant-ligatures: var(--mico-font-variant-ligatures-no-discretionary) !important; }

.ligatures-historical { font-variant-ligatures: var(--mico-font-variant-ligatures-historical) !important; }

.ligatures-no-historical { font-variant-ligatures: var(--mico-font-variant-ligatures-no-historical) !important; }

.ligatures-contextual { font-variant-ligatures: var(--mico-font-variant-ligatures-contextual) !important; }

.ligatures-no-contextual { font-variant-ligatures: var(--mico-font-variant-ligatures-no-contextual) !important; }

/* Font Variant Caps */

.caps-normal { font-variant-caps: var(--mico-font-variant-caps-normal) !important; }

.caps-small { font-variant-caps: var(--mico-font-variant-caps-small-caps) !important; }

.caps-all-small { font-variant-caps: var(--mico-font-variant-caps-all-small-caps) !important; }

.caps-petite { font-variant-caps: var(--mico-font-variant-caps-petite-caps) !important; }

.caps-all-petite { font-variant-caps: var(--mico-font-variant-caps-all-petite-caps) !important; }

.caps-unicase { font-variant-caps: var(--mico-font-variant-caps-unicase) !important; }

.caps-titling { font-variant-caps: var(--mico-font-variant-caps-titling-caps) !important; }

/* ========================================================================== */

/* LIST STYLE UTILITIES                                                      */

/* ========================================================================== */

.list-none { list-style-type: var(--mico-list-style-type-none) !important; }

.list-disc { list-style-type: var(--mico-list-style-type-disc) !important; }

.list-decimal { list-style-type: var(--mico-list-style-type-decimal) !important; }

.list-square { list-style-type: var(--mico-list-style-type-square) !important; }

.list-upper-roman { list-style-type: var(--mico-list-style-type-upper-roman) !important; }

.list-lower-roman { list-style-type: var(--mico-list-style-type-lower-roman) !important; }

.list-upper-alpha { list-style-type: var(--mico-list-style-type-upper-alpha) !important; }

.list-lower-alpha { list-style-type: var(--mico-list-style-type-lower-alpha) !important; }

.list-inside { list-style-position: var(--mico-list-style-position-inside) !important; }

.list-outside { list-style-position: var(--mico-list-style-position-outside) !important; }

/* ========================================================================== */

/* USER SELECT UTILITIES                                                     */

/* ========================================================================== */

.select-none { user-select: var(--mico-user-select-none) !important; }

.select-text { user-select: var(--mico-user-select-text) !important; }

.select-all { user-select: var(--mico-user-select-all) !important; }

.select-auto { user-select: var(--mico-user-select-auto) !important; }

/* ========================================================================== */

/* WRITING MODE UTILITIES                                                    */

/* ========================================================================== */

.writing-horizontal { writing-mode: var(--mico-writing-mode-horizontal-tb) !important; }

.writing-vertical-rl { writing-mode: var(--mico-writing-mode-vertical-rl) !important; }

.writing-vertical-lr { writing-mode: var(--mico-writing-mode-vertical-lr) !important; }

/* ========================================================================== */

/* TEXT ORIENTATION UTILITIES                                                */

/* ========================================================================== */

.orientation-mixed { text-orientation: var(--mico-text-orientation-mixed) !important; }

.orientation-upright { text-orientation: var(--mico-text-orientation-upright) !important; }

.orientation-sideways { text-orientation: var(--mico-text-orientation-sideways) !important; }

/* ========================================================================== */

/* HYPHENS UTILITIES                                                         */

/* ========================================================================== */

.hyphens-none { hyphens: var(--mico-hyphens-none) !important; }

.hyphens-manual { hyphens: var(--mico-hyphens-manual) !important; }

.hyphens-auto { hyphens: var(--mico-hyphens-auto) !important; }

/* ========================================================================== */

/* ADVANCED TYPOGRAPHY FEATURES                                              */

/* ========================================================================== */

.drop-cap::first-letter {
  float: left;
  font-size: 3em;
  line-height: 0.8;
  padding-right: 0.1em;
  padding-top: 0.1em;
}

.text-wrap-balance { text-wrap: balance; }

.text-wrap-pretty { text-wrap: pretty; }

.text-wrap-stable { text-wrap: stable; }

.gradient-text {
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
}

/* ========================================================================== */

/* FONT SMOOTHING UTILITIES                                                  */

/* ========================================================================== */

.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.subpixel-antialiased {
  -webkit-font-smoothing: auto;
  -moz-osx-font-smoothing: auto;
}

/**
 * Color Utility Classes
 *
 * Comprehensive color utilities for the Mico CSS Framework.
 * All color variables are defined in css/base/variables.css
 *
 * This file contains only utility classes that reference those variables.
 * Classes are organized by: Brand Colors, Neutral Colors, Extended Palette,
 * Transparency Colors, and Semantic Colors.
 */

/* ====================================================================== */

/* BRAND COLOR UTILITIES                                                  */

/* ====================================================================== */

/**
 * Base Brand Colors
 * Primary, secondary, and accent colors for brand consistency
 */

/* Base Brand Background Colors */

.bg-primary { background-color: var(--mico-color-primary) !important; }

.bg-secondary { background-color: var(--mico-color-secondary) !important; }

.bg-accent { background-color: var(--mico-color-accent) !important; }

/* Base Brand Text Colors */

.text-primary { color: var(--mico-color-primary) !important; }

.text-secondary { color: var(--mico-color-secondary) !important; }

.text-accent { color: var(--mico-color-accent) !important; }

/**
 * Primary Color Variations
 * Shades (darker) and tones (lighter) of the primary brand color
 */

/* Primary Tint Text Colors (lighter) */

.text-primary-light { color: var(--mico-color-primary-light) !important; }

.text-primary-2xlight { color: var(--mico-color-primary-2xlight) !important; }

.text-primary-3xlight { color: var(--mico-color-primary-3xlight) !important; }

.text-primary-4xlight { color: var(--mico-color-primary-4xlight) !important; }

.text-primary-5xlight { color: var(--mico-color-primary-5xlight) !important; }

.text-primary-6xlight { color: var(--mico-color-primary-6xlight) !important; }

.text-primary-7xlight { color: var(--mico-color-primary-7xlight) !important; }

.text-primary-8xlight { color: var(--mico-color-primary-8xlight) !important; }

/* Primary Shade Text Colors (darker) */

.text-primary-dark { color: var(--mico-color-primary-dark) !important; }

.text-primary-2xdark { color: var(--mico-color-primary-2xdark) !important; }

.text-primary-3xdark { color: var(--mico-color-primary-3xdark) !important; }

.text-primary-4xdark { color: var(--mico-color-primary-4xdark) !important; }

.text-primary-5xdark { color: var(--mico-color-primary-5xdark) !important; }

.text-primary-6xdark { color: var(--mico-color-primary-6xdark) !important; }

.text-primary-7xdark { color: var(--mico-color-primary-7xdark) !important; }

.text-primary-8xdark { color: var(--mico-color-primary-8xdark) !important; }

/* Primary Tint Background Colors (lighter) */

.bg-primary-light { background-color: var(--mico-color-primary-light) !important; }

.bg-primary-2xlight { background-color: var(--mico-color-primary-2xlight) !important; }

.bg-primary-3xlight { background-color: var(--mico-color-primary-3xlight) !important; }

.bg-primary-4xlight { background-color: var(--mico-color-primary-4xlight) !important; }

.bg-primary-5xlight { background-color: var(--mico-color-primary-5xlight) !important; }

.bg-primary-6xlight { background-color: var(--mico-color-primary-6xlight) !important; }

.bg-primary-7xlight { background-color: var(--mico-color-primary-7xlight) !important; }

.bg-primary-8xlight { background-color: var(--mico-color-primary-8xlight) !important; }

/* Primary Shade Background Colors (darker) */

.bg-primary-dark { background-color: var(--mico-color-primary-dark) !important; }

.bg-primary-2xdark { background-color: var(--mico-color-primary-2xdark) !important; }

.bg-primary-3xdark { background-color: var(--mico-color-primary-3xdark) !important; }

.bg-primary-4xdark { background-color: var(--mico-color-primary-4xdark) !important; }

.bg-primary-5xdark { background-color: var(--mico-color-primary-5xdark) !important; }

.bg-primary-6xdark { background-color: var(--mico-color-primary-6xdark) !important; }

.bg-primary-7xdark { background-color: var(--mico-color-primary-7xdark) !important; }

.bg-primary-8xdark { background-color: var(--mico-color-primary-8xdark) !important; }

/**
 * Secondary Color Variations
 * Shades (darker) and tones (lighter) of the secondary brand color
 */

/* Secondary Tint Text Colors (lighter) */

.text-secondary-light { color: var(--mico-color-secondary-light) !important; }

.text-secondary-2xlight { color: var(--mico-color-secondary-2xlight) !important; }

.text-secondary-3xlight { color: var(--mico-color-secondary-3xlight) !important; }

.text-secondary-4xlight { color: var(--mico-color-secondary-4xlight) !important; }

.text-secondary-5xlight { color: var(--mico-color-secondary-5xlight) !important; }

.text-secondary-6xlight { color: var(--mico-color-secondary-6xlight) !important; }

.text-secondary-7xlight { color: var(--mico-color-secondary-7xlight) !important; }

.text-secondary-8xlight { color: var(--mico-color-secondary-8xlight) !important; }

/* Secondary Shade Text Colors (darker) */

.text-secondary-dark { color: var(--mico-color-secondary-dark) !important; }

.text-secondary-2xdark { color: var(--mico-color-secondary-2xdark) !important; }

.text-secondary-3xdark { color: var(--mico-color-secondary-3xdark) !important; }

.text-secondary-4xdark { color: var(--mico-color-secondary-4xdark) !important; }

.text-secondary-5xdark { color: var(--mico-color-secondary-5xdark) !important; }

.text-secondary-6xdark { color: var(--mico-color-secondary-6xdark) !important; }

.text-secondary-7xdark { color: var(--mico-color-secondary-7xdark) !important; }

.text-secondary-8xdark { color: var(--mico-color-secondary-8xdark) !important; }

/* Secondary Tint Background Colors (lighter) */

.bg-secondary-light { background-color: var(--mico-color-secondary-light) !important; }

.bg-secondary-2xlight { background-color: var(--mico-color-secondary-2xlight) !important; }

.bg-secondary-3xlight { background-color: var(--mico-color-secondary-3xlight) !important; }

.bg-secondary-4xlight { background-color: var(--mico-color-secondary-4xlight) !important; }

.bg-secondary-5xlight { background-color: var(--mico-color-secondary-5xlight) !important; }

.bg-secondary-6xlight { background-color: var(--mico-color-secondary-6xlight) !important; }

.bg-secondary-7xlight { background-color: var(--mico-color-secondary-7xlight) !important; }

.bg-secondary-8xlight { background-color: var(--mico-color-secondary-8xlight) !important; }

/* Secondary Shade Background Colors (darker) */

.bg-secondary-dark { background-color: var(--mico-color-secondary-dark) !important; }

.bg-secondary-2xdark { background-color: var(--mico-color-secondary-2xdark) !important; }

.bg-secondary-3xdark { background-color: var(--mico-color-secondary-3xdark) !important; }

.bg-secondary-4xdark { background-color: var(--mico-color-secondary-4xdark) !important; }

.bg-secondary-5xdark { background-color: var(--mico-color-secondary-5xdark) !important; }

.bg-secondary-6xdark { background-color: var(--mico-color-secondary-6xdark) !important; }

.bg-secondary-7xdark { background-color: var(--mico-color-secondary-7xdark) !important; }

.bg-secondary-8xdark { background-color: var(--mico-color-secondary-8xdark) !important; }

/**
 * Accent Color Variations
 * Shades (darker) and tones (lighter) of the accent brand color
 */

/* Accent Tint Text Colors (lighter) */

.text-accent-light { color: var(--mico-color-accent-light) !important; }

.text-accent-2xlight { color: var(--mico-color-accent-2xlight) !important; }

.text-accent-3xlight { color: var(--mico-color-accent-3xlight) !important; }

.text-accent-4xlight { color: var(--mico-color-accent-4xlight) !important; }

.text-accent-5xlight { color: var(--mico-color-accent-5xlight) !important; }

.text-accent-6xlight { color: var(--mico-color-accent-6xlight) !important; }

.text-accent-7xlight { color: var(--mico-color-accent-7xlight) !important; }

.text-accent-8xlight { color: var(--mico-color-accent-8xlight) !important; }

/* Accent Shade Text Colors (darker) */

.text-accent-dark { color: var(--mico-color-accent-dark) !important; }

.text-accent-2xdark { color: var(--mico-color-accent-2xdark) !important; }

.text-accent-3xdark { color: var(--mico-color-accent-3xdark) !important; }

.text-accent-4xdark { color: var(--mico-color-accent-4xdark) !important; }

.text-accent-5xdark { color: var(--mico-color-accent-5xdark) !important; }

.text-accent-6xdark { color: var(--mico-color-accent-6xdark) !important; }

.text-accent-7xdark { color: var(--mico-color-accent-7xdark) !important; }

.text-accent-8xdark { color: var(--mico-color-accent-8xdark) !important; }

/* Accent Tint Background Colors (lighter) */

.bg-accent-light { background-color: var(--mico-color-accent-light) !important; }

.bg-accent-2xlight { background-color: var(--mico-color-accent-2xlight) !important; }

.bg-accent-3xlight { background-color: var(--mico-color-accent-3xlight) !important; }

.bg-accent-4xlight { background-color: var(--mico-color-accent-4xlight) !important; }

.bg-accent-5xlight { background-color: var(--mico-color-accent-5xlight) !important; }

.bg-accent-6xlight { background-color: var(--mico-color-accent-6xlight) !important; }

.bg-accent-7xlight { background-color: var(--mico-color-accent-7xlight) !important; }

.bg-accent-8xlight { background-color: var(--mico-color-accent-8xlight) !important; }

/* Accent Shade Background Colors (darker) */

.bg-accent-dark { background-color: var(--mico-color-accent-dark) !important; }

.bg-accent-2xdark { background-color: var(--mico-color-accent-2xdark) !important; }

.bg-accent-3xdark { background-color: var(--mico-color-accent-3xdark) !important; }

.bg-accent-4xdark { background-color: var(--mico-color-accent-4xdark) !important; }

.bg-accent-5xdark { background-color: var(--mico-color-accent-5xdark) !important; }

.bg-accent-6xdark { background-color: var(--mico-color-accent-6xdark) !important; }

.bg-accent-7xdark { background-color: var(--mico-color-accent-7xdark) !important; }

.bg-accent-8xdark { background-color: var(--mico-color-accent-8xdark) !important; }

/* ====================================================================== */

/* NEUTRAL COLOR UTILITIES                                                */

/* ====================================================================== */

/**
 * Black Color System - OKLCH
 * Base black with 5 tints and 5 shades for dark themes and high contrast
 */

/* Black Base Color */

.bg-black { background-color: var(--mico-color-black) !important; }

.text-black { color: var(--mico-color-black) !important; }

/* Black Tint Background Colors (lighter) */

.bg-black-light { background-color: var(--mico-color-black-light) !important; }

.bg-black-2xlight { background-color: var(--mico-color-black-2xlight) !important; }

.bg-black-3xlight { background-color: var(--mico-color-black-3xlight) !important; }

.bg-black-4xlight { background-color: var(--mico-color-black-4xlight) !important; }

.bg-black-5xlight { background-color: var(--mico-color-black-5xlight) !important; }

.bg-black-6xlight { background-color: var(--mico-color-black-6xlight) !important; }

.bg-black-7xlight { background-color: var(--mico-color-black-7xlight) !important; }

.bg-black-8xlight { background-color: var(--mico-color-black-8xlight) !important; }

/* Black Shade Background Colors (darker) */

.bg-black-dark { background-color: var(--mico-color-black-dark) !important; }

.bg-black-2xdark { background-color: var(--mico-color-black-2xdark) !important; }

.bg-black-3xdark { background-color: var(--mico-color-black-3xdark) !important; }

.bg-black-4xdark { background-color: var(--mico-color-black-4xdark) !important; }

.bg-black-5xdark { background-color: var(--mico-color-black-5xdark) !important; }

.bg-black-6xdark { background-color: var(--mico-color-black-6xdark) !important; }

.bg-black-7xdark { background-color: var(--mico-color-black-7xdark) !important; }

.bg-black-8xdark { background-color: var(--mico-color-black-8xdark) !important; }

/* Black Tint Text Colors (lighter) */

.text-black-light { color: var(--mico-color-black-light) !important; }

.text-black-2xlight { color: var(--mico-color-black-2xlight) !important; }

.text-black-3xlight { color: var(--mico-color-black-3xlight) !important; }

.text-black-4xlight { color: var(--mico-color-black-4xlight) !important; }

.text-black-5xlight { color: var(--mico-color-black-5xlight) !important; }

.text-black-6xlight { color: var(--mico-color-black-6xlight) !important; }

.text-black-7xlight { color: var(--mico-color-black-7xlight) !important; }

.text-black-8xlight { color: var(--mico-color-black-8xlight) !important; }

/* Black Shade Text Colors (darker) */

.text-black-dark { color: var(--mico-color-black-dark) !important; }

.text-black-2xdark { color: var(--mico-color-black-2xdark) !important; }

.text-black-3xdark { color: var(--mico-color-black-3xdark) !important; }

.text-black-4xdark { color: var(--mico-color-black-4xdark) !important; }

.text-black-5xdark { color: var(--mico-color-black-5xdark) !important; }

.text-black-6xdark { color: var(--mico-color-black-6xdark) !important; }

.text-black-7xdark { color: var(--mico-color-black-7xdark) !important; }

.text-black-8xdark { color: var(--mico-color-black-8xdark) !important; }

/**
 * Gray Color System - OKLCH
 * Base gray with 5 tints and 5 shades for UI elements, text, and backgrounds
 * Optimized for contrast and accessibility with perceptual uniformity
 */

/* Gray Base Color */

.bg-gray { background-color: var(--mico-color-gray) !important; }

.text-gray { color: var(--mico-color-gray) !important; }

/* Gray Tint Background Colors (lighter) */

.bg-gray-light { background-color: var(--mico-color-gray-light) !important; }

.bg-gray-2xlight { background-color: var(--mico-color-gray-2xlight) !important; }

.bg-gray-3xlight { background-color: var(--mico-color-gray-3xlight) !important; }

.bg-gray-4xlight { background-color: var(--mico-color-gray-4xlight) !important; }

.bg-gray-5xlight { background-color: var(--mico-color-gray-5xlight) !important; }

.bg-gray-6xlight { background-color: var(--mico-color-gray-6xlight) !important; }

.bg-gray-7xlight { background-color: var(--mico-color-gray-7xlight) !important; }

.bg-gray-8xlight { background-color: var(--mico-color-gray-8xlight) !important; }

/* Gray Shade Background Colors (darker) */

.bg-gray-dark { background-color: var(--mico-color-gray-dark) !important; }

.bg-gray-2xdark { background-color: var(--mico-color-gray-2xdark) !important; }

.bg-gray-3xdark { background-color: var(--mico-color-gray-3xdark) !important; }

.bg-gray-4xdark { background-color: var(--mico-color-gray-4xdark) !important; }

.bg-gray-5xdark { background-color: var(--mico-color-gray-5xdark) !important; }

.bg-gray-6xdark { background-color: var(--mico-color-gray-6xdark) !important; }

.bg-gray-7xdark { background-color: var(--mico-color-gray-7xdark) !important; }

.bg-gray-8xdark { background-color: var(--mico-color-gray-8xdark) !important; }

/* Gray Tint Text Colors (lighter) */

.text-gray-light { color: var(--mico-color-gray-light) !important; }

.text-gray-2xlight { color: var(--mico-color-gray-2xlight) !important; }

.text-gray-3xlight { color: var(--mico-color-gray-3xlight) !important; }

.text-gray-4xlight { color: var(--mico-color-gray-4xlight) !important; }

.text-gray-5xlight { color: var(--mico-color-gray-5xlight) !important; }

.text-gray-6xlight { color: var(--mico-color-gray-6xlight) !important; }

.text-gray-7xlight { color: var(--mico-color-gray-7xlight) !important; }

.text-gray-8xlight { color: var(--mico-color-gray-8xlight) !important; }

/* Gray Shade Text Colors (darker) */

.text-gray-dark { color: var(--mico-color-gray-dark) !important; }

.text-gray-2xdark { color: var(--mico-color-gray-2xdark) !important; }

.text-gray-3xdark { color: var(--mico-color-gray-3xdark) !important; }

.text-gray-4xdark { color: var(--mico-color-gray-4xdark) !important; }

.text-gray-5xdark { color: var(--mico-color-gray-5xdark) !important; }

.text-gray-6xdark { color: var(--mico-color-gray-6xdark) !important; }

.text-gray-7xdark { color: var(--mico-color-gray-7xdark) !important; }

.text-gray-8xdark { color: var(--mico-color-gray-8xdark) !important; }

/**
 * White Color System - OKLCH
 * Base white with 5 tints and 5 shades for clean, minimal aesthetics
 */

/* White Base Color */

.bg-white { background-color: var(--mico-color-white) !important; }

.text-white { color: var(--mico-color-white) !important; }

/* White Tint Background Colors (lighter) */

.bg-white-light { background-color: var(--mico-color-white-light) !important; }

.bg-white-2xlight { background-color: var(--mico-color-white-2xlight) !important; }

.bg-white-3xlight { background-color: var(--mico-color-white-3xlight) !important; }

.bg-white-4xlight { background-color: var(--mico-color-white-4xlight) !important; }

.bg-white-5xlight { background-color: var(--mico-color-white-5xlight) !important; }

.bg-white-6xlight { background-color: var(--mico-color-white-6xlight) !important; }

.bg-white-7xlight { background-color: var(--mico-color-white-7xlight) !important; }

.bg-white-8xlight { background-color: var(--mico-color-white-8xlight) !important; }

/* White Shade Background Colors (darker) */

.bg-white-dark { background-color: var(--mico-color-white-dark) !important; }

.bg-white-2xdark { background-color: var(--mico-color-white-2xdark) !important; }

.bg-white-3xdark { background-color: var(--mico-color-white-3xdark) !important; }

.bg-white-4xdark { background-color: var(--mico-color-white-4xdark) !important; }

.bg-white-5xdark { background-color: var(--mico-color-white-5xdark) !important; }

.bg-white-6xdark { background-color: var(--mico-color-white-6xdark) !important; }

.bg-white-7xdark { background-color: var(--mico-color-white-7xdark) !important; }

.bg-white-8xdark { background-color: var(--mico-color-white-8xdark) !important; }

/* White Tint Text Colors (lighter) */

.text-white-light { color: var(--mico-color-white-light) !important; }

.text-white-2xlight { color: var(--mico-color-white-2xlight) !important; }

.text-white-3xlight { color: var(--mico-color-white-3xlight) !important; }

.text-white-4xlight { color: var(--mico-color-white-4xlight) !important; }

.text-white-5xlight { color: var(--mico-color-white-5xlight) !important; }

.text-white-6xlight { color: var(--mico-color-white-6xlight) !important; }

.text-white-7xlight { color: var(--mico-color-white-7xlight) !important; }

.text-white-8xlight { color: var(--mico-color-white-8xlight) !important; }

/* White Shade Text Colors (darker) */

.text-white-dark { color: var(--mico-color-white-dark) !important; }

.text-white-2xdark { color: var(--mico-color-white-2xdark) !important; }

.text-white-3xdark { color: var(--mico-color-white-3xdark) !important; }

.text-white-4xdark { color: var(--mico-color-white-4xdark) !important; }

.text-white-5xdark { color: var(--mico-color-white-5xdark) !important; }

.text-white-6xdark { color: var(--mico-color-white-6xdark) !important; }

.text-white-7xdark { color: var(--mico-color-white-7xdark) !important; }

.text-white-8xdark { color: var(--mico-color-white-8xdark) !important; }

/* ====================================================================== */

/* EXTENDED COLOR PALETTE UTILITIES                                       */

/* ====================================================================== */

/**
 * Red Color System - OKLCH
 * Base red with 5 tints and 5 shades for error states, alerts, danger
 */

/* Red Base Color */

.bg-red { background-color: var(--mico-color-red) !important; }

.text-red { color: var(--mico-color-red) !important; }

/* Red Tint Background Colors (lighter) */

.bg-red-light { background-color: var(--mico-color-red-light) !important; }

.bg-red-2xlight { background-color: var(--mico-color-red-2xlight) !important; }

.bg-red-3xlight { background-color: var(--mico-color-red-3xlight) !important; }

.bg-red-4xlight { background-color: var(--mico-color-red-4xlight) !important; }

.bg-red-5xlight { background-color: var(--mico-color-red-5xlight) !important; }

.bg-red-6xlight { background-color: var(--mico-color-red-6xlight) !important; }

.bg-red-7xlight { background-color: var(--mico-color-red-7xlight) !important; }

.bg-red-8xlight { background-color: var(--mico-color-red-8xlight) !important; }

/* Red Shade Background Colors (darker) */

.bg-red-dark { background-color: var(--mico-color-red-dark) !important; }

.bg-red-2xdark { background-color: var(--mico-color-red-2xdark) !important; }

.bg-red-3xdark { background-color: var(--mico-color-red-3xdark) !important; }

.bg-red-4xdark { background-color: var(--mico-color-red-4xdark) !important; }

.bg-red-5xdark { background-color: var(--mico-color-red-5xdark) !important; }

.bg-red-6xdark { background-color: var(--mico-color-red-6xdark) !important; }

.bg-red-7xdark { background-color: var(--mico-color-red-7xdark) !important; }

.bg-red-8xdark { background-color: var(--mico-color-red-8xdark) !important; }

/* Red Tint Text Colors (lighter) */

.text-red-light { color: var(--mico-color-red-light) !important; }

.text-red-2xlight { color: var(--mico-color-red-2xlight) !important; }

.text-red-3xlight { color: var(--mico-color-red-3xlight) !important; }

.text-red-4xlight { color: var(--mico-color-red-4xlight) !important; }

.text-red-5xlight { color: var(--mico-color-red-5xlight) !important; }

.text-red-6xlight { color: var(--mico-color-red-6xlight) !important; }

.text-red-7xlight { color: var(--mico-color-red-7xlight) !important; }

.text-red-8xlight { color: var(--mico-color-red-8xlight) !important; }

/* Red Shade Text Colors (darker) */

.text-red-dark { color: var(--mico-color-red-dark) !important; }

.text-red-2xdark { color: var(--mico-color-red-2xdark) !important; }

.text-red-3xdark { color: var(--mico-color-red-3xdark) !important; }

.text-red-4xdark { color: var(--mico-color-red-4xdark) !important; }

.text-red-5xdark { color: var(--mico-color-red-5xdark) !important; }

.text-red-6xdark { color: var(--mico-color-red-6xdark) !important; }

.text-red-7xdark { color: var(--mico-color-red-7xdark) !important; }

.text-red-8xdark { color: var(--mico-color-red-8xdark) !important; }

/* Red Tint Background Colors (lighter) */

.bg-red-2xlight { background-color: var(--mico-color-red-2xlight) !important; }

.bg-red-3xlight { background-color: var(--mico-color-red-3xlight) !important; }

.bg-red-4xlight { background-color: var(--mico-color-red-4xlight) !important; }

.bg-red-5xlight { background-color: var(--mico-color-red-5xlight) !important; }

/* Red Tint Text Colors (lighter) */

.text-red-2xlight { color: var(--mico-color-red-2xlight) !important; }

.text-red-3xlight { color: var(--mico-color-red-3xlight) !important; }

.text-red-4xlight { color: var(--mico-color-red-4xlight) !important; }

.text-red-5xlight { color: var(--mico-color-red-5xlight) !important; }

/* Red Shade Background Colors (darker) */

.bg-red-2xdark { background-color: var(--mico-color-red-2xdark) !important; }

.bg-red-3xdark { background-color: var(--mico-color-red-3xdark) !important; }

.bg-red-4xdark { background-color: var(--mico-color-red-4xdark) !important; }

.bg-red-5xdark { background-color: var(--mico-color-red-5xdark) !important; }

/* Red Shade Text Colors (darker) */

.text-red-2xdark { color: var(--mico-color-red-2xdark) !important; }

.text-red-3xdark { color: var(--mico-color-red-3xdark) !important; }

.text-red-4xdark { color: var(--mico-color-red-4xdark) !important; }

.text-red-5xdark { color: var(--mico-color-red-5xdark) !important; }

/**
 * Yellow Color System - OKLCH
 * Base yellow with 5 tints and 5 shades for warning states, highlights
 */

/* Yellow Base Color */

.bg-yellow { background-color: var(--mico-color-yellow) !important; }

.text-yellow { color: var(--mico-color-yellow) !important; }

/* Yellow Tint Background Colors (lighter) */

.bg-yellow-light { background-color: var(--mico-color-yellow-light) !important; }

.bg-yellow-2xlight { background-color: var(--mico-color-yellow-2xlight) !important; }

.bg-yellow-3xlight { background-color: var(--mico-color-yellow-3xlight) !important; }

.bg-yellow-4xlight { background-color: var(--mico-color-yellow-4xlight) !important; }

.bg-yellow-5xlight { background-color: var(--mico-color-yellow-5xlight) !important; }

.bg-yellow-6xlight { background-color: var(--mico-color-yellow-6xlight) !important; }

.bg-yellow-7xlight { background-color: var(--mico-color-yellow-7xlight) !important; }

.bg-yellow-8xlight { background-color: var(--mico-color-yellow-8xlight) !important; }

/* Yellow Shade Background Colors (darker) */

.bg-yellow-dark { background-color: var(--mico-color-yellow-dark) !important; }

.bg-yellow-2xdark { background-color: var(--mico-color-yellow-2xdark) !important; }

.bg-yellow-3xdark { background-color: var(--mico-color-yellow-3xdark) !important; }

.bg-yellow-4xdark { background-color: var(--mico-color-yellow-4xdark) !important; }

.bg-yellow-5xdark { background-color: var(--mico-color-yellow-5xdark) !important; }

.bg-yellow-6xdark { background-color: var(--mico-color-yellow-6xdark) !important; }

.bg-yellow-7xdark { background-color: var(--mico-color-yellow-7xdark) !important; }

.bg-yellow-8xdark { background-color: var(--mico-color-yellow-8xdark) !important; }

/* Yellow Tint Text Colors (lighter) */

.text-yellow-light { color: var(--mico-color-yellow-light) !important; }

.text-yellow-2xlight { color: var(--mico-color-yellow-2xlight) !important; }

.text-yellow-3xlight { color: var(--mico-color-yellow-3xlight) !important; }

.text-yellow-4xlight { color: var(--mico-color-yellow-4xlight) !important; }

.text-yellow-5xlight { color: var(--mico-color-yellow-5xlight) !important; }

.text-yellow-6xlight { color: var(--mico-color-yellow-6xlight) !important; }

.text-yellow-7xlight { color: var(--mico-color-yellow-7xlight) !important; }

.text-yellow-8xlight { color: var(--mico-color-yellow-8xlight) !important; }

/* Yellow Shade Text Colors (darker) */

.text-yellow-dark { color: var(--mico-color-yellow-dark) !important; }

.text-yellow-2xdark { color: var(--mico-color-yellow-2xdark) !important; }

.text-yellow-3xdark { color: var(--mico-color-yellow-3xdark) !important; }

.text-yellow-4xdark { color: var(--mico-color-yellow-4xdark) !important; }

.text-yellow-5xdark { color: var(--mico-color-yellow-5xdark) !important; }

.text-yellow-6xdark { color: var(--mico-color-yellow-6xdark) !important; }

.text-yellow-7xdark { color: var(--mico-color-yellow-7xdark) !important; }

.text-yellow-8xdark { color: var(--mico-color-yellow-8xdark) !important; }

/**
 * Green Color System - OKLCH
 * Base green with 5 tints and 5 shades for success states, positive actions
 */

/* Green Base Color */

.bg-green { background-color: var(--mico-color-green) !important; }

.text-green { color: var(--mico-color-green) !important; }

/* Green Tint Background Colors (lighter) */

.bg-green-light { background-color: var(--mico-color-green-light) !important; }

.bg-green-2xlight { background-color: var(--mico-color-green-2xlight) !important; }

.bg-green-3xlight { background-color: var(--mico-color-green-3xlight) !important; }

.bg-green-4xlight { background-color: var(--mico-color-green-4xlight) !important; }

.bg-green-5xlight { background-color: var(--mico-color-green-5xlight) !important; }

.bg-green-6xlight { background-color: var(--mico-color-green-6xlight) !important; }

.bg-green-7xlight { background-color: var(--mico-color-green-7xlight) !important; }

.bg-green-8xlight { background-color: var(--mico-color-green-8xlight) !important; }

/* Green Shade Background Colors (darker) */

.bg-green-dark { background-color: var(--mico-color-green-dark) !important; }

.bg-green-2xdark { background-color: var(--mico-color-green-2xdark) !important; }

.bg-green-3xdark { background-color: var(--mico-color-green-3xdark) !important; }

.bg-green-4xdark { background-color: var(--mico-color-green-4xdark) !important; }

.bg-green-5xdark { background-color: var(--mico-color-green-5xdark) !important; }

.bg-green-6xdark { background-color: var(--mico-color-green-6xdark) !important; }

.bg-green-7xdark { background-color: var(--mico-color-green-7xdark) !important; }

.bg-green-8xdark { background-color: var(--mico-color-green-8xdark) !important; }

/* Green Tint Text Colors (lighter) */

.text-green-light { color: var(--mico-color-green-light) !important; }

.text-green-2xlight { color: var(--mico-color-green-2xlight) !important; }

.text-green-3xlight { color: var(--mico-color-green-3xlight) !important; }

.text-green-4xlight { color: var(--mico-color-green-4xlight) !important; }

.text-green-5xlight { color: var(--mico-color-green-5xlight) !important; }

.text-green-6xlight { color: var(--mico-color-green-6xlight) !important; }

.text-green-7xlight { color: var(--mico-color-green-7xlight) !important; }

.text-green-8xlight { color: var(--mico-color-green-8xlight) !important; }

/* Green Shade Text Colors (darker) */

.text-green-dark { color: var(--mico-color-green-dark) !important; }

.text-green-2xdark { color: var(--mico-color-green-2xdark) !important; }

.text-green-3xdark { color: var(--mico-color-green-3xdark) !important; }

.text-green-4xdark { color: var(--mico-color-green-4xdark) !important; }

.text-green-5xdark { color: var(--mico-color-green-5xdark) !important; }

.text-green-6xdark { color: var(--mico-color-green-6xdark) !important; }

.text-green-7xdark { color: var(--mico-color-green-7xdark) !important; }

.text-green-8xdark { color: var(--mico-color-green-8xdark) !important; }

/**
 * Blue Color System - OKLCH
 * Base blue with 5 tints and 5 shades for information, links, primary actions
 */

/* Blue Base Color */

.bg-blue { background-color: var(--mico-color-blue) !important; }

.text-blue { color: var(--mico-color-blue) !important; }

/* Blue Tint Background Colors (lighter) */

.bg-blue-light { background-color: var(--mico-color-blue-light) !important; }

.bg-blue-2xlight { background-color: var(--mico-color-blue-2xlight) !important; }

.bg-blue-3xlight { background-color: var(--mico-color-blue-3xlight) !important; }

.bg-blue-4xlight { background-color: var(--mico-color-blue-4xlight) !important; }

.bg-blue-5xlight { background-color: var(--mico-color-blue-5xlight) !important; }

.bg-blue-6xlight { background-color: var(--mico-color-blue-6xlight) !important; }

.bg-blue-7xlight { background-color: var(--mico-color-blue-7xlight) !important; }

.bg-blue-8xlight { background-color: var(--mico-color-blue-8xlight) !important; }

/* Blue Shade Background Colors (darker) */

.bg-blue-dark { background-color: var(--mico-color-blue-dark) !important; }

.bg-blue-2xdark { background-color: var(--mico-color-blue-2xdark) !important; }

.bg-blue-3xdark { background-color: var(--mico-color-blue-3xdark) !important; }

.bg-blue-4xdark { background-color: var(--mico-color-blue-4xdark) !important; }

.bg-blue-5xdark { background-color: var(--mico-color-blue-5xdark) !important; }

.bg-blue-6xdark { background-color: var(--mico-color-blue-6xdark) !important; }

.bg-blue-7xdark { background-color: var(--mico-color-blue-7xdark) !important; }

.bg-blue-8xdark { background-color: var(--mico-color-blue-8xdark) !important; }

/* Blue Tint Text Colors (lighter) */

.text-blue-light { color: var(--mico-color-blue-light) !important; }

.text-blue-2xlight { color: var(--mico-color-blue-2xlight) !important; }

.text-blue-3xlight { color: var(--mico-color-blue-3xlight) !important; }

.text-blue-4xlight { color: var(--mico-color-blue-4xlight) !important; }

.text-blue-5xlight { color: var(--mico-color-blue-5xlight) !important; }

.text-blue-6xlight { color: var(--mico-color-blue-6xlight) !important; }

.text-blue-7xlight { color: var(--mico-color-blue-7xlight) !important; }

.text-blue-8xlight { color: var(--mico-color-blue-8xlight) !important; }

/* Blue Shade Text Colors (darker) */

.text-blue-dark { color: var(--mico-color-blue-dark) !important; }

.text-blue-2xdark { color: var(--mico-color-blue-2xdark) !important; }

.text-blue-3xdark { color: var(--mico-color-blue-3xdark) !important; }

.text-blue-4xdark { color: var(--mico-color-blue-4xdark) !important; }

.text-blue-5xdark { color: var(--mico-color-blue-5xdark) !important; }

.text-blue-6xdark { color: var(--mico-color-blue-6xdark) !important; }

.text-blue-7xdark { color: var(--mico-color-blue-7xdark) !important; }

.text-blue-8xdark { color: var(--mico-color-blue-8xdark) !important; }

/**
 * Indigo Color System - OKLCH
 * Base indigo with 5 tints and 5 shades for deep blues, professional themes
 */

/* Indigo Base Color */

.bg-indigo { background-color: var(--mico-color-indigo) !important; }

.text-indigo { color: var(--mico-color-indigo) !important; }

/* Indigo Tint Background Colors (lighter) */

.bg-indigo-light { background-color: var(--mico-color-indigo-light) !important; }

.bg-indigo-2xlight { background-color: var(--mico-color-indigo-2xlight) !important; }

.bg-indigo-3xlight { background-color: var(--mico-color-indigo-3xlight) !important; }

.bg-indigo-4xlight { background-color: var(--mico-color-indigo-4xlight) !important; }

.bg-indigo-5xlight { background-color: var(--mico-color-indigo-5xlight) !important; }

.bg-indigo-6xlight { background-color: var(--mico-color-indigo-6xlight) !important; }

.bg-indigo-7xlight { background-color: var(--mico-color-indigo-7xlight) !important; }

.bg-indigo-8xlight { background-color: var(--mico-color-indigo-8xlight) !important; }

/* Indigo Shade Background Colors (darker) */

.bg-indigo-dark { background-color: var(--mico-color-indigo-dark) !important; }

.bg-indigo-2xdark { background-color: var(--mico-color-indigo-2xdark) !important; }

.bg-indigo-3xdark { background-color: var(--mico-color-indigo-3xdark) !important; }

.bg-indigo-4xdark { background-color: var(--mico-color-indigo-4xdark) !important; }

.bg-indigo-5xdark { background-color: var(--mico-color-indigo-5xdark) !important; }

.bg-indigo-6xdark { background-color: var(--mico-color-indigo-6xdark) !important; }

.bg-indigo-7xdark { background-color: var(--mico-color-indigo-7xdark) !important; }

.bg-indigo-8xdark { background-color: var(--mico-color-indigo-8xdark) !important; }

/* Indigo Tint Text Colors (lighter) */

.text-indigo-light { color: var(--mico-color-indigo-light) !important; }

.text-indigo-2xlight { color: var(--mico-color-indigo-2xlight) !important; }

.text-indigo-3xlight { color: var(--mico-color-indigo-3xlight) !important; }

.text-indigo-4xlight { color: var(--mico-color-indigo-4xlight) !important; }

.text-indigo-5xlight { color: var(--mico-color-indigo-5xlight) !important; }

.text-indigo-6xlight { color: var(--mico-color-indigo-6xlight) !important; }

.text-indigo-7xlight { color: var(--mico-color-indigo-7xlight) !important; }

.text-indigo-8xlight { color: var(--mico-color-indigo-8xlight) !important; }

/* Indigo Shade Text Colors (darker) */

.text-indigo-dark { color: var(--mico-color-indigo-dark) !important; }

.text-indigo-2xdark { color: var(--mico-color-indigo-2xdark) !important; }

.text-indigo-3xdark { color: var(--mico-color-indigo-3xdark) !important; }

.text-indigo-4xdark { color: var(--mico-color-indigo-4xdark) !important; }

.text-indigo-5xdark { color: var(--mico-color-indigo-5xdark) !important; }

.text-indigo-6xdark { color: var(--mico-color-indigo-6xdark) !important; }

.text-indigo-7xdark { color: var(--mico-color-indigo-7xdark) !important; }

.text-indigo-8xdark { color: var(--mico-color-indigo-8xdark) !important; }

/**
 * Purple Color System - OKLCH
 * Base purple with 5 tints and 5 shades for creative themes, luxury
 */

/* Purple Base Color */

.bg-purple { background-color: var(--mico-color-purple) !important; }

.text-purple { color: var(--mico-color-purple) !important; }

/* Purple Tint Background Colors (lighter) */

.bg-purple-light { background-color: var(--mico-color-purple-light) !important; }

.bg-purple-2xlight { background-color: var(--mico-color-purple-2xlight) !important; }

.bg-purple-3xlight { background-color: var(--mico-color-purple-3xlight) !important; }

.bg-purple-4xlight { background-color: var(--mico-color-purple-4xlight) !important; }

.bg-purple-5xlight { background-color: var(--mico-color-purple-5xlight) !important; }

.bg-purple-6xlight { background-color: var(--mico-color-purple-6xlight) !important; }

.bg-purple-7xlight { background-color: var(--mico-color-purple-7xlight) !important; }

.bg-purple-8xlight { background-color: var(--mico-color-purple-8xlight) !important; }

/* Purple Shade Background Colors (darker) */

.bg-purple-dark { background-color: var(--mico-color-purple-dark) !important; }

.bg-purple-2xdark { background-color: var(--mico-color-purple-2xdark) !important; }

.bg-purple-3xdark { background-color: var(--mico-color-purple-3xdark) !important; }

.bg-purple-4xdark { background-color: var(--mico-color-purple-4xdark) !important; }

.bg-purple-5xdark { background-color: var(--mico-color-purple-5xdark) !important; }

.bg-purple-6xdark { background-color: var(--mico-color-purple-6xdark) !important; }

.bg-purple-7xdark { background-color: var(--mico-color-purple-7xdark) !important; }

.bg-purple-8xdark { background-color: var(--mico-color-purple-8xdark) !important; }

/* Purple Tint Text Colors (lighter) */

.text-purple-light { color: var(--mico-color-purple-light) !important; }

.text-purple-2xlight { color: var(--mico-color-purple-2xlight) !important; }

.text-purple-3xlight { color: var(--mico-color-purple-3xlight) !important; }

.text-purple-4xlight { color: var(--mico-color-purple-4xlight) !important; }

.text-purple-5xlight { color: var(--mico-color-purple-5xlight) !important; }

.text-purple-6xlight { color: var(--mico-color-purple-6xlight) !important; }

.text-purple-7xlight { color: var(--mico-color-purple-7xlight) !important; }

.text-purple-8xlight { color: var(--mico-color-purple-8xlight) !important; }

/* Purple Shade Text Colors (darker) */

.text-purple-dark { color: var(--mico-color-purple-dark) !important; }

.text-purple-2xdark { color: var(--mico-color-purple-2xdark) !important; }

.text-purple-3xdark { color: var(--mico-color-purple-3xdark) !important; }

.text-purple-4xdark { color: var(--mico-color-purple-4xdark) !important; }

.text-purple-5xdark { color: var(--mico-color-purple-5xdark) !important; }

.text-purple-6xdark { color: var(--mico-color-purple-6xdark) !important; }

.text-purple-7xdark { color: var(--mico-color-purple-7xdark) !important; }

.text-purple-8xdark { color: var(--mico-color-purple-8xdark) !important; }

/**
 * Pink Color System - OKLCH
 * Base pink with 5 tints and 5 shades for feminine themes, highlights
 */

/* Pink Base Color */

.bg-pink { background-color: var(--mico-color-pink) !important; }

.text-pink { color: var(--mico-color-pink) !important; }

/* Pink Tint Background Colors (lighter) */

.bg-pink-light { background-color: var(--mico-color-pink-light) !important; }

.bg-pink-2xlight { background-color: var(--mico-color-pink-2xlight) !important; }

.bg-pink-3xlight { background-color: var(--mico-color-pink-3xlight) !important; }

.bg-pink-4xlight { background-color: var(--mico-color-pink-4xlight) !important; }

.bg-pink-5xlight { background-color: var(--mico-color-pink-5xlight) !important; }

.bg-pink-6xlight { background-color: var(--mico-color-pink-6xlight) !important; }

.bg-pink-7xlight { background-color: var(--mico-color-pink-7xlight) !important; }

.bg-pink-8xlight { background-color: var(--mico-color-pink-8xlight) !important; }

/* Pink Shade Background Colors (darker) */

.bg-pink-dark { background-color: var(--mico-color-pink-dark) !important; }

.bg-pink-2xdark { background-color: var(--mico-color-pink-2xdark) !important; }

.bg-pink-3xdark { background-color: var(--mico-color-pink-3xdark) !important; }

.bg-pink-4xdark { background-color: var(--mico-color-pink-4xdark) !important; }

.bg-pink-5xdark { background-color: var(--mico-color-pink-5xdark) !important; }

.bg-pink-6xdark { background-color: var(--mico-color-pink-6xdark) !important; }

.bg-pink-7xdark { background-color: var(--mico-color-pink-7xdark) !important; }

.bg-pink-8xdark { background-color: var(--mico-color-pink-8xdark) !important; }

/* Pink Tint Text Colors (lighter) */

.text-pink-light { color: var(--mico-color-pink-light) !important; }

.text-pink-2xlight { color: var(--mico-color-pink-2xlight) !important; }

.text-pink-3xlight { color: var(--mico-color-pink-3xlight) !important; }

.text-pink-4xlight { color: var(--mico-color-pink-4xlight) !important; }

.text-pink-5xlight { color: var(--mico-color-pink-5xlight) !important; }

.text-pink-6xlight { color: var(--mico-color-pink-6xlight) !important; }

.text-pink-7xlight { color: var(--mico-color-pink-7xlight) !important; }

.text-pink-8xlight { color: var(--mico-color-pink-8xlight) !important; }

/* Pink Shade Text Colors (darker) */

.text-pink-dark { color: var(--mico-color-pink-dark) !important; }

.text-pink-2xdark { color: var(--mico-color-pink-2xdark) !important; }

.text-pink-3xdark { color: var(--mico-color-pink-3xdark) !important; }

.text-pink-4xdark { color: var(--mico-color-pink-4xdark) !important; }

.text-pink-5xdark { color: var(--mico-color-pink-5xdark) !important; }

.text-pink-6xdark { color: var(--mico-color-pink-6xdark) !important; }

.text-pink-7xdark { color: var(--mico-color-pink-7xdark) !important; }

.text-pink-8xdark { color: var(--mico-color-pink-8xdark) !important; }

/* ====================================================================== */

/* TRANSPARENCY COLOR UTILITIES - OKLCH ALPHA SYSTEM                     */

/* ====================================================================== */

/**
 * Creative transparency variations using OKLCH with alpha channels
 * These provide sophisticated overlay and background effects with superior color mixing
 */

/* Black Transparency Background Colors */

.bg-black-whisper { background-color: var(--mico-color-black-whisper) !important; }

/* 10% opacity */

.bg-black-breath { background-color: var(--mico-color-black-breath) !important; }

/* 20% opacity */

.bg-black-mist { background-color: var(--mico-color-black-mist) !important; }

/* 30% opacity */

.bg-black-veil { background-color: var(--mico-color-black-veil) !important; }

/* 40% opacity */

.bg-black-shadow { background-color: var(--mico-color-black-shadow) !important; }

/* 50% opacity */

.bg-black-shroud { background-color: var(--mico-color-black-shroud) !important; }

/* 60% opacity */

.bg-black-cloak { background-color: var(--mico-color-black-cloak) !important; }

/* 70% opacity */

.bg-black-eclipse { background-color: var(--mico-color-black-eclipse) !important; }

/* 80% opacity */

.bg-black-void { background-color: var(--mico-color-black-void) !important; }

/* 90% opacity */

/* Alternative Creative Opacity Naming */

.bg-black-op10p { background-color: var(--mico-color-black-whisper) !important; }

/* 10% opacity */

.bg-black-op20p { background-color: var(--mico-color-black-breath) !important; }

/* 20% opacity */

.bg-black-op30p { background-color: var(--mico-color-black-mist) !important; }

/* 30% opacity */

.bg-black-op40p { background-color: var(--mico-color-black-veil) !important; }

/* 40% opacity */

.bg-black-op50p { background-color: var(--mico-color-black-shadow) !important; }

/* 50% opacity */

.bg-black-op60p { background-color: var(--mico-color-black-shroud) !important; }

/* 60% opacity */

.bg-black-op70p { background-color: var(--mico-color-black-cloak) !important; }

/* 70% opacity */

.bg-black-op80p { background-color: var(--mico-color-black-eclipse) !important; }

/* 80% opacity */

.bg-black-op90p { background-color: var(--mico-color-black-void) !important; }

/* 90% opacity */

/* Gray Transparency Background Colors */

.bg-gray-whisper { background-color: var(--mico-color-gray-whisper) !important; }

.bg-gray-breath { background-color: var(--mico-color-gray-breath) !important; }

.bg-gray-mist { background-color: var(--mico-color-gray-mist) !important; }

.bg-gray-veil { background-color: var(--mico-color-gray-veil) !important; }

.bg-gray-shadow { background-color: var(--mico-color-gray-shadow) !important; }

.bg-gray-shroud { background-color: var(--mico-color-gray-shroud) !important; }

.bg-gray-cloak { background-color: var(--mico-color-gray-cloak) !important; }

.bg-gray-eclipse { background-color: var(--mico-color-gray-eclipse) !important; }

.bg-gray-void { background-color: var(--mico-color-gray-void) !important; }

/* White Transparency Background Colors */

.bg-white-whisper { background-color: var(--mico-color-white-whisper) !important; }

.bg-white-breath { background-color: var(--mico-color-white-breath) !important; }

.bg-white-mist { background-color: var(--mico-color-white-mist) !important; }

.bg-white-veil { background-color: var(--mico-color-white-veil) !important; }

.bg-white-shadow { background-color: var(--mico-color-white-shadow) !important; }

.bg-white-shroud { background-color: var(--mico-color-white-shroud) !important; }

.bg-white-cloak { background-color: var(--mico-color-white-cloak) !important; }

.bg-white-eclipse { background-color: var(--mico-color-white-eclipse) !important; }

.bg-white-void { background-color: var(--mico-color-white-void) !important; }

/* Brand Color Transparency Background Colors */

.bg-primary-whisper { background-color: var(--mico-color-primary-whisper) !important; }

.bg-primary-breath { background-color: var(--mico-color-primary-breath) !important; }

.bg-primary-mist { background-color: var(--mico-color-primary-mist) !important; }

.bg-primary-veil { background-color: var(--mico-color-primary-veil) !important; }

.bg-primary-shadow { background-color: var(--mico-color-primary-shadow) !important; }

.bg-secondary-whisper { background-color: var(--mico-color-secondary-whisper) !important; }

.bg-secondary-breath { background-color: var(--mico-color-secondary-breath) !important; }

.bg-secondary-mist { background-color: var(--mico-color-secondary-mist) !important; }

.bg-secondary-veil { background-color: var(--mico-color-secondary-veil) !important; }

.bg-secondary-shadow { background-color: var(--mico-color-secondary-shadow) !important; }

.bg-accent-whisper { background-color: var(--mico-color-accent-whisper) !important; }

.bg-accent-breath { background-color: var(--mico-color-accent-breath) !important; }

.bg-accent-mist { background-color: var(--mico-color-accent-mist) !important; }

.bg-accent-veil { background-color: var(--mico-color-accent-veil) !important; }

.bg-accent-shadow { background-color: var(--mico-color-accent-shadow) !important; }

/* ====================================================================== */

/* SEMANTIC COLOR UTILITIES - OKLCH SYSTEM                               */

/* ====================================================================== */

/**
 * Colors that convey meaning and state information with OKLCH variations
 * Each semantic color includes 5 tints and 5 shades for comprehensive usage
 * All colors maintain WCAG AA contrast ratios for accessibility
 */

/* Semantic Base Colors */

.bg-success { background-color: var(--mico-color-success) !important; }

.bg-warning { background-color: var(--mico-color-warning) !important; }

.bg-error { background-color: var(--mico-color-error) !important; }

.bg-info { background-color: var(--mico-color-info) !important; }

.bg-visited { background-color: var(--mico-color-visited) !important; }

.text-success { color: var(--mico-color-success) !important; }

.text-warning { color: var(--mico-color-warning) !important; }

.text-error { color: var(--mico-color-error) !important; }

.text-info { color: var(--mico-color-info) !important; }

.text-visited { color: var(--mico-color-visited) !important; }

/* Success Color Variations */

.bg-success-2xlight { background-color: var(--mico-color-success-2xlight) !important; }

.bg-success-3xlight { background-color: var(--mico-color-success-3xlight) !important; }

.bg-success-4xlight { background-color: var(--mico-color-success-4xlight) !important; }

.bg-success-5xlight { background-color: var(--mico-color-success-5xlight) !important; }

.bg-success-6xlight { background-color: var(--mico-color-success-6xlight) !important; }

.bg-success-7xlight { background-color: var(--mico-color-success-7xlight) !important; }

.bg-success-8xlight { background-color: var(--mico-color-success-8xlight) !important; }

.bg-success-2xdark { background-color: var(--mico-color-success-2xdark) !important; }

.bg-success-3xdark { background-color: var(--mico-color-success-3xdark) !important; }

.bg-success-4xdark { background-color: var(--mico-color-success-4xdark) !important; }

.bg-success-5xdark { background-color: var(--mico-color-success-5xdark) !important; }

.bg-success-6xdark { background-color: var(--mico-color-success-6xdark) !important; }

.bg-success-7xdark { background-color: var(--mico-color-success-7xdark) !important; }

.bg-success-8xdark { background-color: var(--mico-color-success-8xdark) !important; }

.text-success-2xlight { color: var(--mico-color-success-2xlight) !important; }

.text-success-3xlight { color: var(--mico-color-success-3xlight) !important; }

.text-success-4xlight { color: var(--mico-color-success-4xlight) !important; }

.text-success-5xlight { color: var(--mico-color-success-5xlight) !important; }

.text-success-6xlight { color: var(--mico-color-success-6xlight) !important; }

.text-success-7xlight { color: var(--mico-color-success-7xlight) !important; }

.text-success-8xlight { color: var(--mico-color-success-8xlight) !important; }

.text-success-2xdark { color: var(--mico-color-success-2xdark) !important; }

.text-success-3xdark { color: var(--mico-color-success-3xdark) !important; }

.text-success-4xdark { color: var(--mico-color-success-4xdark) !important; }

.text-success-5xdark { color: var(--mico-color-success-5xdark) !important; }

.text-success-6xdark { color: var(--mico-color-success-6xdark) !important; }

.text-success-7xdark { color: var(--mico-color-success-7xdark) !important; }

.text-success-8xdark { color: var(--mico-color-success-8xdark) !important; }

/* Warning Color Variations */

.bg-warning-2xlight { background-color: var(--mico-color-warning-2xlight) !important; }

.bg-warning-3xlight { background-color: var(--mico-color-warning-3xlight) !important; }

.bg-warning-4xlight { background-color: var(--mico-color-warning-4xlight) !important; }

.bg-warning-5xlight { background-color: var(--mico-color-warning-5xlight) !important; }

.bg-warning-2xdark { background-color: var(--mico-color-warning-2xdark) !important; }

.bg-warning-3xdark { background-color: var(--mico-color-warning-3xdark) !important; }

.bg-warning-4xdark { background-color: var(--mico-color-warning-4xdark) !important; }

.bg-warning-5xdark { background-color: var(--mico-color-warning-5xdark) !important; }

.text-warning-2xlight { color: var(--mico-color-warning-2xlight) !important; }

.text-warning-3xlight { color: var(--mico-color-warning-3xlight) !important; }

.text-warning-4xlight { color: var(--mico-color-warning-4xlight) !important; }

.text-warning-5xlight { color: var(--mico-color-warning-5xlight) !important; }

.text-warning-2xdark { color: var(--mico-color-warning-2xdark) !important; }

.text-warning-3xdark { color: var(--mico-color-warning-3xdark) !important; }

.text-warning-4xdark { color: var(--mico-color-warning-4xdark) !important; }

.text-warning-5xdark { color: var(--mico-color-warning-5xdark) !important; }

/* Error Color Variations */

.bg-error-2xlight { background-color: var(--mico-color-error-2xlight) !important; }

.bg-error-3xlight { background-color: var(--mico-color-error-3xlight) !important; }

.bg-error-4xlight { background-color: var(--mico-color-error-4xlight) !important; }

.bg-error-5xlight { background-color: var(--mico-color-error-5xlight) !important; }

.bg-error-2xdark { background-color: var(--mico-color-error-2xdark) !important; }

.bg-error-3xdark { background-color: var(--mico-color-error-3xdark) !important; }

.bg-error-4xdark { background-color: var(--mico-color-error-4xdark) !important; }

.bg-error-5xdark { background-color: var(--mico-color-error-5xdark) !important; }

.text-error-2xlight { color: var(--mico-color-error-2xlight) !important; }

.text-error-3xlight { color: var(--mico-color-error-3xlight) !important; }

.text-error-4xlight { color: var(--mico-color-error-4xlight) !important; }

.text-error-5xlight { color: var(--mico-color-error-5xlight) !important; }

.text-error-2xdark { color: var(--mico-color-error-2xdark) !important; }

.text-error-3xdark { color: var(--mico-color-error-3xdark) !important; }

.text-error-4xdark { color: var(--mico-color-error-4xdark) !important; }

.text-error-5xdark { color: var(--mico-color-error-5xdark) !important; }

/* Info Color Variations */

.bg-info-2xlight { background-color: var(--mico-color-info-2xlight) !important; }

.bg-info-3xlight { background-color: var(--mico-color-info-3xlight) !important; }

.bg-info-4xlight { background-color: var(--mico-color-info-4xlight) !important; }

.bg-info-5xlight { background-color: var(--mico-color-info-5xlight) !important; }

.bg-info-2xdark { background-color: var(--mico-color-info-2xdark) !important; }

.bg-info-3xdark { background-color: var(--mico-color-info-3xdark) !important; }

.bg-info-4xdark { background-color: var(--mico-color-info-4xdark) !important; }

.bg-info-5xdark { background-color: var(--mico-color-info-5xdark) !important; }

.text-info-2xlight { color: var(--mico-color-info-2xlight) !important; }

.text-info-3xlight { color: var(--mico-color-info-3xlight) !important; }

.text-info-4xlight { color: var(--mico-color-info-4xlight) !important; }

.text-info-5xlight { color: var(--mico-color-info-5xlight) !important; }

.text-info-2xdark { color: var(--mico-color-info-2xdark) !important; }

.text-info-3xdark { color: var(--mico-color-info-3xdark) !important; }

.text-info-4xdark { color: var(--mico-color-info-4xdark) !important; }

.text-info-5xdark { color: var(--mico-color-info-5xdark) !important; }

/* Visited Color Variations */

.bg-visited-2xlight { background-color: var(--mico-color-visited-2xlight) !important; }

.bg-visited-3xlight { background-color: var(--mico-color-visited-3xlight) !important; }

.bg-visited-4xlight { background-color: var(--mico-color-visited-4xlight) !important; }

.bg-visited-5xlight { background-color: var(--mico-color-visited-5xlight) !important; }

.bg-visited-2xdark { background-color: var(--mico-color-visited-2xdark) !important; }

.bg-visited-3xdark { background-color: var(--mico-color-visited-3xdark) !important; }

.bg-visited-4xdark { background-color: var(--mico-color-visited-4xdark) !important; }

.bg-visited-5xdark { background-color: var(--mico-color-visited-5xdark) !important; }

.text-visited-2xlight { color: var(--mico-color-visited-2xlight) !important; }

.text-visited-3xlight { color: var(--mico-color-visited-3xlight) !important; }

.text-visited-4xlight { color: var(--mico-color-visited-4xlight) !important; }

.text-visited-5xlight { color: var(--mico-color-visited-5xlight) !important; }

.text-visited-2xdark { color: var(--mico-color-visited-2xdark) !important; }

.text-visited-3xdark { color: var(--mico-color-visited-3xdark) !important; }

.text-visited-4xdark { color: var(--mico-color-visited-4xdark) !important; }

.text-visited-5xdark { color: var(--mico-color-visited-5xdark) !important; }

/**
 * Mico CSS Framework - Interactive States
 *
 * This file defines utility classes for interactive states (hover, focus, active).
 * These classes follow a consistent naming pattern for easy use and extension.
 *
 * NAMING CONVENTION:
 * - Hover: .hover-{property}-{value}
 * - Focus: .focus-{property}-{value}
 * - Active: .active-{property}-{value}
 *
 * USAGE EXAMPLES:
 * <button class="hover-bg-primary">Hover for primary background</button>
 * <a class="hover-text-accent focus-text-primary">Interactive link</a>
 */

/* ========================================================================== */

/* BASE STATE UTILITIES                                                       */

/* ========================================================================== */

/**
 * Base transition for all interactive state classes
 * This ensures smooth transitions when states change
 */

[class^="hover-"], [class*=" hover-"],
[class^="focus-"], [class*=" focus-"],
[class^="active-"], [class*=" active-"] {
    transition: var(--mico-transition-all);
}

/* ========================================================================== */

/* HOVER STATE UTILITIES                                                      */

/* ========================================================================== */

/**
 * BACKGROUND COLOR HOVER STATES
 *
 * These utilities apply background colors on hover
 */

/* ---------- Brand Colors ---------- */

.hover-bg-primary:hover { background-color: var(--mico-color-primary) !important; }

.hover-bg-secondary:hover { background-color: var(--mico-color-secondary) !important; }

.hover-bg-accent:hover { background-color: var(--mico-color-accent) !important; }

/* ---------- Primary Color Variations ---------- */

/* Tints - Lighter variations */

.hover-bg-primary-light:hover { background-color: var(--mico-color-primary-light) !important; }

.hover-bg-primary-2xlight:hover { background-color: var(--mico-color-primary-2xlight) !important; }

.hover-bg-primary-3xlight:hover { background-color: var(--mico-color-primary-3xlight) !important; }

.hover-bg-primary-4xlight:hover { background-color: var(--mico-color-primary-4xlight) !important; }

.hover-bg-primary-5xlight:hover { background-color: var(--mico-color-primary-5xlight) !important; }

.hover-bg-primary-6xlight:hover { background-color: var(--mico-color-primary-6xlight) !important; }

.hover-bg-primary-7xlight:hover { background-color: var(--mico-color-primary-7xlight) !important; }

.hover-bg-primary-8xlight:hover { background-color: var(--mico-color-primary-8xlight) !important; }

/* Shades - Darker variations */

.hover-bg-primary-dark:hover { background-color: var(--mico-color-primary-dark) !important; }

.hover-bg-primary-2xdark:hover { background-color: var(--mico-color-primary-2xdark) !important; }

.hover-bg-primary-3xdark:hover { background-color: var(--mico-color-primary-3xdark) !important; }

.hover-bg-primary-4xdark:hover { background-color: var(--mico-color-primary-4xdark) !important; }

.hover-bg-primary-5xdark:hover { background-color: var(--mico-color-primary-5xdark) !important; }

.hover-bg-primary-6xdark:hover { background-color: var(--mico-color-primary-6xdark) !important; }

.hover-bg-primary-7xdark:hover { background-color: var(--mico-color-primary-7xdark) !important; }

.hover-bg-primary-8xdark:hover { background-color: var(--mico-color-primary-8xdark) !important; }

/* ---------- Secondary Color Variations ---------- */

/* Tints - Lighter variations */

.hover-bg-secondary-light:hover { background-color: var(--mico-color-secondary-light) !important; }

.hover-bg-secondary-2xlight:hover { background-color: var(--mico-color-secondary-2xlight) !important; }

.hover-bg-secondary-3xlight:hover { background-color: var(--mico-color-secondary-3xlight) !important; }

.hover-bg-secondary-4xlight:hover { background-color: var(--mico-color-secondary-4xlight) !important; }

.hover-bg-secondary-5xlight:hover { background-color: var(--mico-color-secondary-5xlight) !important; }

.hover-bg-secondary-6xlight:hover { background-color: var(--mico-color-secondary-6xlight) !important; }

.hover-bg-secondary-7xlight:hover { background-color: var(--mico-color-secondary-7xlight) !important; }

.hover-bg-secondary-8xlight:hover { background-color: var(--mico-color-secondary-8xlight) !important; }

/* Shades - Darker variations */

.hover-bg-secondary-dark:hover { background-color: var(--mico-color-secondary-dark) !important; }

.hover-bg-secondary-2xdark:hover { background-color: var(--mico-color-secondary-2xdark) !important; }

.hover-bg-secondary-3xdark:hover { background-color: var(--mico-color-secondary-3xdark) !important; }

.hover-bg-secondary-4xdark:hover { background-color: var(--mico-color-secondary-4xdark) !important; }

.hover-bg-secondary-5xdark:hover { background-color: var(--mico-color-secondary-5xdark) !important; }

.hover-bg-secondary-6xdark:hover { background-color: var(--mico-color-secondary-6xdark) !important; }

.hover-bg-secondary-7xdark:hover { background-color: var(--mico-color-secondary-7xdark) !important; }

.hover-bg-secondary-8xdark:hover { background-color: var(--mico-color-secondary-8xdark) !important; }

/* ---------- Accent Color Variations ---------- */

/* Tints - Lighter variations */

.hover-bg-accent-light:hover { background-color: var(--mico-color-accent-light) !important; }

.hover-bg-accent-2xlight:hover { background-color: var(--mico-color-accent-2xlight) !important; }

.hover-bg-accent-3xlight:hover { background-color: var(--mico-color-accent-3xlight) !important; }

.hover-bg-accent-4xlight:hover { background-color: var(--mico-color-accent-4xlight) !important; }

.hover-bg-accent-5xlight:hover { background-color: var(--mico-color-accent-5xlight) !important; }

.hover-bg-accent-6xlight:hover { background-color: var(--mico-color-accent-6xlight) !important; }

.hover-bg-accent-7xlight:hover { background-color: var(--mico-color-accent-7xlight) !important; }

.hover-bg-accent-8xlight:hover { background-color: var(--mico-color-accent-8xlight) !important; }

/* Shades - Darker variations */

.hover-bg-accent-dark:hover { background-color: var(--mico-color-accent-dark) !important; }

.hover-bg-accent-2xdark:hover { background-color: var(--mico-color-accent-2xdark) !important; }

.hover-bg-accent-3xdark:hover { background-color: var(--mico-color-accent-3xdark) !important; }

.hover-bg-accent-4xdark:hover { background-color: var(--mico-color-accent-4xdark) !important; }

.hover-bg-accent-5xdark:hover { background-color: var(--mico-color-accent-5xdark) !important; }

.hover-bg-accent-6xdark:hover { background-color: var(--mico-color-accent-6xdark) !important; }

.hover-bg-accent-7xdark:hover { background-color: var(--mico-color-accent-7xdark) !important; }

.hover-bg-accent-8xdark:hover { background-color: var(--mico-color-accent-8xdark) !important; }

/* ---------- Neutral Colors - OKLCH System ---------- */

/* Gray Color Variations */

.hover-bg-gray:hover { background-color: var(--mico-color-gray) !important; }

.hover-bg-gray-light:hover { background-color: var(--mico-color-gray-light) !important; }

.hover-bg-gray-2xlight:hover { background-color: var(--mico-color-gray-2xlight) !important; }

.hover-bg-gray-3xlight:hover { background-color: var(--mico-color-gray-3xlight) !important; }

.hover-bg-gray-4xlight:hover { background-color: var(--mico-color-gray-4xlight) !important; }

.hover-bg-gray-5xlight:hover { background-color: var(--mico-color-gray-5xlight) !important; }

.hover-bg-gray-6xlight:hover { background-color: var(--mico-color-gray-6xlight) !important; }

.hover-bg-gray-7xlight:hover { background-color: var(--mico-color-gray-7xlight) !important; }

.hover-bg-gray-8xlight:hover { background-color: var(--mico-color-gray-8xlight) !important; }

.hover-bg-gray-dark:hover { background-color: var(--mico-color-gray-dark) !important; }

.hover-bg-gray-2xdark:hover { background-color: var(--mico-color-gray-2xdark) !important; }

.hover-bg-gray-3xdark:hover { background-color: var(--mico-color-gray-3xdark) !important; }

.hover-bg-gray-4xdark:hover { background-color: var(--mico-color-gray-4xdark) !important; }

.hover-bg-gray-5xdark:hover { background-color: var(--mico-color-gray-5xdark) !important; }

.hover-bg-gray-6xdark:hover { background-color: var(--mico-color-gray-6xdark) !important; }

.hover-bg-gray-7xdark:hover { background-color: var(--mico-color-gray-7xdark) !important; }

.hover-bg-gray-8xdark:hover { background-color: var(--mico-color-gray-8xdark) !important; }

/* Black Color Variations */

.hover-bg-black:hover { background-color: var(--mico-color-black) !important; }

.hover-bg-black-light:hover { background-color: var(--mico-color-black-light) !important; }

.hover-bg-black-2xlight:hover { background-color: var(--mico-color-black-2xlight) !important; }

.hover-bg-black-3xlight:hover { background-color: var(--mico-color-black-3xlight) !important; }

.hover-bg-black-4xlight:hover { background-color: var(--mico-color-black-4xlight) !important; }

.hover-bg-black-5xlight:hover { background-color: var(--mico-color-black-5xlight) !important; }

.hover-bg-black-6xlight:hover { background-color: var(--mico-color-black-6xlight) !important; }

.hover-bg-black-7xlight:hover { background-color: var(--mico-color-black-7xlight) !important; }

.hover-bg-black-8xlight:hover { background-color: var(--mico-color-black-8xlight) !important; }

.hover-bg-black-dark:hover { background-color: var(--mico-color-black-dark) !important; }

.hover-bg-black-2xdark:hover { background-color: var(--mico-color-black-2xdark) !important; }

.hover-bg-black-3xdark:hover { background-color: var(--mico-color-black-3xdark) !important; }

.hover-bg-black-4xdark:hover { background-color: var(--mico-color-black-4xdark) !important; }

.hover-bg-black-5xdark:hover { background-color: var(--mico-color-black-5xdark) !important; }

.hover-bg-black-6xdark:hover { background-color: var(--mico-color-black-6xdark) !important; }

.hover-bg-black-7xdark:hover { background-color: var(--mico-color-black-7xdark) !important; }

.hover-bg-black-8xdark:hover { background-color: var(--mico-color-black-8xdark) !important; }

/* White Color Variations */

.hover-bg-white:hover { background-color: var(--mico-color-white) !important; }

.hover-bg-white-light:hover { background-color: var(--mico-color-white-light) !important; }

.hover-bg-white-2xlight:hover { background-color: var(--mico-color-white-2xlight) !important; }

.hover-bg-white-3xlight:hover { background-color: var(--mico-color-white-3xlight) !important; }

.hover-bg-white-4xlight:hover { background-color: var(--mico-color-white-4xlight) !important; }

.hover-bg-white-5xlight:hover { background-color: var(--mico-color-white-5xlight) !important; }

.hover-bg-white-6xlight:hover { background-color: var(--mico-color-white-6xlight) !important; }

.hover-bg-white-7xlight:hover { background-color: var(--mico-color-white-7xlight) !important; }

.hover-bg-white-8xlight:hover { background-color: var(--mico-color-white-8xlight) !important; }

.hover-bg-white-dark:hover { background-color: var(--mico-color-white-dark) !important; }

.hover-bg-white-2xdark:hover { background-color: var(--mico-color-white-2xdark) !important; }

.hover-bg-white-3xdark:hover { background-color: var(--mico-color-white-3xdark) !important; }

.hover-bg-white-4xdark:hover { background-color: var(--mico-color-white-4xdark) !important; }

.hover-bg-white-5xdark:hover { background-color: var(--mico-color-white-5xdark) !important; }

.hover-bg-white-6xdark:hover { background-color: var(--mico-color-white-6xdark) !important; }

.hover-bg-white-7xdark:hover { background-color: var(--mico-color-white-7xdark) !important; }

.hover-bg-white-8xdark:hover { background-color: var(--mico-color-white-8xdark) !important; }

/* ---------- Creative Transparency Variations ---------- */

.hover-bg-black-10p:hover { background-color: var(--mico-color-black-whisper) !important; }

.hover-bg-black-20p:hover { background-color: var(--mico-color-black-20p) !important; }

.hover-bg-black-30p:hover { background-color: var(--mico-color-black-30p) !important; }

.hover-bg-black-40p:hover { background-color: var(--mico-color-black-40p) !important; }

.hover-bg-black-50p:hover { background-color: var(--mico-color-black-50p) !important; }

.hover-bg-black-60p:hover { background-color: var(--mico-color-black-60p) !important; }

.hover-bg-black-70p:hover { background-color: var(--mico-color-black-70p) !important; }

.hover-bg-black-80p:hover { background-color: var(--mico-color-black-80p) !important; }

.hover-bg-black-90p:hover { background-color: var(--mico-color-black-90p) !important; }

.hover-bg-black-90p:hover { background-color: var(--mico-color-black-100p) !important; }

.hover-bg-white-10p:hover { background-color: var(--mico-color-white-10) !important; }

.hover-bg-white-20p:hover { background-color: var(--mico-color-white-20p) !important; }

.hover-bg-white-30p:hover { background-color: var(--mico-color-white-30p) !important; }

.hover-bg-white-40p:hover { background-color: var(--mico-color-white-40p) !important; }

.hover-bg-white-50p:hover { background-color: var(--mico-color-white-50p) !important; }

.hover-bg-white-60p:hover { background-color: var(--mico-color-white-60p) !important; }

.hover-bg-white-70p:hover { background-color: var(--mico-color-white-70p) !important; }

.hover-bg-white-80p:hover { background-color: var(--mico-color-white-80p) !important; }

.hover-bg-white-90p:hover { background-color: var(--mico-color-white-90p) !important; }

.hover-bg-white-100p:hover { background-color: var(--mico-color-white-100p) !important; }

/* ---------- State Colors ---------- */

.hover-bg-success:hover { background-color: var(--mico-color-success) !important; }

.hover-bg-warning:hover { background-color: var(--mico-color-warning) !important; }

.hover-bg-error:hover { background-color: var(--mico-color-error) !important; }

.hover-bg-info:hover { background-color: var(--mico-color-info) !important; }

/**
 * ===================================================================
 * TEXT COLOR HOVER STATES (FULL VARIATIONS)
 *
 * These utilities apply text colors on hover, covering all tints and
 * shades for the primary, secondary, and accent color palettes.
 * ===================================================================
 */

/* =================================
 * Primary Color Hovers
 * ================================= */

/* Base Color */

.hover-text-primary:hover { color: var(--mico-color-primary) !important; }

/* Tints (Lighter) */

.hover-text-primary-light:hover { color: var(--mico-color-primary-light) !important; }

.hover-text-primary-2xlight:hover { color: var(--mico-color-primary-2xlight) !important; }

.hover-text-primary-3xlight:hover { color: var(--mico-color-primary-3xlight) !important; }

.hover-text-primary-4xlight:hover { color: var(--mico-color-primary-4xlight) !important; }

.hover-text-primary-5xlight:hover { color: var(--mico-color-primary-5xlight) !important; }

.hover-text-primary-6xlight:hover { color: var(--mico-color-primary-6xlight) !important; }

.hover-text-primary-7xlight:hover { color: var(--mico-color-primary-7xlight) !important; }

.hover-text-primary-8xlight:hover { color: var(--mico-color-primary-8xlight) !important; }

/* Shades (Darker) */

.hover-text-primary-dark:hover { color: var(--mico-color-primary-dark) !important; }

.hover-text-primary-2xdark:hover { color: var(--mico-color-primary-2xdark) !important; }

.hover-text-primary-3xdark:hover { color: var(--mico-color-primary-3xdark) !important; }

.hover-text-primary-4xdark:hover { color: var(--mico-color-primary-4xdark) !important; }

.hover-text-primary-5xdark:hover { color: var(--mico-color-primary-5xdark) !important; }

.hover-text-primary-6xdark:hover { color: var(--mico-color-primary-6xdark) !important; }

.hover-text-primary-7xdark:hover { color: var(--mico-color-primary-7xdark) !important; }

.hover-text-primary-8xdark:hover { color: var(--mico-color-primary-8xdark) !important; }

/* =================================
 * Secondary Color Hovers
 * ================================= */

/* Base Color */

.hover-text-secondary:hover { color: var(--mico-color-secondary) !important; }

/* Tints (Lighter) */

.hover-text-secondary-light:hover { color: var(--mico-color-secondary-light) !important; }

.hover-text-secondary-2xlight:hover { color: var(--mico-color-secondary-2xlight) !important; }

.hover-text-secondary-3xlight:hover { color: var(--mico-color-secondary-3xlight) !important; }

.hover-text-secondary-4xlight:hover { color: var(--mico-color-secondary-4xlight) !important; }

.hover-text-secondary-5xlight:hover { color: var(--mico-color-secondary-5xlight) !important; }

.hover-text-secondary-6xlight:hover { color: var(--mico-color-secondary-6xlight) !important; }

.hover-text-secondary-7xlight:hover { color: var(--mico-color-secondary-7xlight) !important; }

.hover-text-secondary-8xlight:hover { color: var(--mico-color-secondary-8xlight) !important; }

/* Shades (Darker) */

.hover-text-secondary-dark:hover { color: var(--mico-color-secondary-dark) !important; }

.hover-text-secondary-2xdark:hover { color: var(--mico-color-secondary-2xdark) !important; }

.hover-text-secondary-3xdark:hover { color: var(--mico-color-secondary-3xdark) !important; }

.hover-text-secondary-4xdark:hover { color: var(--mico-color-secondary-4xdark) !important; }

.hover-text-secondary-5xdark:hover { color: var(--mico-color-secondary-5xdark) !important; }

.hover-text-secondary-6xdark:hover { color: var(--mico-color-secondary-6xdark) !important; }

.hover-text-secondary-7xdark:hover { color: var(--mico-color-secondary-7xdark) !important; }

.hover-text-secondary-8xdark:hover { color: var(--mico-color-secondary-8xdark) !important; }

/* =================================
 * Accent Color Hovers
 * ================================= */

/* Base Color */

.hover-text-accent:hover { color: var(--mico-color-accent) !important; }

/* Tints (Lighter) */

.hover-text-accent-light:hover { color: var(--mico-color-accent-light) !important; }

.hover-text-accent-2xlight:hover { color: var(--mico-color-accent-2xlight) !important; }

.hover-text-accent-3xlight:hover { color: var(--mico-color-accent-3xlight) !important; }

.hover-text-accent-4xlight:hover { color: var(--mico-color-accent-4xlight) !important; }

.hover-text-accent-5xlight:hover { color: var(--mico-color-accent-5xlight) !important; }

.hover-text-accent-6xlight:hover { color: var(--mico-color-accent-6xlight) !important; }

.hover-text-accent-7xlight:hover { color: var(--mico-color-accent-7xlight) !important; }

.hover-text-accent-8xlight:hover { color: var(--mico-color-accent-8xlight) !important; }

/* Shades (Darker) */

.hover-text-accent-dark:hover { color: var(--mico-color-accent-dark) !important; }

.hover-text-accent-2xdark:hover { color: var(--mico-color-accent-2xdark) !important; }

.hover-text-accent-3xdark:hover { color: var(--mico-color-accent-3xdark) !important; }

.hover-text-accent-4xdark:hover { color: var(--mico-color-accent-4xdark) !important; }

.hover-text-accent-5xdark:hover { color: var(--mico-color-accent-5xdark) !important; }

.hover-text-accent-6xdark:hover { color: var(--mico-color-accent-6xdark) !important; }

.hover-text-accent-7xdark:hover { color: var(--mico-color-accent-7xdark) !important; }

.hover-text-accent-8xdark:hover { color: var(--mico-color-accent-8xdark) !important; }

/* ========================================================================== */

/* FOCUS STATE UTILITIES                                                      */

/* ========================================================================== */

/**
 * BACKGROUND COLOR FOCUS STATES
 *
 * These utilities apply background colors on focus
 */

/* ---------- Brand Colors ---------- */

.focus-bg-primary:focus { background-color: var(--mico-color-primary) !important; }

.focus-bg-secondary:focus { background-color: var(--mico-color-secondary) !important; }

.focus-bg-accent:focus { background-color: var(--mico-color-accent) !important; }

/* ---------- Primary Color Variations ---------- */

/* Tints - Lighter variations */

.focus-bg-primary-light:focus { background-color: var(--mico-color-primary-light) !important; }

.focus-bg-primary-2xlight:focus { background-color: var(--mico-color-primary-2xlight) !important; }

.focus-bg-primary-3xlight:focus { background-color: var(--mico-color-primary-3xlight) !important; }

.focus-bg-primary-4xlight:focus { background-color: var(--mico-color-primary-4xlight) !important; }

.focus-bg-primary-5xlight:focus { background-color: var(--mico-color-primary-5xlight) !important; }

.focus-bg-primary-6xlight:focus { background-color: var(--mico-color-primary-6xlight) !important; }

.focus-bg-primary-7xlight:focus { background-color: var(--mico-color-primary-7xlight) !important; }

.focus-bg-primary-8xlight:focus { background-color: var(--mico-color-primary-8xlight) !important; }

/* Shades - Darker variations */

.focus-bg-primary-dark:focus { background-color: var(--mico-color-primary-dark) !important; }

.focus-bg-primary-2xdark:focus { background-color: var(--mico-color-primary-2xdark) !important; }

.focus-bg-primary-3xdark:focus { background-color: var(--mico-color-primary-3xdark) !important; }

.focus-bg-primary-4xdark:focus { background-color: var(--mico-color-primary-4xdark) !important; }

.focus-bg-primary-5xdark:focus { background-color: var(--mico-color-primary-5xdark) !important; }

.focus-bg-primary-6xdark:focus { background-color: var(--mico-color-primary-6xdark) !important; }

.focus-bg-primary-7xdark:focus { background-color: var(--mico-color-primary-7xdark) !important; }

.focus-bg-primary-8xdark:focus { background-color: var(--mico-color-primary-8xdark) !important; }

/* ---------- Secondary Color Variations ---------- */

/* Tints - Lighter variations */

.focus-bg-secondary-light:focus { background-color: var(--mico-color-secondary-light) !important; }

.focus-bg-secondary-2xlight:focus { background-color: var(--mico-color-secondary-2xlight) !important; }

.focus-bg-secondary-3xlight:focus { background-color: var(--mico-color-secondary-3xlight) !important; }

.focus-bg-secondary-4xlight:focus { background-color: var(--mico-color-secondary-4xlight) !important; }

.focus-bg-secondary-5xlight:focus { background-color: var(--mico-color-secondary-5xlight) !important; }

.focus-bg-secondary-6xlight:focus { background-color: var(--mico-color-secondary-6xlight) !important; }

.focus-bg-secondary-7xlight:focus { background-color: var(--mico-color-secondary-7xlight) !important; }

.focus-bg-secondary-8xlight:focus { background-color: var(--mico-color-secondary-8xlight) !important; }

/* Shades - Darker variations */

.focus-bg-secondary-dark:focus { background-color: var(--mico-color-secondary-dark) !important; }

.focus-bg-secondary-2xdark:focus { background-color: var(--mico-color-secondary-2xdark) !important; }

.focus-bg-secondary-3xdark:focus { background-color: var(--mico-color-secondary-3xdark) !important; }

.focus-bg-secondary-4xdark:focus { background-color: var(--mico-color-secondary-4xdark) !important; }

.focus-bg-secondary-5xdark:focus { background-color: var(--mico-color-secondary-5xdark) !important; }

.focus-bg-secondary-6xdark:focus { background-color: var(--mico-color-secondary-6xdark) !important; }

.focus-bg-secondary-7xdark:focus { background-color: var(--mico-color-secondary-7xdark) !important; }

.focus-bg-secondary-8xdark:focus { background-color: var(--mico-color-secondary-8xdark) !important; }

/* ---------- Accent Color Variations ---------- */

/* Tints - Lighter variations */

.focus-bg-accent-light:focus { background-color: var(--mico-color-accent-light) !important; }

.focus-bg-accent-2xlight:focus { background-color: var(--mico-color-accent-2xlight) !important; }

.focus-bg-accent-3xlight:focus { background-color: var(--mico-color-accent-3xlight) !important; }

.focus-bg-accent-4xlight:focus { background-color: var(--mico-color-accent-4xlight) !important; }

.focus-bg-accent-5xlight:focus { background-color: var(--mico-color-accent-5xlight) !important; }

.focus-bg-accent-6xlight:focus { background-color: var(--mico-color-accent-6xlight) !important; }

.focus-bg-accent-7xlight:focus { background-color: var(--mico-color-accent-7xlight) !important; }

.focus-bg-accent-8xlight:focus { background-color: var(--mico-color-accent-8xlight) !important; }

/* Shades - Darker variations */

.focus-bg-accent-dark:focus { background-color: var(--mico-color-accent-dark) !important; }

.focus-bg-accent-2xdark:focus { background-color: var(--mico-color-accent-2xdark) !important; }

.focus-bg-accent-3xdark:focus { background-color: var(--mico-color-accent-3xdark) !important; }

.focus-bg-accent-4xdark:focus { background-color: var(--mico-color-accent-4xdark) !important; }

.focus-bg-accent-5xdark:focus { background-color: var(--mico-color-accent-5xdark) !important; }

.focus-bg-accent-6xdark:focus { background-color: var(--mico-color-accent-6xdark) !important; }

.focus-bg-accent-7xdark:focus { background-color: var(--mico-color-accent-7xdark) !important; }

.focus-bg-accent-8xdark:focus { background-color: var(--mico-color-accent-8xdark) !important; }

/* ---------- Grayscale ---------- */

.focus-bg-gray:focus { background-color: var(--mico-color-gray) !important; }

.focus-bg-gray-2xlight:focus { background-color: var(--mico-color-gray-2xlight) !important; }

.focus-bg-gray-3xlight:focus { background-color: var(--mico-color-gray-3xlight) !important; }

.focus-bg-gray-4xlight:focus { background-color: var(--mico-color-gray-4xlight) !important; }

.focus-bg-gray-5xlight:focus { background-color: var(--mico-color-gray-5xlight) !important; }

.focus-bg-gray-6xlight:focus { background-color: var(--mico-color-gray-6xlight) !important; }

.focus-bg-gray-7xlight:focus { background-color: var(--mico-color-gray-7xlight) !important; }

.focus-bg-gray-8xlight:focus { background-color: var(--mico-color-gray-8xlight) !important; }

/* Shades - Darker variations */

.focus-bg-gray-dark:focus { background-color: var(--mico-color-gray-dark) !important; }

.focus-bg-gray-2xdark:focus { background-color: var(--mico-color-gray-2xdark) !important; }

.focus-bg-gray-3xdark:focus { background-color: var(--mico-color-gray-3xdark) !important; }

.focus-bg-gray-4xdark:focus { background-color: var(--mico-color-gray-4xdark) !important; }

.focus-bg-gray-5xdark:focus { background-color: var(--mico-color-gray-5xdark) !important; }

.focus-bg-gray-6xdark:focus { background-color: var(--mico-color-gray-6xdark) !important; }

.focus-bg-gray-7xdark:focus { background-color: var(--mico-color-gray-7xdark) !important; }

.focus-bg-gray-8xdark:focus { background-color: var(--mico-color-gray-8xdark) !important; }

/* ---------- Black Scale ---------- */

.focus-bg-black:focus { background-color: var(--mico-color-black) !important; }

.focus-bg-black-light:focus { background-color: var(--mico-color-black-light) !important; }

.focus-bg-black-2xlight:focus { background-color: var(--mico-color-black-2xlight) !important; }

.focus-bg-black-3xlight:focus { background-color: var(--mico-color-black-3xlight) !important; }

.focus-bg-black-4xlight:focus { background-color: var(--mico-color-black-4xlight) !important; }

.focus-bg-black-5xlight:focus { background-color: var(--mico-color-black-5xlight) !important; }

.focus-bg-black-6xlight:focus { background-color: var(--mico-color-black-6xlight) !important; }

.focus-bg-black-7xlight:focus { background-color: var(--mico-color-black-7xlight) !important; }

.focus-bg-black-8xlight:focus { background-color: var(--mico-color-black-8xlight) !important; }

.focus-bg-black-dark:focus { background-color: var(--mico-color-black-dark) !important; }

.focus-bg-black-2xdark:focus { background-color: var(--mico-color-black-2xdark) !important; }

.focus-bg-black-3xdark:focus { background-color: var(--mico-color-black-3xdark) !important; }

.focus-bg-black-4xdark:focus { background-color: var(--mico-color-black-4xdark) !important; }

.focus-bg-black-5xdark:focus { background-color: var(--mico-color-black-5xdark) !important; }

.focus-bg-black-6xdark:focus { background-color: var(--mico-color-black-6xdark) !important; }

.focus-bg-black-7xdark:focus { background-color: var(--mico-color-black-7xdark) !important; }

.focus-bg-black-8xdark:focus { background-color: var(--mico-color-black-8xdark) !important; }

/* White Color Variations */

.focus-bg-white:focus { background-color: var(--mico-color-white) !important; }

.focus-bg-white-light:focus { background-color: var(--mico-color-white-light) !important; }

.focus-bg-white-2xlight:focus { background-color: var(--mico-color-white-2xlight) !important; }

.focus-bg-white-3xlight:focus { background-color: var(--mico-color-white-3xlight) !important; }

.focus-bg-white-4xlight:focus { background-color: var(--mico-color-white-4xlight) !important; }

.focus-bg-white-5xlight:focus { background-color: var(--mico-color-white-5xlight) !important; }

.focus-bg-white-6xlight:focus { background-color: var(--mico-color-white-6xlight) !important; }

.focus-bg-white-7xlight:focus { background-color: var(--mico-color-white-7xlight) !important; }

.focus-bg-white-8xlight:focus { background-color: var(--mico-color-white-8xlight) !important; }

.focus-bg-white-dark:focus { background-color: var(--mico-color-white-dark) !important; }

.focus-bg-white-2xdark:focus { background-color: var(--mico-color-white-2xdark) !important; }

.focus-bg-white-3xdark:focus { background-color: var(--mico-color-white-3xdark) !important; }

.focus-bg-white-4xdark:focus { background-color: var(--mico-color-white-4xdark) !important; }

.focus-bg-white-5xdark:focus { background-color: var(--mico-color-white-5xdark) !important; }

.focus-bg-white-6xdark:focus { background-color: var(--mico-color-white-6xdark) !important; }

.focus-bg-white-7xdark:focus { background-color: var(--mico-color-white-7xdark) !important; }

.focus-bg-white-8xdark:focus { background-color: var(--mico-color-white-8xdark) !important; }

/* ---------- Transparency ---------- */

.focus-bg-black-10p:focus { background-color: var(--mico-color-black-10p) !important; }

.focus-bg-black-20p:focus { background-color: var(--mico-color-black-20p) !important; }

.focus-bg-black-30p:focus { background-color: var(--mico-color-black-30p) !important; }

.focus-bg-black-40p:focus { background-color: var(--mico-color-black-40p) !important; }

.focus-bg-black-50p:focus { background-color: var(--mico-color-black-50p) !important; }

.focus-bg-black-60p:focus { background-color: var(--mico-color-black-60p) !important; }

.focus-bg-black-70p:focus { background-color: var(--mico-color-black-70p) !important; }

.focus-bg-black-80p:focus { background-color: var(--mico-color-black-80p) !important; }

.focus-bg-black-90p:focus { background-color: var(--mico-color-black-90p) !important; }

.focus-bg-black-100p:focus { background-color: var(--mico-color-black-100p) !important; }

.focus-bg-white-10p:focus { background-color: var(--mico-color-white-10) !important; }

.focus-bg-white-20p:focus { background-color: var(--mico-color-white-20p) !important; }

.focus-bg-white-30p:focus { background-color: var(--mico-color-white-30p) !important; }

.focus-bg-white-40p:focus { background-color: var(--mico-color-white-40p) !important; }

.focus-bg-white-50p:focus { background-color: var(--mico-color-white-50p) !important; }

.focus-bg-white-60p:focus { background-color: var(--mico-color-white-60p) !important; }

.focus-bg-white-70p:focus { background-color: var(--mico-color-white-70p) !important; }

.focus-bg-white-80p:focus { background-color: var(--mico-color-white-80p) !important; }

.focus-bg-white-90p:focus { background-color: var(--mico-color-white-90p) !important; }

.focus-bg-white-100p:focus { background-color: var(--mico-color-white-100p) !important; }

/* ---------- State Colors ---------- */

.focus-bg-success:focus { background-color: var(--mico-color-success) !important; }

.focus-bg-warning:focus { background-color: var(--mico-color-warning) !important; }

.focus-bg-error:focus { background-color: var(--mico-color-error) !important; }

.focus-bg-info:focus { background-color: var(--mico-color-info) !important; }

/**
 * TEXT COLOR FOCUS STATES
 *
 * These utilities apply text colors on focus
 */

.focus-text-primary:focus { color: var(--mico-color-primary) !important; }

.focus-text-secondary:focus { color: var(--mico-color-secondary) !important; }

.focus-text-accent:focus { color: var(--mico-color-accent) !important; }

/* ========================================================================== */

/* ACTIVE STATE UTILITIES                                                     */

/* ========================================================================== */

/**
 * BACKGROUND COLOR ACTIVE STATES
 *
 * These utilities apply background colors on active (pressed) state
 */

/* ---------- Brand Colors ---------- */

.active-bg-primary:active { background-color: var(--mico-color-primary) !important; }

.active-bg-secondary:active { background-color: var(--mico-color-secondary) !important; }

.active-bg-accent:active { background-color: var(--mico-color-accent) !important; }

/* ---------- Primary Color Variations ---------- */

/* Tints - Lighter variations */

.active-bg-primary-light:active { background-color: var(--mico-color-primary-light) !important; }

.active-bg-primary-2xlight:active { background-color: var(--mico-color-primary-2xlight) !important; }

.active-bg-primary-3xlight:active { background-color: var(--mico-color-primary-3xlight) !important; }

.active-bg-primary-4xlight:active { background-color: var(--mico-color-primary-4xlight) !important; }

.active-bg-primary-5xlight:active { background-color: var(--mico-color-primary-5xlight) !important; }

.active-bg-primary-6xlight:active { background-color: var(--mico-color-primary-6xlight) !important; }

.active-bg-primary-7xlight:active { background-color: var(--mico-color-primary-7xlight) !important; }

.active-bg-primary-8xlight:active { background-color: var(--mico-color-primary-8xlight) !important; }

/* Shades - Darker variations */

.active-bg-primary-dark:active { background-color: var(--mico-color-primary-dark) !important; }

.active-bg-primary-2xdark:active { background-color: var(--mico-color-primary-2xdark) !important; }

.active-bg-primary-3xdark:active { background-color: var(--mico-color-primary-3xdark) !important; }

.active-bg-primary-4xdark:active { background-color: var(--mico-color-primary-4xdark) !important; }

.active-bg-primary-5xdark:active { background-color: var(--mico-color-primary-5xdark) !important; }

.active-bg-primary-6xdark:active { background-color: var(--mico-color-primary-6xdark) !important; }

.active-bg-primary-7xdark:active { background-color: var(--mico-color-primary-7xdark) !important; }

.active-bg-primary-8xdark:active { background-color: var(--mico-color-primary-8xdark) !important; }

/* ---------- Secondary Color Variations ---------- */

/* Tints - Lighter variations */

.active-bg-secondary-light:active { background-color: var(--mico-color-secondary-light) !important; }

.active-bg-secondary-2xlight:active { background-color: var(--mico-color-secondary-2xlight) !important; }

.active-bg-secondary-3xlight:active { background-color: var(--mico-color-secondary-3xlight) !important; }

.active-bg-secondary-4xlight:active { background-color: var(--mico-color-secondary-4xlight) !important; }

.active-bg-secondary-5xlight:active { background-color: var(--mico-color-secondary-5xlight) !important; }

.active-bg-secondary-6xlight:active { background-color: var(--mico-color-secondary-6xlight) !important; }

.active-bg-secondary-7xlight:active { background-color: var(--mico-color-secondary-7xlight) !important; }

.active-bg-secondary-8xlight:active { background-color: var(--mico-color-secondary-8xlight) !important; }

/* Shades - Darker variations */

.active-bg-secondary-dark:active { background-color: var(--mico-color-secondary-dark) !important; }

.active-bg-secondary-2xdark:active { background-color: var(--mico-color-secondary-2xdark) !important; }

.active-bg-secondary-3xdark:active { background-color: var(--mico-color-secondary-3xdark) !important; }

.active-bg-secondary-4xdark:active { background-color: var(--mico-color-secondary-4xdark) !important; }

.active-bg-secondary-5xdark:active { background-color: var(--mico-color-secondary-5xdark) !important; }

.active-bg-secondary-6xdark:active { background-color: var(--mico-color-secondary-6xdark) !important; }

.active-bg-secondary-7xdark:active { background-color: var(--mico-color-secondary-7xdark) !important; }

.active-bg-secondary-8xdark:active { background-color: var(--mico-color-secondary-8xdark) !important; }

/* ---------- Accent Color Variations ---------- */

/* Tints - Lighter variations */

.active-bg-accent-light:active { background-color: var(--mico-color-accent-light) !important; }

.active-bg-accent-2xlight:active { background-color: var(--mico-color-accent-2xlight) !important; }

.active-bg-accent-3xlight:active { background-color: var(--mico-color-accent-3xlight) !important; }

.active-bg-accent-4xlight:active { background-color: var(--mico-color-accent-4xlight) !important; }

.active-bg-accent-5xlight:active { background-color: var(--mico-color-accent-5xlight) !important; }

.active-bg-accent-6xlight:active { background-color: var(--mico-color-accent-6xlight) !important; }

.active-bg-accent-7xlight:active { background-color: var(--mico-color-accent-7xlight) !important; }

.active-bg-accent-8xlight:active { background-color: var(--mico-color-accent-8xlight) !important; }

/* Shades - Darker variations */

.active-bg-accent-dark:active { background-color: var(--mico-color-accent-dark) !important; }

.active-bg-accent-2xdark:active { background-color: var(--mico-color-accent-2xdark) !important; }

.active-bg-accent-3xdark:active { background-color: var(--mico-color-accent-3xdark) !important; }

.active-bg-accent-4xdark:active { background-color: var(--mico-color-accent-4xdark) !important; }

.active-bg-accent-5xdark:active { background-color: var(--mico-color-accent-5xdark) !important; }

.active-bg-accent-6xdark:active { background-color: var(--mico-color-accent-6xdark) !important; }

.active-bg-accent-7xdark:active { background-color: var(--mico-color-accent-7xdark) !important; }

.active-bg-accent-8xdark:active { background-color: var(--mico-color-accent-8xdark) !important; }

/* ========================================================================== */

/* BORDER STATE UTILITIES                                                    */

/* ========================================================================== */

/**
 * Border Color States
 *
 * These utilities change border colors on hover, focus, and active states.
 */

.hover-border-none:hover { border-color: var(--mico-value-none) !important; }

.hover-border-0p:hover { border-color: var(--mico-value-none) !important; }

/* Hover Border Colors */

.hover-border-primary:hover { border-color: var(--mico-color-primary) !important; }

.hover-border-primary-light:hover { border-color: var(--mico-color-primary-light) !important; }

.hover-border-primary-2xlight:hover { border-color: var(--mico-color-primary-2xlight) !important; }

.hover-border-primary-3xlight:hover { border-color: var(--mico-color-primary-3xlight) !important; }

.hover-border-primary-4xlight:hover { border-color: var(--mico-color-primary-4xlight) !important; }

.hover-border-primary-5xlight:hover { border-color: var(--mico-color-primary-5xlight) !important; }

.hover-border-primary-6xlight:hover { border-color: var(--mico-color-primary-6xlight) !important; }

.hover-border-primary-7xlight:hover { border-color: var(--mico-color-primary-7xlight) !important; }

.hover-border-primary-8xlight:hover { border-color: var(--mico-color-primary-8xlight) !important; }

.hover-border-primary-dark:hover { border-color: var(--mico-color-primary-dark) !important; }

.hover-border-primary-2xdark:hover { border-color: var(--mico-color-primary-2xdark) !important; }

.hover-border-primary-3xdark:hover { border-color: var(--mico-color-primary-3xdark) !important; }

.hover-border-primary-4xdark:hover { border-color: var(--mico-color-primary-4xdark) !important; }

.hover-border-primary-5xdark:hover { border-color: var(--mico-color-primary-5xdark) !important; }

.hover-border-primary-6xdark:hover { border-color: var(--mico-color-primary-6xdark) !important; }

.hover-border-primary-7xdark:hover { border-color: var(--mico-color-primary-7xdark) !important; }

.hover-border-primary-8xdark:hover { border-color: var(--mico-color-primary-8xdark) !important; }

.hover-border-secondary:hover { border-color: var(--mico-color-secondary) !important; }

.hover-border-secondary-light:hover { border-color: var(--mico-color-secondary-light) !important; }

.hover-border-secondary-2xlight:hover { border-color: var(--mico-color-secondary-2xlight) !important; }

.hover-border-secondary-3xlight:hover { border-color: var(--mico-color-secondary-3xlight) !important; }

.hover-border-secondary-4xlight:hover { border-color: var(--mico-color-secondary-4xlight) !important; }

.hover-border-secondary-5xlight:hover { border-color: var(--mico-color-secondary-5xlight) !important; }

.hover-border-secondary-6xlight:hover { border-color: var(--mico-color-secondary-6xlight) !important; }

.hover-border-secondary-7xlight:hover { border-color: var(--mico-color-secondary-7xlight) !important; }

.hover-border-secondary-8xlight:hover { border-color: var(--mico-color-secondary-8xlight) !important; }

.hover-border-secondary-dark:hover { border-color: var(--mico-color-secondary-dark) !important; }

.hover-border-secondary-2xdark:hover { border-color: var(--mico-color-secondary-2xdark) !important; }

.hover-border-secondary-3xdark:hover { border-color: var(--mico-color-secondary-3xdark) !important; }

.hover-border-secondary-4xdark:hover { border-color: var(--mico-color-secondary-4xdark) !important; }

.hover-border-secondary-5xdark:hover { border-color: var(--mico-color-secondary-5xdark) !important; }

.hover-border-secondary-6xdark:hover { border-color: var(--mico-color-secondary-6xdark) !important; }

.hover-border-secondary-7xdark:hover { border-color: var(--mico-color-secondary-7xdark) !important; }

.hover-border-secondary-8xdark:hover { border-color: var(--mico-color-secondary-8xdark) !important; }

.hover-border-accent:hover { border-color: var(--mico-color-accent) !important; }

.hover-border-accent-light:hover { border-color: var(--mico-color-accent-light) !important; }

.hover-border-accent-2xlight:hover { border-color: var(--mico-color-accent-2xlight) !important; }

.hover-border-accent-3xlight:hover { border-color: var(--mico-color-accent-3xlight) !important; }

.hover-border-accent-4xlight:hover { border-color: var(--mico-color-accent-4xlight) !important; }

.hover-border-accent-5xlight:hover { border-color: var(--mico-color-accent-5xlight) !important; }

.hover-border-accent-6xlight:hover { border-color: var(--mico-color-accent-6xlight) !important; }

.hover-border-accent-7xlight:hover { border-color: var(--mico-color-accent-7xlight) !important; }

.hover-border-accent-8xlight:hover { border-color: var(--mico-color-accent-8xlight) !important; }

.hover-border-accent-dark:hover { border-color: var(--mico-color-accent-dark) !important; }

.hover-border-accent-2xdark:hover { border-color: var(--mico-color-accent-2xdark) !important; }

.hover-border-accent-3xdark:hover { border-color: var(--mico-color-accent-3xdark) !important; }

.hover-border-accent-4xdark:hover { border-color: var(--mico-color-accent-4xdark) !important; }

.hover-border-accent-5xdark:hover { border-color: var(--mico-color-accent-5xdark) !important; }

.hover-border-accent-6xdark:hover { border-color: var(--mico-color-accent-6xdark) !important; }

.hover-border-accent-7xdark:hover { border-color: var(--mico-color-accent-7xdark) !important; }

.hover-border-accent-8xdark:hover { border-color: var(--mico-color-accent-8xdark) !important; }

.hover-border-success:hover { border-color: var(--mico-color-success) !important; }

.hover-border-error:hover { border-color: var(--mico-color-error) !important; }

.hover-border-warning:hover { border-color: var(--mico-color-warning) !important; }

.hover-border-info:hover { border-color: var(--mico-color-info) !important; }

/* Gray Border Colors */

.hover-border-gray:hover { border-color: var(--mico-color-gray) !important; }

.hover-border-gray-light:hover { border-color: var(--mico-color-gray-light) !important; }

.hover-border-gray-2xlight:hover { border-color: var(--mico-color-gray-2xlight) !important; }

.hover-border-gray-3xlight:hover { border-color: var(--mico-color-gray-3xlight) !important; }

.hover-border-gray-4xlight:hover { border-color: var(--mico-color-gray-4xlight) !important; }

.hover-border-gray-5xlight:hover { border-color: var(--mico-color-gray-5xlight) !important; }

.hover-border-gray-6xlight:hover { border-color: var(--mico-color-gray-6xlight) !important; }

.hover-border-gray-7xlight:hover { border-color: var(--mico-color-gray-7xlight) !important; }

.hover-border-gray-8xlight:hover { border-color: var(--mico-color-gray-8xlight) !important; }

.hover-border-gray-dark:hover { border-color: var(--mico-color-gray-dark) !important; }

.hover-border-gray-2xdark:hover { border-color: var(--mico-color-gray-2xdark) !important; }

.hover-border-gray-3xdark:hover { border-color: var(--mico-color-gray-3xdark) !important; }

.hover-border-gray-4xdark:hover { border-color: var(--mico-color-gray-4xdark) !important; }

.hover-border-gray-5xdark:hover { border-color: var(--mico-color-gray-5xdark) !important; }

.hover-border-gray-6xdark:hover { border-color: var(--mico-color-gray-6xdark) !important; }

.hover-border-gray-7xdark:hover { border-color: var(--mico-color-gray-7xdark) !important; }

.hover-border-gray-8xdark:hover { border-color: var(--mico-color-gray-8xdark) !important; }

/* Focus Border Colors */

.focus-border-primary:focus { border-color: var(--mico-color-primary) !important; }

.focus-border-secondary:focus { border-color: var(--mico-color-secondary) !important; }

.focus-border-accent:focus { border-color: var(--mico-color-accent) !important; }

.focus-border-success:focus { border-color: var(--mico-color-success) !important; }

.focus-border-error:focus { border-color: var(--mico-color-error) !important; }

.focus-border-warning:focus { border-color: var(--mico-color-warning) !important; }

.focus-border-info:focus { border-color: var(--mico-color-info) !important; }

/* Active Border Colors */

.active-border-primary:active { border-color: var(--mico-color-primary-2xdark) !important; }

.active-border-secondary:active { border-color: var(--mico-color-secondary-2xdark) !important; }

.active-border-accent:active { border-color: var(--mico-color-accent-2xdark) !important; }

/* ========================================================================== */

/* SHADOW STATE UTILITIES                                                    */

/* ========================================================================== */

/**
 * Shadow States
 *
 * These utilities change box shadows on hover, focus, and active states.
 */

/* Hover Shadows */

.hover-shadow-primary:hover { box-shadow: var(--mico-shadow-primary) !important; }

.hover-shadow-secondary:hover { box-shadow: var(--mico-shadow-secondary) !important; }

.hover-shadow-accent:hover { box-shadow: var(--mico-shadow-accent) !important; }

.hover-shadow-primary:hover { box-shadow: var(--mico-shadow-primary) !important; }

.hover-shadow-primary-light:hover { box-shadow: var(--mico-shadow-primary-light) !important; }

.hover-shadow-primary-2xlight:hover { box-shadow: var(--mico-shadow-primary-2xlight) !important; }

.hover-shadow-primary-3xlight:hover { box-shadow: var(--mico-shadow-primary-3xlight) !important; }

.hover-shadow-primary-4xlight:hover { box-shadow: var(--mico-shadow-primary-4xlight) !important; }

.hover-shadow-primary-5xlight:hover { box-shadow: var(--mico-shadow-primary-5xlight) !important; }

.hover-shadow-primary-6xlight:hover { box-shadow: var(--mico-shadow-primary-6xlight) !important; }

.hover-shadow-primary-7xlight:hover { box-shadow: var(--mico-shadow-primary-7xlight) !important; }

.hover-shadow-primary-8xlight:hover { box-shadow: var(--mico-shadow-primary-8xlight) !important; }

.hover-shadow-primary-dark:hover { box-shadow: var(--mico-shadow-primary-dark) !important; }

.hover-shadow-primary-2xdark:hover { box-shadow: var(--mico-shadow-primary-2xdark) !important; }

.hover-shadow-primary-3xdark:hover { box-shadow: var(--mico-shadow-primary-3xdark) !important; }

.hover-shadow-primary-4xdark:hover { box-shadow: var(--mico-shadow-primary-4xdark) !important; }

.hover-shadow-primary-5xdark:hover { box-shadow: var(--mico-shadow-primary-5xdark) !important; }

.hover-shadow-primary-6xdark:hover { box-shadow: var(--mico-shadow-primary-6xdark) !important; }

.hover-shadow-primary-7xdark:hover { box-shadow: var(--mico-shadow-primary-7xdark) !important; }

.hover-shadow-primary-8xdark:hover { box-shadow: var(--mico-shadow-primary-8xdark) !important; }

.hover-shadow-secondary:hover { box-shadow: var(--mico-shadow-secondary) !important; }

.hover-shadow-secondary-light:hover { box-shadow: var(--mico-shadow-secondary-light) !important; }

.hover-shadow-secondary-2xlight:hover { box-shadow: var(--mico-shadow-secondary-2xlight) !important; }

.hover-shadow-secondary-3xlight:hover { box-shadow: var(--mico-shadow-secondary-3xlight) !important; }

.hover-shadow-secondary-4xlight:hover { box-shadow: var(--mico-shadow-secondary-4xlight) !important; }

.hover-shadow-secondary-5xlight:hover { box-shadow: var(--mico-shadow-secondary-5xlight) !important; }

.hover-shadow-secondary-6xlight:hover { box-shadow: var(--mico-shadow-secondary-6xlight) !important; }

.hover-shadow-secondary-7xlight:hover { box-shadow: var(--mico-shadow-secondary-7xlight) !important; }

.hover-shadow-secondary-8xlight:hover { box-shadow: var(--mico-shadow-secondary-8xlight) !important; }

.hover-shadow-secondary-dark:hover { box-shadow: var(--mico-shadow-secondary-dark) !important; }

.hover-shadow-secondary-2xdark:hover { box-shadow: var(--mico-shadow-secondary-2xdark) !important; }

.hover-shadow-secondary-3xdark:hover { box-shadow: var(--mico-shadow-secondary-3xdark) !important; }

.hover-shadow-secondary-4xdark:hover { box-shadow: var(--mico-shadow-secondary-4xdark) !important; }

.hover-shadow-secondary-5xdark:hover { box-shadow: var(--mico-shadow-secondary-5xdark) !important; }

.hover-shadow-secondary-6xdark:hover { box-shadow: var(--mico-shadow-secondary-6xdark) !important; }

.hover-shadow-secondary-7xdark:hover { box-shadow: var(--mico-shadow-secondary-7xdark) !important; }

.hover-shadow-secondary-8xdark:hover { box-shadow: var(--mico-shadow-secondary-8xdark) !important; }

.hover-shadow-accent:hover { box-shadow: var(--mico-shadow-accent) !important; }

.hover-shadow-accent-light:hover { box-shadow: var(--mico-shadow-accent-light) !important; }

.hover-shadow-accent-2xlight:hover { box-shadow: var(--mico-shadow-accent-2xlight) !important; }

.hover-shadow-accent-3xlight:hover { box-shadow: var(--mico-shadow-accent-3xlight) !important; }

.hover-shadow-accent-4xlight:hover { box-shadow: var(--mico-shadow-accent-4xlight) !important; }

.hover-shadow-accent-5xlight:hover { box-shadow: var(--mico-shadow-accent-5xlight) !important; }

.hover-shadow-accent-6xlight:hover { box-shadow: var(--mico-shadow-accent-6xlight) !important; }

.hover-shadow-accent-7xlight:hover { box-shadow: var(--mico-shadow-accent-7xlight) !important; }

.hover-shadow-accent-8xlight:hover { box-shadow: var(--mico-shadow-accent-8xlight) !important; }

.hover-shadow-accent-dark:hover { box-shadow: var(--mico-shadow-accent-dark) !important; }

.hover-shadow-accent-2xdark:hover { box-shadow: var(--mico-shadow-accent-2xdark) !important; }

.hover-shadow-accent-3xdark:hover { box-shadow: var(--mico-shadow-accent-3xdark) !important; }

.hover-shadow-accent-4xdark:hover { box-shadow: var(--mico-shadow-accent-4xdark) !important; }

.hover-shadow-accent-5xdark:hover { box-shadow: var(--mico-shadow-accent-5xdark) !important; }

.hover-shadow-accent-6xdark:hover { box-shadow: var(--mico-shadow-accent-6xdark) !important; }

.hover-shadow-accent-7xdark:hover { box-shadow: var(--mico-shadow-accent-7xdark) !important; }

.hover-shadow-accent-8xdark:hover { box-shadow: var(--mico-shadow-accent-8xdark) !important; }

.hover-shadow-none:hover { box-shadow: var(--mico-value-none) !important; }

.hover-shadow-light:hover { box-shadow: var(--mico-shadow-light) !important; }

.hover-shadow-2xlight:hover { box-shadow: var(--mico-shadow-2xlight) !important; }

.hover-shadow-3xlight:hover { box-shadow: var(--mico-shadow-3xlight) !important; }

.hover-shadow-4xlight:hover { box-shadow: var(--mico-shadow-4xlight) !important; }

.hover-shadow-5xlight:hover { box-shadow: var(--mico-shadow-5xlight) !important; }

.hover-shadow-6xlight:hover { box-shadow: var(--mico-shadow-6xlight) !important; }

.hover-shadow-7xlight:hover { box-shadow: var(--mico-shadow-7xlight) !important; }

.hover-shadow-8xlight:hover { box-shadow: var(--mico-shadow-8xlight) !important; }

.hover-shadow-dark:hover { box-shadow: var(--mico-shadow-xs-dark) !important; }

.hover-shadow-2xdark:hover { box-shadow: var(--mico-shadow-2xdark) !important; }

.hover-shadow-3xdark:hover { box-shadow: var(--mico-shadow-3xdark) !important; }

.hover-shadow-4xdark:hover { box-shadow: var(--mico-shadow-4xdark) !important; }

.hover-shadow-5xdark:hover { box-shadow: var(--mico-shadow-5xdark) !important; }

.hover-shadow-6xdark:hover { box-shadow: var(--mico-shadow-6xdark) !important; }

.hover-shadow-7xdark:hover { box-shadow: var(--mico-shadow-7xdark) !important; }

.hover-shadow-8xdark:hover { box-shadow: var(--mico-shadow-8xdark) !important; }

/* ========================================================================== */

/* TRANSFORM STATE UTILITIES                                                 */

/* ========================================================================== */

/**
 * Transform States
 *
 * These utilities apply transforms on hover, focus, and active states.
 */

/* Hover Effects */

.hover-translate-up-xs:hover { transform: translateY(-1.8px); }

.hover-translate-up-sm:hover { transform: translateY(-2.5px); }

.hover-translate-up-md:hover { transform: translateY(-3.8px); }

.hover-translate-up-lg:hover { transform: translateY(-4.8px); }

.hover-translate-up-xl:hover { transform: translateY(-5.8px); }

.hover-translate-down-xs:hover { transform: translateY(1.8px); }

.hover-translate-down-sm:hover { transform: translateY(2.5px); }

.hover-translate-down-md:hover { transform: translateY(3.8px); }

.hover-translate-down-lg:hover { transform: translateY(4.8px); }

.hover-translate-down-xl:hover { transform: translateY(5.8px); }

.hover-scale-up-xs:hover { transform: scale(0.05); }

.hover-scale-up-sm:hover { transform: scale(1.05); }

.hover-scale-up-md:hover { transform: scale(2.05); }

.hover-scale-up-lg:hover { transform: scale(3.05); }

.hover-scale-up-xl:hover { transform: scale(4.05); }

.hover-scale-down-xs:hover { transform: scale(-0.05); }

.hover-scale-down-sm:hover { transform: scale(-1.05); }

.hover-scale-down-md:hover { transform: scale(-2.05); }

.hover-scale-down-lg:hover { transform: scale(-3.05); }

.hover-scale-down-xl:hover { transform: scale(-4.05); }

.hover-rotate-l-xs:hover { transform: rotate(-1deg); }

.hover-rotate-l-sm:hover { transform: rotate(-3deg); }

.hover-rotate-l-md:hover { transform: rotate(-6deg); }

.hover-rotate-l-lg:hover { transform: rotate(-9deg); }

.hover-rotate-l-xl:hover { transform: rotate(-12deg); }

.hover-rotate-r-xs:hover { transform: rotate(1deg); }

.hover-rotate-r-sm:hover { transform: rotate(3deg); }

.hover-rotate-r-md:hover { transform: rotate(6deg); }

.hover-rotate-r-lg:hover { transform: rotate(9deg); }

.hover-rotate-r-xl:hover { transform: rotate(12deg); }

.hover-rotate-l-25:hover { transform: rotate(-25deg); }

.hover-rotate-l-45:hover { transform: rotate(-45deg); }

.hover-rotate-l-90:hover { transform: rotate(-90deg); }

.hover-rotate-l-180:hover { transform: rotate(-180deg); }

.hover-rotate-l-360:hover { transform: rotate(-360deg); }

.hover-rotate-r-25:hover { transform: rotate(25deg); }

.hover-rotate-r-45:hover { transform: rotate(45deg); }

.hover-rotate-r-90:hover { transform: rotate(90deg); }

.hover-rotate-r-180:hover { transform: rotate(180deg); }

.hover-rotate-r-360:hover { transform: rotate(360deg); }

/* Focus Effects */

.focus-translate-up-xs:focus { transform: translateY(-1.8px); }

.focus-translate-up-sm:focus { transform: translateY(-2.5px); }

.focus-translate-up-md:focus { transform: translateY(-3.8px); }

.focus-translate-up-lg:focus { transform: translateY(-4.8px); }

.focus-translate-up-xl:focus { transform: translateY(-5.8px); }

.focus-translate-down-xs:focus { transform: translateY(1.8px); }

.focus-translate-down-sm:focus { transform: translateY(2.5px); }

.focus-translate-down-md:focus { transform: translateY(3.8px); }

.focus-translate-down-lg:focus { transform: translateY(4.8px); }

.focus-translate-down-xl:focus { transform: translateY(5.8px); }

.focus-scale-up-xs:focus { transform: scale(0.05); }

.focus-scale-up-sm:focus { transform: scale(1.05); }

.focus-scale-up-md:focus { transform: scale(2.05); }

.focus-scale-up-lg:focus { transform: scale(3.05); }

.focus-scale-up-xl:focus { transform: scale(4.05); }

.focus-scale-down-xs:focus { transform: scale(-0.05); }

.focus-scale-down-sm:focus { transform: scale(-1.05); }

.focus-scale-down-md:focus { transform: scale(-2.05); }

.focus-scale-down-lg:focus { transform: scale(-3.05); }

.focus-scale-down-xl:focus { transform: scale(-4.05); }

.focus-rotate-l-xs:focus { transform: rotate(-1deg); }

.focus-rotate-l-sm:focus { transform: rotate(-3deg); }

.focus-rotate-l-md:focus { transform: rotate(-6deg); }

.focus-rotate-l-lg:focus { transform: rotate(-9deg); }

.focus-rotate-l-xl:focus { transform: rotate(-12deg); }

.focus-rotate-r-xs:focus { transform: rotate(1deg); }

.focus-rotate-r-sm:focus { transform: rotate(3deg); }

.focus-rotate-r-md:focus { transform: rotate(6deg); }

.focus-rotate-r-lg:focus { transform: rotate(9deg); }

.focus-rotate-r-xl:focus { transform: rotate(12deg); }

.focus-rotate-l-25:focus { transform: rotate(-25deg); }

.focus-rotate-l-45:focus { transform: rotate(-45deg); }

.focus-rotate-l-90:focus { transform: rotate(-90deg); }

.focus-rotate-l-180:focus { transform: rotate(-180deg); }

.focus-rotate-l-360:focus { transform: rotate(-360deg); }

.focus-rotate-r-25:focus { transform: rotate(25deg); }

.focus-rotate-r-45:focus { transform: rotate(45deg); }

.focus-rotate-r-90:focus { transform: rotate(90deg); }

.focus-rotate-r-180:focus { transform: rotate(180deg); }

.focus-rotate-r-360:focus { transform: rotate(360deg); }

/* Active Effects */

.active-translate-up-xs:active { transform: translateY(-1.8px); }

.active-translate-up-sm:active { transform: translateY(-2.5px); }

.active-translate-up-md:active { transform: translateY(-3.8px); }

.active-translate-up-lg:active { transform: translateY(-4.8px); }

.active-translate-up-xl:active { transform: translateY(-5.8px); }

.active-translate-down-xs:active { transform: translateY(1.8px); }

.active-translate-down-sm:active { transform: translateY(2.5px); }

.active-translate-down-md:active { transform: translateY(3.8px); }

.active-translate-down-lg:active { transform: translateY(4.8px); }

.active-translate-down-xl:active { transform: translateY(5.8px); }

.active-scale-up-xs:active { transform: scale(0.05); }

.active-scale-up-sm:active { transform: scale(1.05); }

.active-scale-up-md:active { transform: scale(2.05); }

.active-scale-up-lg:active { transform: scale(3.05); }

.active-scale-up-xl:active { transform: scale(4.05); }

.active-scale-down-xs:active { transform: scale(-0.05); }

.active-scale-down-sm:active { transform: scale(-1.05); }

.active-scale-down-md:active { transform: scale(-2.05); }

.active-scale-down-lg:active { transform: scale(-3.05); }

.active-scale-down-xl:active { transform: scale(-4.05); }

.active-rotate-l-xs:active { transform: rotate(-1deg); }

.active-rotate-l-sm:active { transform: rotate(-3deg); }

.active-rotate-l-md:active { transform: rotate(-6deg); }

.active-rotate-l-lg:active { transform: rotate(-9deg); }

.active-rotate-l-xl:active { transform: rotate(-12deg); }

.active-rotate-r-xs:active { transform: rotate(1deg); }

.active-rotate-r-sm:active { transform: rotate(3deg); }

.active-rotate-r-md:active { transform: rotate(6deg); }

.active-rotate-r-lg:active { transform: rotate(9deg); }

.active-rotate-r-xl:active { transform: rotate(12deg); }

.active-rotate-l-25:active { transform: rotate(-25deg); }

.active-rotate-l-45:active { transform: rotate(-45deg); }

.active-rotate-l-90:active { transform: rotate(-90deg); }

.active-rotate-l-180:active { transform: rotate(-180deg); }

.active-rotate-l-360:active { transform: rotate(-360deg); }

.active-rotate-r-25:active { transform: rotate(25deg); }

.active-rotate-r-45:active { transform: rotate(45deg); }

.active-rotate-r-90:active { transform: rotate(90deg); }

.active-rotate-r-180:active { transform: rotate(180deg); }

.active-rotate-r-360:active { transform: rotate(360deg); }

/* ========================================================================== */

/* OPACITY STATE UTILITIES                                                   */

/* ========================================================================== */

/**
 * Opacity States
 *
 * These utilities change opacity on hover, focus, and active states.
 */

/* Hover Opacity */

.hover-opacity-0p,.hover-opacity-none:hover { opacity: 0 !important; }

.hover-opacity-10p:hover { opacity: 0.10 !important; }

.hover-opacity-20p:hover { opacity: 0.20 !important; }

.hover-opacity-30p:hover { opacity: 0.30 !important; }

.hover-opacity-40p:hover { opacity: 0.40 !important; }

.hover-opacity-50p:hover { opacity: 0.50 !important; }

.hover-opacity-60p:hover { opacity: 0.60 !important; }

.hover-opacity-70p:hover { opacity: 0.70 !important; }

.hover-opacity-80p:hover { opacity: 0.80 !important; }

.hover-opacity-90p:hover { opacity: 0.90 !important; }

.hover-opacity-100p:hover { opacity: 1 !important; }

/* Focus Opacity */

.focus-opacity-0p,.focus-opacity-none:focus { opacity: 0 !important; }

.focus-opacity-10p:focus { opacity: 0.10 !important; }

.focus-opacity-20p:focus { opacity: 0.20 !important; }

.focus-opacity-30p:focus { opacity: 0.30 !important; }

.focus-opacity-40p:focus { opacity: 0.40 !important; }

.focus-opacity-50p:focus { opacity: 0.50 !important; }

.focus-opacity-60p:focus { opacity: 0.60 !important; }

.focus-opacity-70p:focus { opacity: 0.70 !important; }

.focus-opacity-80p:focus { opacity: 0.80 !important; }

.focus-opacity-90p:focus { opacity: 0.90 !important; }

.focus-opacity-100p:focus { opacity: 1 !important; }

/* Active Opacity */

.active-opacity-0p,.active-opacity-none:active { opacity: 0 !important; }

.active-opacity-10p:active { opacity: 0.10 !important; }

.active-opacity-20p:active { opacity: 0.20 !important; }

.active-opacity-30p:active { opacity: 0.30 !important; }

.active-opacity-40p:active { opacity: 0.40 !important; }

.active-opacity-50p:active { opacity: 0.50 !important; }

.active-opacity-60p:active { opacity: 0.60 !important; }

.active-opacity-70p:active { opacity: 0.70 !important; }

.active-opacity-80p:active { opacity: 0.80 !important; }

.active-opacity-90p:active { opacity: 0.90 !important; }

.active-opacity-100p:active { opacity: 1 !important; }

/* ---------- State Colors ---------- */

.active-bg-success:active { background-color: var(--mico-color-success) !important; }

.active-bg-warning:active { background-color: var(--mico-color-warning) !important; }

.active-bg-error:active { background-color: var(--mico-color-error) !important; }

.active-bg-info:active { background-color: var(--mico-color-info) !important; }

/**
 * TEXT COLOR ACTIVE STATES
 *
 * These utilities apply text colors on active state
 */

.active-text-primary:active { color: var(--mico-color-primary) !important; }

.active-text-secondary:active { color: var(--mico-color-secondary) !important; }

.active-text-accent:active { color: var(--mico-color-accent) !important; }

/* ========================================================================== */

/* ADDITIONAL INTERACTIVE UTILITIES                                           */

/* ========================================================================== */

/**
 * OPACITY HOVER EFFECTS
 *
 * These utilities apply opacity changes on hover
 */

/**
 * FILTER HOVER EFFECTS
 *
 * These utilities apply filter effects on hover
 */

.hover-blur:hover { filter: blur(4px) !important; }

.hover-brightness-110:hover { filter: brightness(1.1) !important; }

.hover-brightness-125:hover { filter: brightness(1.25) !important; }

.hover-grayscale:hover { filter: grayscale(100%) !important; }

.hover-sepia:hover { filter: sepia(100%) !important; }

/* Complete hover effect for opacity, transforms*/

/* ========================================================================== */

/* USAGE EXAMPLES AND DOCUMENTATION                                           */

/* ========================================================================== */

/**
 * HOW TO USE INTERACTIVE STATE UTILITIES
 *
 * These utilities can be combined to create rich interactive experiences.
 * Here are some common patterns:
 *
 * 1. Basic hover effect for buttons:
 *    <button class="hover-bg-primary hover-text-white">Button</button>
 *
 * 2. Elevated card on hover:
 *    <div class="hover-elevate hover-bg-primary">Card content</div>
 *
 * 3. Interactive link:
 *    <a class="hover-text-primary focus-text-primary active-text-primary">Link</a>
 *
 * 4. Subtle image hover effect:
 *    <img class="hover-brightness-110 hover-scale-sm" src="image.jpg" alt="Image">
 *
 * 5. Button with multiple states:
 *    <button class="hover-bg-primary focus-bg-primary active-bg-primary">Button</button>
 */

/**
 * Mico CSS Framework - Animation & Motion Utilities
 *
 * This file provides a comprehensive animation engine with:
 * - Transition utilities for smooth property changes
 * - Scroll-triggered entrance animations
 * - Continuous animations for ongoing effects
 * - Interactive animations (ripple, typewriter)
 * - Animation control utilities
 *
 * USAGE:
 * Basic transitions: .transition-all, .transition-colors
 * Scroll animations: .animate-on-scroll .anim-fade-in
 * Continuous: .anim-pulse, .anim-subtle-bounce
 * Interactive: .btn-ripple, .anim-typewriter
 */

/* ========================================================================== */

/* TRANSITION UTILITIES                                                       */

/* ========================================================================== */

/**
 * Transition Property Utilities
 *
 * These utilities control which CSS properties are animated during transitions.
 * They provide smooth animations for interactive states like hover and focus.
 */

/* Property-specific transitions */

.transition-none {
  transition-property: var(--mico-value-none) !important;
}

.transition-all {
  transition-property: all !important;
  transition-duration: var(--mico-transition-duration-normal);
  transition-timing-function: var(--mico-ease-in-out);
  transition-delay: var(--mico-value-0);
}

.transition-colors {
  transition-property: background-color, border-color, color, fill, stroke, text-decoration-color !important;
  transition-duration: var(--mico-transition-duration-normal);
  transition-timing-function: var(--mico-ease-in-out);
  transition-delay: var(--mico-value-0);
}

.transition-opacity {
  transition-property: opacity !important;
  transition-duration: var(--mico-transition-duration-normal);
  transition-timing-function: var(--mico-ease-in-out);
  transition-delay: var(--mico-value-0);
}

.transition-transform {
  transition-property: transform !important;
  transition-duration: var(--mico-transition-duration-normal);
  transition-timing-function: var(--mico-ease-in-out);
  transition-delay: var(--mico-value-0);
}

.transition-shadow {
  transition-property: box-shadow, filter !important;
  transition-duration: var(--mico-transition-duration-normal);
  transition-timing-function: var(--mico-ease-in-out);
  transition-delay: var(--mico-value-0);
}

.transition-background {
  transition-property: background-color, background-image, background-position, background-size !important;
  transition-duration: var(--mico-transition-duration-normal);
  transition-timing-function: var(--mico-ease-in-out);
  transition-delay: var(--mico-value-0);
}

.transition-border {
  transition-property: border-color, border-width, border-style !important;
  transition-duration: var(--mico-transition-duration-normal);
  transition-timing-function: var(--mico-ease-in-out);
  transition-delay: var(--mico-value-0);
}

/**
 * Transition Duration Utilities
 *
 * These utilities override the default transition duration.
 */

.duration-0    { transition-duration: 0ms !important; }

.duration-75   { transition-duration: 75ms !important; }

.duration-100  { transition-duration: 100ms !important; }

.duration-150  { transition-duration: var(--mico-transition-duration-fast) !important; }

.duration-200  { transition-duration: 200ms !important; }

.duration-300  { transition-duration: var(--mico-transition-duration-normal) !important; }

.duration-500  { transition-duration: var(--mico-transition-duration-slow) !important; }

.duration-700  { transition-duration: 700ms !important; }

.duration-1000 { transition-duration: 1000ms !important; }

/**
 * Transition Timing Function Utilities
 *
 * These utilities control the acceleration curve of transitions.
 */

.ease-linear  { transition-timing-function: linear !important; }

.ease-in      { transition-timing-function: var(--mico-ease-in) !important; }

.ease-out     { transition-timing-function: var(--mico-ease-out) !important; }

.ease-in-out  { transition-timing-function: var(--mico-ease-in-out) !important; }

/**
 * Transition Delay Utilities
 *
 * These utilities add delays before transitions start.
 */

.delay-0    { transition-delay: 0ms !important; }

.delay-75   { transition-delay: 75ms !important; }

.delay-100  { transition-delay: 100ms !important; }

.delay-150  { transition-delay: 150ms !important; }

.delay-200  { transition-delay: 200ms !important; }

.delay-300  { transition-delay: 300ms !important; }

.delay-500  { transition-delay: 500ms !important; }

.delay-700  { transition-delay: 700ms !important; }

.delay-1000 { transition-delay: 1000ms !important; }

/* ========================================================================== */

/* ANIMATION ENGINE BASE & KEYFRAMES                                         */

/* ========================================================================== */

/**
 * Animation Engine Base Classes
 *
 * These classes provide the foundation for scroll-triggered animations.
 * Elements with .animate-on-scroll will be hidden initially and animated
 * when they come into view via JavaScript intersection observer.
 */

.animate-on-scroll {
  opacity: 0;
  transition: opacity var(--mico-duration-md) var(--mico-anim-default-timing),
  transform var(--mico-duration-md) var(--mico-anim-default-timing);
  will-change: opacity, transform;
}

.animate-on-scroll.is-visible {
  opacity: 1;
  transform: var(--mico-value-none); /* Reset initial transforms */
}

/* No-JS Fallback - Show all animations if JavaScript is disabled */

.no-js .animate-on-scroll {
  opacity: 1;
  transform: var(--mico-value-none);
}

/**
 * Animation Keyframes
 *
 * These keyframes define the actual animation movements.
 * They are applied to elements when the .is-visible class is added.
 */

/* Fade Animations */

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fadeInUp {
  from { opacity: 0; transform: translate3d(0, 40px, 0); }
  to { opacity: 1; transform: translate3d(0, 0, 0); }
}

@keyframes fadeInDown {
  from { opacity: 0; transform: translate3d(0, -40px, 0); }
  to { opacity: 1; transform: translate3d(0, 0, 0); }
}

@keyframes fadeInLeft {
  from { opacity: 0; transform: translate3d(-40px, 0, 0); }
  to { opacity: 1; transform: translate3d(0, 0, 0); }
}

@keyframes fadeInRight {
  from { opacity: 0; transform: translate3d(40px, 0, 0); }
  to { opacity: 1; transform: translate3d(0, 0, 0); }
}

/* Slide Animations */

@keyframes slideInUp {
  from { transform: translate3d(0, 100%, 0); opacity: 0; visibility: visible; }
  to { transform: translate3d(0, 0, 0); opacity: 1; }
}

@keyframes slideInDown {
  from { transform: translate3d(0, -100%, 0); opacity: 0; visibility: visible; }
  to { transform: translate3d(0, 0, 0); opacity: 1; }
}

@keyframes slideInLeft {
  from { transform: translate3d(-100%, 0, 0); opacity: 0; visibility: visible; }
  to { transform: translate3d(0, 0, 0); opacity: 1; }
}

@keyframes slideInRight {
  from { transform: translate3d(100%, 0, 0); opacity: 0; visibility: visible; }
  to { transform: translate3d(0, 0, 0); opacity: 1; }
}

/* Scale and Rotate Animations */

@keyframes scaleIn {
  from { opacity: 0; transform: scale3d(0.3, 0.3, 0.3); }
  to { opacity: 1; transform: scale3d(1, 1, 1); }
}

@keyframes rotateIn {
  from { opacity: 0; transform: rotate3d(0, 0, 1, -180deg); }
  to { opacity: 1; transform: rotate3d(0, 0, 1, 0deg); }
}

/* Continuous Animation Keyframes */

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.6; }
}

@keyframes subtleBounce {
  0%, 100% { transform: translateY(0); }
  40% { transform: translateY(-8px); }
  60% { transform: translateY(-4px); }
}

@keyframes subtleFloat {
  0% { transform: translateY(0px); }
  50% { transform: translateY(-10px); }
  100% { transform: translateY(0px); }
}

/* Interactive Animation Keyframes */

@keyframes ripple-effect {
  to { transform: scale(4); opacity: 0; }
}

@keyframes blink-caret {
  from, to { opacity: 1; }
  50% { opacity: 0; }
}

/* ========================================================================== */

/* SCROLL-TRIGGERED ANIMATION UTILITIES                                      */

/* ========================================================================== */

/**
 * Entrance Animation Classes
 *
 * These classes apply specific animations when the .is-visible class is added
 * by the JavaScript intersection observer. They must be combined with .animate-on-scroll.
 */

/* Fade Entrance Animations */

.anim-fade-in.is-visible { animation-name: fadeIn; }

.anim-fade-in-up.is-visible { animation-name: fadeInUp; }

.anim-fade-in-down.is-visible { animation-name: fadeInDown; }

.anim-fade-in-left.is-visible { animation-name: fadeInLeft; }

.anim-fade-in-right.is-visible { animation-name: fadeInRight; }

/* Slide Entrance Animations */

.anim-slide-in-up.is-visible { animation-name: slideInUp; }

.anim-slide-in-down.is-visible { animation-name: slideInDown; }

.anim-slide-in-left.is-visible { animation-name: slideInLeft; }

.anim-slide-in-right.is-visible { animation-name: slideInRight; }

/* Scale and Rotate Entrance Animations */

.anim-scale-in.is-visible { animation-name: scaleIn; }

.anim-rotate-in.is-visible { animation-name: rotateIn; }

/**
 * Common Properties for Entrance Animations
 *
 * These properties are applied to all entrance animations when they become visible.
 */

.animate-on-scroll[class*="anim-fade-in"].is-visible,
.animate-on-scroll[class*="anim-slide-in"].is-visible,
.animate-on-scroll.anim-scale-in.is-visible,
.animate-on-scroll.anim-rotate-in.is-visible {
  animation-duration: var(--mico-anim-default-duration);
  animation-timing-function: var(--mico-anim-default-timing);
  animation-fill-mode: var(--mico-anim-default-fill-mode);
}

/* VVVVVVVVVVVVV Needs to be Updated VVVVVVVVVVVVVVVVVVVVVVVVVV */

/* Fade Entrance Animations */

.anim-fade-in.is-visible { animation-name: fadeIn; }

.anim-fade-in-up.is-visible { animation-name: fadeInUp; }

.anim-fade-in-down.is-visible { animation-name: fadeInDown; }

.anim-fade-in-left.is-visible { animation-name: fadeInLeft; }

.anim-fade-in-right.is-visible { animation-name: fadeInRight; }

/* Slide Entrance Animations */

.anim-slide-in-up.is-visible { animation-name: slideInUp; }

.anim-slide-in-down.is-visible { animation-name: slideInDown; }

.anim-slide-in-left.is-visible { animation-name: slideInLeft; }

.anim-slide-in-right.is-visible { animation-name: slideInRight; }

/* Scale and Rotate Entrance Animations */

.anim-scale-in.is-visible { animation-name: scaleIn; }

.anim-rotate-in.is-visible { animation-name: rotateIn; }

/* Fade Entrance Animations */

.anim-fade-out.is-visible { animation-name: fadeOut; }

.anim-fade-out-up.is-visible { animation-name: fadeOutUp; }

.anim-fade-out-down.is-visible { animation-name: fadeOutDown; }

.anim-fade-out-left.is-visible { animation-name: fadeOutLeft; }

.anim-fade-out-right.is-visible { animation-name: fadeOutRight; }

/* Slide Entrance Animations */

.anim-slide-out-up.is-visible { animation-name: slideOutUp; }

.anim-slide-out-down.is-visible { animation-name: slideOutDown; }

.anim-slide-out-left.is-visible { animation-name: slideOutLeft; }

.anim-slide-out-right.is-visible { animation-name: slideOutRight; }

/* Scale and Rotate Entrance Animations */

.anim-scale-out.is-visible { animation-name: scaleOut; }

.anim-rotate-out.is-visible { animation-name: rotateOut; }

/* ========================================================================== */

/* CONTINUOUS ANIMATION UTILITIES                                            */

/* ========================================================================== */

/**
 * Continuous Animation Classes
 *
 * These animations run continuously and don't require JavaScript.
 * They can be applied directly to elements.
 */

/* Continuous Animations */

.anim-pulse {
  animation: pulse 2s infinite ease-in-out;
}

.anim-subtle-bounce {
  animation: subtleBounce 2.5s infinite ease-in-out;
}

.anim-subtle-float {
  animation: subtleFloat 5 s infinite ease-in-out;
}

/* Apply default duration to continuous animations if not overridden */

.anim-pulse,
.anim-subtle-bounce,
.anim-subtle-float {
  animation-duration: var(--mico-anim-default-duration);
}

/* ========================================================================== */

/* ANIMATION CONTROL UTILITIES                                               */

/* ========================================================================== */

/**
 * Animation Duration Controls
 *
 * These utilities override the default animation duration.
 */

.anim-duration-xs   { animation-duration: var(--mico-duration-xs) !important; }

.anim-duration-sm   { animation-duration: var(--mico-duration-sm) !important; }

.anim-duration-md   { animation-duration: var(--mico-duration-md) !important; }

.anim-duration-lg   { animation-duration: var(--mico-duration-lg) !important; }

.anim-duration-xl   { animation-duration: var(--mico-duration-xl) !important; }

/**
 * Animation Delay Controls
 *
 * These utilities add delays before animations start.
 */

.anim-delay-xs   { animation-delay: var(--mico-delay-xs) !important; }

.anim-delay-sm   { animation-delay: var(--mico-delay-sm) !important; }

.anim-delay-md   { animation-delay: var(--mico-delay-md) !important; }

.anim-delay-lg   { animation-delay: var(--mico-delay-lg) !important; }

.anim-delay-xl   { animation-delay: var(--mico-delay-xl) !important; }

/**
 * Animation Timing Function Controls
 *
 * These utilities control the acceleration curve of animations.
 */

.anim-ease-linear  { animation-timing-function: linear !important; }

.anim-ease-in      { animation-timing-function: ease-in !important; }

.anim-ease-out     { animation-timing-function: ease-out !important; }

.anim-ease-in-out  { animation-timing-function: ease-in-out !important; }

/**
 * Animation Iteration Controls
 *
 * These utilities control how many times animations repeat.
 */

.anim-infinite   { animation-iteration-count: infinite !important; }

.anim-iter-1     { animation-iteration-count: 1 !important; }

.anim-iter-2     { animation-iteration-count: 2 !important; }

.anim-iter-3     { animation-iteration-count: 3 !important; }

/**
 * Animation Direction Controls
 *
 * These utilities control the direction of animation playback.
 */

.anim-direction-normal           { animation-direction: normal !important; }

.anim-direction-reverse          { animation-direction: reverse !important; }

.anim-direction-alternate        { animation-direction: alternate !important; }

.anim-direction-alternate-reverse{ animation-direction: alternate-reverse !important; }

/**
 * Animation Fill Mode Controls
 *
 * These utilities control how animations apply styles before and after execution.
 */

.anim-fill-none     { animation-fill-mode: none !important; }

.anim-fill-forwards { animation-fill-mode: forwards !important; }

.anim-fill-backwards{ animation-fill-mode: backwards !important; }

.anim-fill-both     { animation-fill-mode: both !important; }

/**
 * Animation Play State Controls
 *
 * These utilities control whether animations are running or paused.
 */

.anim-paused  { animation-play-state: paused !important; }

.anim-running { animation-play-state: running !important; }

/* ========================================================================== */

/* INTERACTIVE ANIMATION UTILITIES                                           */

/* ========================================================================== */

/**
 * Ripple Effect for Buttons
 *
 * Creates a ripple animation effect on button interactions.
 * JavaScript is required to position and trigger the ripple.
 */

.btn-ripple {
  position: relative;
  overflow: hidden;
  -webkit-tap-highlight-color: transparent;
}

.ripple-element {
  position: absolute;
  border-radius: var(--mico-radius-full);
  background: var(--mico-ripple-bg-default);
  transform: scale(0);
  animation: ripple-effect 0.6s linear;
  pointer-events: var(--mico-pointer-events-none);
}

/* Dark mode ripple */

@media (prefers-color-scheme: dark) {
  .ripple-element {
    background: var(--mico-ripple-bg-dark);
  }
}

/**
 * Typewriter Effect
 *
 * Creates a typewriter animation effect for text.
 * JavaScript is required to control the typing animation.
 */

.typewriter-container {
  display: inline-block;
}

.anim-typewriter {
  display: inline;
}

.typewriter-cursor::after {
  content: '|';
  display: inline-block;
  animation: blink-caret 0.75s step-end infinite;
  margin-left: 0.05em;
  color: var(--mico-typewriter-cursor-color);
}

/* JavaScript-managed cursor for more control */

.typewriter-cursor-managed {
  display: inline-block;
  margin-left: 0.05em;
  color: var(--mico-typewriter-cursor-color);
}

.typewriter-cursor-paused::after,
.typewriter-cursor-managed.is-paused {
  animation-play-state: paused !important;
  opacity: 1 !important;
}

/* ========================================================================== */

/* ACCESSIBILITY & PERFORMANCE                                               */

/* ========================================================================== */

/**
 * Reduced Motion Support
 *
 * Respects user preferences for reduced motion by disabling or simplifying animations.
 * This is crucial for accessibility and user comfort.
 */

@media (prefers-reduced-motion: reduce) {
  /* Disable all animations and transitions for users who prefer reduced motion */
  .animate-on-scroll,
  .animate-on-scroll.is-visible,
  [class*="anim-"] {
    animation-name: var(--mico-value-none) !important;
    animation-duration: 0s !important;
    animation-play-state: paused !important;
    opacity: 1 !important;
    transform: var(--mico-value-none) !important;
  }

  /* Disable interactive animations */
  .typewriter-cursor::after,
  .typewriter-cursor-managed {
    animation: var(--mico-value-none) !important;
    opacity: 1 !important;
  }

  .ripple-element {
    animation-name: var(--mico-value-none) !important;
  }

  /* Reduce transition durations to minimal values */
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/**
 * High Contrast Mode Support
 *
 * Ensures animations work well in high contrast mode.
 */

@media (prefers-contrast: high) {
  .ripple-element {
    background: currentColor;
    opacity: 0.3;
  }
}

/**
 * Print Media Support
 *
 * Disables animations in print media to avoid issues.
 */

@media print {
  .animate-on-scroll,
  [class*="anim-"] {
    animation: var(--mico-value-none) !important;
    opacity: 1 !important;
    transform: var(--mico-value-none) !important;
  }
}

/* ========================================================================== */

/* USAGE EXAMPLES AND DOCUMENTATION                                          */

/* ========================================================================== */

/**
 * USAGE EXAMPLES:
 *
 * 1. Basic scroll-triggered fade in:
 *    <div class="animate-on-scroll anim-fade-in">Content</div>
 *
 * 2. Slide in from left with delay:
 *    <div class="animate-on-scroll anim-slide-in-left anim-delay-sm">Content</div>
 *
 * 3. Continuous pulse animation:
 *    <div class="anim-pulse">Pulsing content</div>
 *
 * 4. Button with ripple effect:
 *    <button class="btn btn-ripple">Click me</button>
 *
 * 5. Typewriter effect:
 *    <span class="anim-typewriter typewriter-cursor" data-type-text="Hello World!">
 *
 * 6. Custom animation timing:
 *    <div class="animate-on-scroll anim-fade-in anim-duration-lg anim-ease-out">
 *
 * JAVASCRIPT REQUIREMENTS:
 * - Intersection Observer for scroll-triggered animations
 * - Event handlers for ripple effects
 * - Text animation logic for typewriter effects
 */

/* --mico-breakpoint-xxxl: 1600px; Super large devices (wider screens) */

@media screen and (max-width: 1600px) {


  .xxxl-text-left { text-align: var(--mico-text-align-left) !important; }
  .xxxl-text-center { text-align: var(--mico-text-align-center) !important; }
  .xxxl-text-right { text-align: var(--mico-text-align-right) !important; }
  .xxxl-text-justify { text-align: var(--mico-text-align-justify) !important; }
  .xxxl-text-start { text-align: var(--mico-text-align-start) !important; }
  .xxxl-text-end { text-align: var(--mico-text-align-end) !important; }

  .xxxl-mx-auto { margin-inline: auto !important; }
  .xxxl-my-auto { margin-block: auto !important; }

  .xxxl-d-none { display: none !important; }
  .xxxl-d-inline { display: inline !important; }
  .xxxl-d-inline-block { display: inline-block !important; }
  .xxxl-d-block { display: block !important; }
  .xxxl-d-flex { display: flex !important; }
  .xxxl-d-inline-flex { display: inline-flex !important; }
  .xxxl-d-grid { display: grid !important; }

  .xxxl-grid-cols-1 { grid-template-columns: repeat(1, 1fr) !important; }
  .xxxl-grid-cols-2 { grid-template-columns: repeat(2, 1fr) !important; }
  .xxxl-grid-cols-3 { grid-template-columns: repeat(3, 1fr) !important; }
  .xxxl-grid-cols-4 { grid-template-columns: repeat(4, 1fr) !important; }
  .xxxl-grid-cols-5 { grid-template-columns: repeat(5, 1fr) !important; }
  .xxxl-grid-cols-6 { grid-template-columns: repeat(6, 1fr) !important; }
  .xxxl-grid-cols-12 { grid-template-columns: repeat(12, 1fr) !important; }
  
  .xxxl-col-1 { grid-column: span 1 !important; }
  .xxxl-col-2 { grid-column: span 2 !important; }
  .xxxl-col-3 { grid-column: span 3 !important; }
  .xxxl-col-4 { grid-column: span 4 !important; }
  .xxxl-col-5 { grid-column: span 5 !important; }
  .xxxl-col-6 { grid-column: span 6 !important; }
  .xxxl-col-7 { grid-column: span 7 !important; }
  .xxxl-col-8 { grid-column: span 8 !important; }
  .xxxl-col-9 { grid-column: span 9 !important; }
  .xxxl-col-10 { grid-column: span 10 !important; }
  .xxxl-col-11 { grid-column: span 11 !important; }
  .xxxl-col-12 { grid-column: span 12 !important; }


  /* Flexbox */
.xxxl-flex-row { flex-direction: row !important; }
.xxxl-flex-column { flex-direction: column !important; }
.xxxl-flex-row-reverse { flex-direction: row-reverse !important; }
.xxxl-flex-column-reverse { flex-direction: column-reverse !important; }


.xxxl-flex-wrap { flex-wrap: wrap !important; }
.xxxl-flex-nowrap { flex-wrap: nowrap !important; }
.xxxl-flex-wrap-reverse { flex-wrap: wrap-reverse !important; }


.xxxl-justify-items-start { justify-items: flex-start !important; }
.xxxl-justify-items-end { justify-items: flex-end !important; }
.xxxl-justify-items-center { justify-items: center !important; }

.xxxl-justify-content-start { justify-content: flex-start !important; }
.xxxl-justify-content-end { justify-content: flex-end !important; }
.xxxl-justify-content-center { justify-content: center !important; }
.xxxl-justify-content-between { justify-content: space-between !important; }
.xxxl-justify-content-around { justify-content: space-around !important; }
.xxxl-justify-content-evenly { justify-content: space-evenly !important; }

.xxxl-align-items-start { align-items: flex-start !important; }
.xxxl-align-items-end { align-items: flex-end !important; }
.xxxl-align-items-center { align-items: center !important; }
.xxxl-align-items-baseline { align-items: baseline !important; }
.xxxl-align-items-stretch { align-items: stretch !important; }

.xxxl-align-content-start { align-content: flex-start !important; }
.xxxl-align-content-end { align-content: flex-end !important; }
.xxxl-align-content-center { align-content: center !important; }
.xxxl-align-content-between { align-content: space-between !important; }
.xxxl-align-content-around { align-content: space-around !important; }
.xxxl-align-content-stretch { align-content: stretch !important; }

.xxxl-align-self-auto { align-self: auto !important; }
.xxxl-align-self-start { align-self: flex-start !important; }
.xxxl-align-self-end { align-self: flex-end !important; }
.xxxl-align-self-center { align-self: center !important; }
.xxxl-align-self-baseline { align-self: baseline !important; }
.xxxl-align-self-stretch { align-self: stretch !important; }

.xxxl-flex-grow-0 { flex-grow: 0 !important; }
.xxxl-flex-grow-1 { flex-grow: 1 !important; }
.xxxl-flex-shrink-0 { flex-shrink: 0 !important; }
.xxxl-flex-shrink-1 { flex-shrink: 1 !important; }

.xxxl-flex-1 { flex: 1 1 0% !important; }
.xxxl-flex-auto { flex: 1 1 auto !important; }
.xxxl-flex-initial { flex: 0 1 auto !important; }
.xxxl-flex-none { flex: none !important; }


  /* Width and Height */
.xxxl-w-none { width: none !important; }
.xxxl-w-auto { width: auto !important; }
.xxxl-w-screen { width: 100vw !important; }
.xxxl-w-fit { min-width: fit-content !important; }
.xxxl-w-min { min-width: min-content !important; }
.xxxl-w-max { min-width: max-content !important; }
.xxxl-w-10p { width: 10% !important; }
.xxxl-w-20p { width: 20% !important; }
.xxxl-w-25p { width: var(--mico-quarter) !important; }
.xxxl-w-30p { width: 30% !important; }
.xxxl-w-33p { width: var(--mico-third) !important; }
.xxxl-w-40p { width: 40% !important; }
.xxxl-w-50p { width: 50% !important; }
.xxxl-w-60p { width: 60% !important; }
.xxxl-w-70p { width: 70% !important; }
.xxxl-w-80p { width: 80% !important; }
.xxxl-w-90p { width: 90% !important; }
.xxxl-w-100p { width: 100% !important; }

.xxxl-h-none { height: none !important; }
.xxxl-h-auto { height: auto !important; }
.xxxl-h-screen { height: 100vh !important; }
.xxxl-h-10p { height: 10% !important; }
.xxxl-h-20p { height: 20% !important; }
.xxxl-h-25p { height: var(--mico-quarter) !important; }
.xxxl-h-30p { height: 30% !important; }
.xxxl-h-33p { height: var(--mico-third) !important; }
.xxxl-h-40p { height: 40% !important; }
.xxxl-h-50p { height: 50% !important; }
.xxxl-h-60p { height: 60% !important; }
.xxxl-h-70p { height: 70% !important; }
.xxxl-h-80p { height: 80% !important; }
.xxxl-h-90p { height: 90% !important; }
.xxxl-h-100p { height: 100% !important; }

  /* Min Width and Height */
.xxxl-min-w-none { min-width: none !important; }
.xxxl-min-w-auto { min-width: auto !important; }
.xxxl-min-w-screen { min-width: 100vw !important; }
.xxxl-min-w-fit { min-width: fit-content !important; }
.xxxl-min-w-min { min-width: min-content !important; }
.xxxl-min-w-max { min-width: max-content !important; }
.xxxl-min-w-10p { min-width: 10% !important; }
.xxxl-min-w-20p { min-width: 20% !important; }
.xxxl-min-w-25p { width: var(--mico-quarter) !important; }
.xxxl-min-w-30p { min-width: 30% !important; }
.xxxl-min-w-33p { min-width: var(--mico-third) !important; }
.xxxl-min-w-40p { min-width: 40% !important; }
.xxxl-min-w-50p { min-width: 50% !important; }
.xxxl-min-w-60p { min-width: 60% !important; }
.xxxl-min-w-70p { min-width: 70% !important; }
.xxxl-min-w-80p { min-width: 80% !important; }
.xxxl-min-w-90p { min-width: 90% !important; }
.xxxl-min-w-100p { min-width: 100% !important; }

.xxxl-min-h-none { min-height: none !important; }
.xxxl-min-h-auto { min-height: auto !important; }
.xxxl-min-h-screen { min-height: 100vh !important; }
.xxxl-min-h-10p { min-height: 10% !important; }
.xxxl-min-h-20p { min-height: 20% !important; }
.xxxl-min-h-25p { min-height: var(--mico-quarter) !important; }
.xxxl-min-h-30p { min-height: 30% !important; }
.xxxl-min-h-33p { min-height: var(--mico-third) !important; }
.xxxl-min-h-40p { min-height: 40% !important; }
.xxxl-min-h-50p { min-height: 50% !important; }
.xxxl-min-h-60p { min-height: 60% !important; }
.xxxl-min-h-70p { min-height: 70% !important; }
.xxxl-min-h-80p { min-height: 80% !important; }
.xxxl-min-h-90p { min-height: 90% !important; }
.xxxl-min-h-100p { min-height: 100% !important; }


/* Max Width and Height */
.xxxl-max-w-none { max-width: none !important; }
.xxxl-max-w-auto { max-width: auto !important; }
.xxxl-max-w-screen { max-width: 100vw !important; }
.xxxl-max-w-fit { max-width: fit-content !important; }
.xxxl-max-w-min { max-width: min-content !important; }
.xxxl-max-w-max { max-width: max-content !important; }
.xxxl-max-w-10p { max-width: 10% !important; }
.xxxl-max-w-20p { max-width: 20% !important; }
.xxxl-max-w-25p { max-width: var(--mico-quarter) !important; }
.xxxl-max-w-30p { max-width: 30% !important; }
.xxxl-min-w-33p { max-width: var(--mico-third) !important; }
.xxxl-max-w-40p { max-width: 40% !important; }
.xxxl-max-w-50p { max-width: 50% !important; }
.xxxl-max-w-60p { max-width: 60% !important; }
.xxxl-max-w-70p { max-width: 70% !important; }
.xxxl-max-w-80p { max-width: 80% !important; }
.xxxl-max-w-90p { max-width: 90% !important; }
.xxxl-max-w-100p { max-width: 100% !important; }

.xxxl-max-h-none { max-height: none !important; }
.xxxl-max-h-auto { max-height: auto !important; }
.xxxl-max-h-screen { max-height: 100vh !important; }
.xxxl-max-h-10p { max-height: 10% !important; }
.xxxl-max-h-20p { max-height: 20% !important; }
.xxxl-max-h-25p { max-height: var(--mico-quarter) !important; }
.xxxl-max-h-30p { max-height: 30% !important; }
.xxxl-max-h-33p { max-height: var(--mico-third) !important; }
.xxxl-max-h-40p { max-height: 40% !important; }
.xxxl-max-h-50p { max-height: 50% !important; }
.xxxl-max-h-60p { max-height: 60% !important; }
.xxxl-max-h-70p { max-height: 70% !important; }
.xxxl-max-h-80p { max-height: 80% !important; }
.xxxl-max-h-90p { max-height: 90% !important; }
.xxxl-max-h-100p { max-height: 100% !important; }

/* Gap */
.xxxl-gap-0 { gap: var(--mico-size-0) !important; }
.xxxl-gap-4 { gap: var(--mico-size-4) !important; }
.xxxl-gap-8 { gap: var(--mico-size-8) !important; }
.xxxl-gap-12 { gap: var(--mico-size-12) !important; }
.xxxl-gap-16 { gap: var(--mico-size-16) !important; }
.xxxl-gap-20 { gap: var(--mico-size-20) !important; }
.xxxl-gap-24 { gap: var(--mico-size-24) !important; }
.xxxl-gap-28 { gap: var(--mico-size-28) !important; }
.xxxl-gap-32 { gap: var(--mico-size-32) !important; }
.xxxl-gap-36 { gap: var(--mico-size-36) !important; }
.xxxl-gap-40 { gap: var(--mico-size-40) !important; }
.xxxl-gap-44 { gap: var(--mico-size-44) !important; }
.xxxl-gap-48 { gap: var(--mico-size-48) !important; }
.xxxl-gap-52 { gap: var(--mico-size-52) !important; }
.xxxl-gap-56 { gap: var(--mico-size-56) !important; }
.xxxl-gap-60 { gap: var(--mico-size-60) !important; }
.xxxl-gap-64 { gap: var(--mico-size-64) !important; }


/* Block Button */
.xxxl-btn-block {
  display: var(--mico-display-block);
  width: var(--mico-full);
}
}

/* --mico-breakpoint-xxl: 1440px; Ultra large devices (wide screens) */

@media screen and (max-width: 1440px) {



  .xxl-text-left { text-align: var(--mico-text-align-left) !important; }
  .xxl-text-center { text-align: var(--mico-text-align-center) !important; }
  .xxl-text-right { text-align: var(--mico-text-align-right) !important; }
  .xxl-text-justify { text-align: var(--mico-text-align-justify) !important; }
  .xxl-text-start { text-align: var(--mico-text-align-start) !important; }
  .xxl-text-end { text-align: var(--mico-text-align-end) !important; }

  .xxl-mx-auto { margin-inline: auto !important; }
  .xxl-my-auto { margin-block: auto !important; }

  .xxl-d-none { display: none !important; }
  .xxl-d-inline { display: inline !important; }
  .xxl-d-inline-block { display: inline-block !important; }
  .xxl-d-block { display: block !important; }
  .xxl-d-flex { display: flex !important; }
  .xxl-d-inline-flex { display: inline-flex !important; }
  .xxl-d-grid { display: grid !important; }

  .xxl-grid-cols-1 { grid-template-columns: repeat(1, 1fr) !important; }
  .xxl-grid-cols-2 { grid-template-columns: repeat(2, 1fr) !important; }
  .xxl-grid-cols-3 { grid-template-columns: repeat(3, 1fr) !important; }
  .xxl-grid-cols-4 { grid-template-columns: repeat(4, 1fr) !important; }
  .xxl-grid-cols-5 { grid-template-columns: repeat(5, 1fr) !important; }
  .xxl-grid-cols-6 { grid-template-columns: repeat(6, 1fr) !important; }
  .xxl-grid-cols-12 { grid-template-columns: repeat(12, 1fr) !important; }
  
  .xxl-col-1 { grid-column: span 1 !important; }
  .xxl-col-2 { grid-column: span 2 !important; }
  .xxl-col-3 { grid-column: span 3 !important; }
  .xxl-col-4 { grid-column: span 4 !important; }
  .xxl-col-5 { grid-column: span 5 !important; }
  .xxl-col-6 { grid-column: span 6 !important; }
  .xxl-col-7 { grid-column: span 7 !important; }
  .xxl-col-8 { grid-column: span 8 !important; }
  .xxl-col-9 { grid-column: span 9 !important; }
  .xxl-col-10 { grid-column: span 10 !important; }
  .xxl-col-11 { grid-column: span 11 !important; }
  .xxl-col-12 { grid-column: span 12 !important; }


  /* Flexbox */
.xxl-flex-row { flex-direction: row !important; }
.xxl-flex-column { flex-direction: column !important; }
.xxl-flex-row-reverse { flex-direction: row-reverse !important; }
.xxl-flex-column-reverse { flex-direction: column-reverse !important; }

.xxl-flex-wrap { flex-wrap: wrap !important; }
.xxl-flex-nowrap { flex-wrap: nowrap !important; }
.xxl-flex-wrap-reverse { flex-wrap: wrap-reverse !important; }


.xxl-justify-items-start { justify-items: flex-start !important; }
.xxl-justify-items-end { justify-items: flex-end !important; }
.xxl-justify-items-center { justify-items: center !important; }

.xxl-justify-content-start { justify-content: flex-start !important; }
.xxl-justify-content-end { justify-content: flex-end !important; }
.xxl-justify-content-center { justify-content: center !important; }
.xxl-justify-content-between { justify-content: space-between !important; }
.xxl-justify-content-around { justify-content: space-around !important; }
.xxl-justify-content-evenly { justify-content: space-evenly !important; }

.xxl-align-items-start { align-items: flex-start !important; }
.xxl-align-items-end { align-items: flex-end !important; }
.xxl-align-items-center { align-items: center !important; }
.xxl-align-items-baseline { align-items: baseline !important; }
.xxl-align-items-stretch { align-items: stretch !important; }

.xxl-align-content-start { align-content: flex-start !important; }
.xxl-align-content-end { align-content: flex-end !important; }
.xxl-align-content-center { align-content: center !important; }
.xxl-align-content-between { align-content: space-between !important; }
.xxl-align-content-around { align-content: space-around !important; }
.xxl-align-content-stretch { align-content: stretch !important; }

.xxl-align-self-auto { align-self: auto !important; }
.xxl-align-self-start { align-self: flex-start !important; }
.xxl-align-self-end { align-self: flex-end !important; }
.xxl-align-self-center { align-self: center !important; }
.xxl-align-self-baseline { align-self: baseline !important; }
.xxl-align-self-stretch { align-self: stretch !important; }

.xxl-flex-grow-0 { flex-grow: 0 !important; }
.xxl-flex-grow-1 { flex-grow: 1 !important; }
.xxl-flex-shrink-0 { flex-shrink: 0 !important; }
.xxl-flex-shrink-1 { flex-shrink: 1 !important; }

.xxl-flex-1 { flex: 1 1 0% !important; }
.xxl-flex-auto { flex: 1 1 auto !important; }
.xxl-flex-initial { flex: 0 1 auto !important; }
.xxl-flex-none { flex: none !important; }


  /* Width and Height */
.xxl-w-none { width: none !important; }
.xxl-w-auto { width: auto !important; }
.xxl-w-screen { width: 100vw !important; }
.xxl-w-fit { min-width: fit-content !important; }
.xxl-w-min { min-width: min-content !important; }
.xxl-w-max { min-width: max-content !important; }
.xxl-w-10p { width: 10% !important; }
.xxl-w-20p { width: 20% !important; }
.xxl-w-25p { width: var(--mico-quarter) !important; }
.xxl-w-30p { width: 30% !important; }
.xxl-w-33p { width: var(--mico-third) !important; }
.xxl-w-40p { width: 40% !important; }
.xxl-w-50p { width: 50% !important; }
.xxl-w-60p { width: 60% !important; }
.xxl-w-70p { width: 70% !important; }
.xxl-w-80p { width: 80% !important; }
.xxl-w-90p { width: 90% !important; }
.xxl-w-100p { width: 100% !important; }

.xxl-h-none { height: none !important; }
.xxl-h-auto { height: auto !important; }
.xxl-h-screen { height: 100vh !important; }
.xxl-h-10p { height: 10% !important; }
.xxl-h-20p { height: 20% !important; }
.xxl-h-25p { height: var(--mico-quarter) !important; }
.xxl-h-30p { height: 30% !important; }
.xxl-h-33p { height: var(--mico-third) !important; }
.xxl-h-40p { height: 40% !important; }
.xxl-h-50p { height: 50% !important; }
.xxl-h-60p { height: 60% !important; }
.xxl-h-70p { height: 70% !important; }
.xxl-h-80p { height: 80% !important; }
.xxl-h-90p { height: 90% !important; }
.xxl-h-100p { height: 100% !important; }

  /* Min Width and Height */
.xxl-min-w-none { min-width: none !important; }
.xxl-min-w-auto { min-width: auto !important; }
.xxl-min-w-screen { min-width: 100vw !important; }
.xxl-min-w-fit { min-width: fit-content !important; }
.xxl-min-w-min { min-width: min-content !important; }
.xxl-min-w-max { min-width: max-content !important; }
.xxl-min-w-10p { min-width: 10% !important; }
.xxl-min-w-20p { min-width: 20% !important; }
.xxl-min-w-25p { min-width: var(--mico-quarter) !important; }
.xxl-min-w-30p { min-width: 30% !important; }
.xxl-min-w-33p { min-width: var(--mico-third) !important; }
.xxl-min-w-40p { min-width: 40% !important; }
.xxl-min-w-50p { min-width: 50% !important; }
.xxl-min-w-60p { min-width: 60% !important; }
.xxl-min-w-70p { min-width: 70% !important; }
.xxl-min-w-80p { min-width: 80% !important; }
.xxl-min-w-90p { min-width: 90% !important; }
.xxl-min-w-100p { min-width: 100% !important; }

.xxl-min-h-none { min-height: none !important; }
.xxl-min-h-auto { min-height: auto !important; }
.xxl-min-h-screen { min-height: 100vh !important; }
.xxl-min-h-10p { min-height: 10% !important; }
.xxl-min-h-20p { min-height: 20% !important; }
.xxl-min-h-25p { min-height: var(--mico-quarter) !important; }
.xxl-min-h-30p { min-height: 30% !important; }
.xxl-min-h-33p { min-height: var(--mico-third) !important; }
.xxl-min-h-40p { min-height: 40% !important; }
.xxl-min-h-50p { min-height: 50% !important; }
.xxl-min-h-60p { min-height: 60% !important; }
.xxl-min-h-70p { min-height: 70% !important; }
.xxl-min-h-80p { min-height: 80% !important; }
.xxl-min-h-90p { min-height: 90% !important; }
.xxl-min-h-100p { min-height: 100% !important; }


/* Max Width and Height */
.xxl-max-w-none { max-width: none !important; }
.xxl-max-w-auto { max-width: auto !important; }
.xxl-max-w-screen { max-width: 100vw !important; }
.xxl-max-w-fit { max-width: fit-content !important; }
.xxl-max-w-min { max-width: min-content !important; }
.xxl-max-w-max { max-width: max-content !important; }
.xxl-max-w-10p { max-width: 10% !important; }
.xxl-max-w-20p { max-width: 20% !important; }
.xxl-max-w-25p { max-width: var(--mico-quarter) !important; }
.xxl-max-w-30p { max-width: 30% !important; }
.xxl-max-w-33p { max-width: var(--mico-third) !important; }
.xxl-max-w-40p { max-width: 40% !important; }
.xxl-max-w-50p { max-width: 50% !important; }
.xxl-max-w-60p { max-width: 60% !important; }
.xxl-max-w-70p { max-width: 70% !important; }
.xxl-max-w-80p { max-width: 80% !important; }
.xxl-max-w-90p { max-width: 90% !important; }
.xxl-max-w-100p { max-width: 100% !important; }

.xxl-max-h-none { max-height: none !important; }
.xxl-max-h-auto { max-height: auto !important; }
.xxl-max-h-screen { max-height: 100vh !important; }
.xxl-max-h-10p { max-height: 10% !important; }
.xxl-max-h-20p { max-height: 20% !important; }
.xxl-max-h-25p { max-height: var(--mico-quarter) !important; }
.xxl-max-h-30p { max-height: 30% !important; }
.xxl-max-h-33p { max-height: var(--mico-third) !important; }
.xxl-max-h-40p { max-height: 40% !important; }
.xxl-max-h-50p { max-height: 50% !important; }
.xxl-max-h-60p { max-height: 60% !important; }
.xxl-max-h-70p { max-height: 70% !important; }
.xxl-max-h-80p { max-height: 80% !important; }
.xxl-max-h-90p { max-height: 90% !important; }
.xxl-max-h-100p { max-height: 100% !important; }

/* Gap */
.xxl-gap-0 { gap: var(--mico-size-0) !important; }
.xxl-gap-4 { gap: var(--mico-size-4) !important; }
.xxl-gap-8 { gap: var(--mico-size-8) !important; }
.xxl-gap-12 { gap: var(--mico-size-12) !important; }
.xxl-gap-16 { gap: var(--mico-size-16) !important; }
.xxl-gap-20 { gap: var(--mico-size-20) !important; }
.xxl-gap-24 { gap: var(--mico-size-24) !important; }
.xxl-gap-28 { gap: var(--mico-size-28) !important; }
.xxl-gap-32 { gap: var(--mico-size-32) !important; }
.xxl-gap-36 { gap: var(--mico-size-36) !important; }
.xxl-gap-40 { gap: var(--mico-size-40) !important; }
.xxl-gap-44 { gap: var(--mico-size-44) !important; }
.xxl-gap-48 { gap: var(--mico-size-48) !important; }
.xxl-gap-52 { gap: var(--mico-size-52) !important; }
.xxl-gap-56 { gap: var(--mico-size-56) !important; }
.xxl-gap-60 { gap: var(--mico-size-60) !important; }
.xxl-gap-64 { gap: var(--mico-size-64) !important; }


/* Block Button */
.xxl-btn-block {
  display: var(--mico-display-block);
  width: var(--mico-full);
}
}

/* --mico-breakpoint-xl: 1280px; Extra large devices (large screens) */

@media screen and (max-width: 1280px) {

  .xl-text-left { text-align: var(--mico-text-align-left) !important; }
  .xl-text-center { text-align: var(--mico-text-align-center) !important; }
  .xl-text-right { text-align: var(--mico-text-align-right) !important; }
  .xl-text-justify { text-align: var(--mico-text-align-justify) !important; }
  .xl-text-start { text-align: var(--mico-text-align-start) !important; }
  .xl-text-end { text-align: var(--mico-text-align-end) !important; }

  .xl-mx-auto { margin-inline: auto !important; }
  .xl-my-auto { margin-block: auto !important; }

  .xl-d-none { display: none !important; }
  .xl-d-inline { display: inline !important; }
  .xl-d-inline-block { display: inline-block !important; }
  .xl-d-block { display: block !important; }
  .xl-d-flex { display: flex !important; }
  .xl-d-inline-flex { display: inline-flex !important; }
  .xl-d-grid { display: grid !important; }

  .xl-grid-cols-1 { grid-template-columns: repeat(1, 1fr) !important; }
  .xl-grid-cols-2 { grid-template-columns: repeat(2, 1fr) !important; }
  .xl-grid-cols-3 { grid-template-columns: repeat(3, 1fr) !important; }
  .xl-grid-cols-4 { grid-template-columns: repeat(4, 1fr) !important; }
  .xl-grid-cols-5 { grid-template-columns: repeat(5, 1fr) !important; }
  .xl-grid-cols-6 { grid-template-columns: repeat(6, 1fr) !important; }
  .xl-grid-cols-12 { grid-template-columns: repeat(12, 1fr) !important; }
  
  .xl-col-1 { grid-column: span 1 !important; }
  .xl-col-2 { grid-column: span 2 !important; }
  .xl-col-3 { grid-column: span 3 !important; }
  .xl-col-4 { grid-column: span 4 !important; }
  .xl-col-5 { grid-column: span 5 !important; }
  .xl-col-6 { grid-column: span 6 !important; }
  .xl-col-7 { grid-column: span 7 !important; }
  .xl-col-8 { grid-column: span 8 !important; }
  .xl-col-9 { grid-column: span 9 !important; }
  .xl-col-10 { grid-column: span 10 !important; }
  .xl-col-11 { grid-column: span 11 !important; }
  .xl-col-12 { grid-column: span 12 !important; }


  /* Flexbox */
.xl-flex-row { flex-direction: row !important; }
.xl-flex-column { flex-direction: column !important; }
.xl-flex-row-reverse { flex-direction: row-reverse !important; }
.xl-flex-column-reverse { flex-direction: column-reverse !important; }


.xl-flex-wrap { flex-wrap: wrap !important; }
.xl-flex-nowrap { flex-wrap: nowrap !important; }
.xl-flex-wrap-reverse { flex-wrap: wrap-reverse !important; }

.xl-justify-items-start { justify-items: flex-start !important; }
.xl-justify-items-end { justify-items: flex-end !important; }
.xl-justify-items-center { justify-items: center !important; }

.xl-justify-content-start { justify-content: flex-start !important; }
.xl-justify-content-end { justify-content: flex-end !important; }
.xl-justify-content-center { justify-content: center !important; }
.xl-justify-content-between { justify-content: space-between !important; }
.xl-justify-content-around { justify-content: space-around !important; }
.xl-justify-content-evenly { justify-content: space-evenly !important; }

.xl-gn-items-start { align-items: flex-start !important; }
.xl-gn-items-end { align-items: flex-end !important; }
.xl-gn-items-center { align-items: center !important; }
.xl-gn-items-baseline { align-items: baseline !important; }
.xl-gn-items-stretch { align-items: stretch !important; }

.xl-align-content-start { align-content: flex-start !important; }
.xl-align-content-end { align-content: flex-end !important; }
.xl-align-content-center { align-content: center !important; }
.xl-align-content-between { align-content: space-between !important; }
.xl-align-content-around { align-content: space-around !important; }
.xl-align-content-stretch { align-content: stretch !important; }

.xl-align-self-auto { align-self: auto !important; }
.xl-align-self-start { align-self: flex-start !important; }
.xl-align-self-end { align-self: flex-end !important; }
.xl-align-self-center { align-self: center !important; }
.xl-align-self-baseline { align-self: baseline !important; }
.xl-align-self-stretch { align-self: stretch !important; }

.xl-flex-grow-0 { flex-grow: 0 !important; }
.xl-flex-grow-1 { flex-grow: 1 !important; }
.xl-flex-shrink-0 { flex-shrink: 0 !important; }
.xl-flex-shrink-1 { flex-shrink: 1 !important; }

.xl-flex-1 { flex: 1 1 0% !important; }
.xl-flex-auto { flex: 1 1 auto !important; }
.xl-flex-initial { flex: 0 1 auto !important; }
.xl-flex-none { flex: none !important; }


  /* Width and Height */
.xl-w-none { width: none !important; }
.xl-w-auto { width: auto !important; }
.xl-w-screen { width: 100vw !important; }
.xl-w-fit { min-width: fit-content !important; }
.xl-w-min { min-width: min-content !important; }
.xl-w-max { min-width: max-content !important; }
.xl-w-10p { width: 10% !important; }
.xl-w-20p { width: 20% !important; }
.xl-w-25p { width: var(--mico-quarter) !important; }
.xl-w-30p { width: 30% !important; }
.xl-w-33p { width: var(--mico-third) !important; }
.xl-w-40p { width: 40% !important; }
.xl-w-50p { width: 50% !important; }
.xl-w-60p { width: 60% !important; }
.xl-w-70p { width: 70% !important; }
.xl-w-80p { width: 80% !important; }
.xl-w-90p { width: 90% !important; }
.xl-w-100p { width: 100% !important; }

.xl-h-none { height: none !important; }
.xl-h-auto { height: auto !important; }
.xl-h-screen { height: 100vh !important; }
.xl-h-10p { height: 10% !important; }
.xl-h-20p { height: 20% !important; }
.xl-h-25p { height: var(--mico-quarter) !important; }
.xl-h-30p { height: 30% !important; }
.xl-h-33p { height: var(--mico-third) !important; }
.xl-h-40p { height: 40% !important; }
.xl-h-50p { height: 50% !important; }
.xl-h-60p { height: 60% !important; }
.xl-h-70p { height: 70% !important; }
.xl-h-80p { height: 80% !important; }
.xl-h-90p { height: 90% !important; }
.xl-h-100p { height: 100% !important; }

  /* Min Width and Height */
.xl-min-w-none { min-width: none !important; }
.xl-min-w-auto { min-width: auto !important; }
.xl-min-w-screen { min-width: 100vw !important; }
.xl-min-w-fit { min-width: fit-content !important; }
.xl-min-w-min { min-width: min-content !important; }
.xl-min-w-max { min-width: max-content !important; }
.xl-min-w-10p { min-width: 10% !important; }
.xl-min-w-20p { min-width: 20% !important; }
.xl-min-w-25p { min-width: var(--mico-quarter) !important; }
.xl-min-w-30p { min-width: 30% !important; }
.xl-min-w-33p { min-width: var(--mico-third) !important; }
.xl-min-w-40p { min-width: 40% !important; }
.xl-min-w-50p { min-width: 50% !important; }
.xl-min-w-60p { min-width: 60% !important; }
.xl-min-w-70p { min-width: 70% !important; }
.xl-min-w-80p { min-width: 80% !important; }
.xl-min-w-90p { min-width: 90% !important; }
.xl-min-w-100p { min-width: 100% !important; }

.xl-min-h-none { min-height: none !important; }
.xl-min-h-auto { min-height: auto !important; }
.xl-min-h-screen { min-height: 100vh !important; }
.xl-min-h-10p { min-height: 10% !important; }
.xl-min-h-20p { min-height: 20% !important; }
.xl-min-h-25p { min-height: var(--mico-quarter) !important; }
.xl-min-h-30p { min-height: 30% !important; }
.xl-min-h-33p { min-height: var(--mico-third) !important; }
.xl-min-h-40p { min-height: 40% !important; }
.xl-min-h-50p { min-height: 50% !important; }
.xl-min-h-60p { min-height: 60% !important; }
.xl-min-h-70p { min-height: 70% !important; }
.xl-min-h-80p { min-height: 80% !important; }
.xl-min-h-90p { min-height: 90% !important; }
.xl-min-h-100p { min-height: 100% !important; }


/* Max Width and Height */
.xl-max-w-none { max-width: none !important; }
.xl-max-w-auto { max-width: auto !important; }
.xl-max-w-screen { max-width: 100vw !important; }
.xl-max-w-fit { max-width: fit-content !important; }
.xl-max-w-min { max-width: min-content !important; }
.xl-max-w-max { max-width: max-content !important; }
.xl-max-w-10p { max-width: 10% !important; }
.xl-max-w-20p { max-width: 20% !important; }
.xl-max-w-25p { max-width: var(--mico-quarter) !important; }
.xl-max-w-30p { max-width: 30% !important; }
.xl-max-w-33p { max-width: var(--mico-third) !important; }
.xl-max-w-40p { max-width: 40% !important; }
.xl-max-w-50p { max-width: 50% !important; }
.xl-max-w-60p { max-width: 60% !important; }
.xl-max-w-70p { max-width: 70% !important; }
.xl-max-w-80p { max-width: 80% !important; }
.xl-max-w-90p { max-width: 90% !important; }
.xl-max-w-100p { max-width: 100% !important; }

.xl-max-h-none { max-height: none !important; }
.xl-max-h-auto { max-height: auto !important; }
.xl-max-h-screen { max-height: 100vh !important; }
.xl-max-h-10p { max-height: 10% !important; }
.xl-max-h-20p { max-height: 20% !important; }
.xl-max-h-25p { max-height: var(--mico-quarter) !important; }
.xl-max-h-30p { max-height: 30% !important; }
.xl-max-h-33p { max-height: var(--mico-third) !important; }
.xl-max-h-40p { max-height: 40% !important; }
.xl-max-h-50p { max-height: 50% !important; }
.xl-max-h-60p { max-height: 60% !important; }
.xl-max-h-70p { max-height: 70% !important; }
.xl-max-h-80p { max-height: 80% !important; }
.xl-max-h-90p { max-height: 90% !important; }
.xl-max-h-100p { max-height: 100% !important; }

/* Gap */
.xl-gap-0 { gap: var(--mico-size-0) !important; }
.xl-gap-4 { gap: var(--mico-size-4) !important; }
.xl-gap-8 { gap: var(--mico-size-8) !important; }
.xl-gap-12 { gap: var(--mico-size-12) !important; }
.xl-gap-16 { gap: var(--mico-size-16) !important; }
.xl-gap-20 { gap: var(--mico-size-20) !important; }
.xl-gap-24 { gap: var(--mico-size-24) !important; }
.xl-gap-28 { gap: var(--mico-size-28) !important; }
.xl-gap-32 { gap: var(--mico-size-32) !important; }
.xl-gap-36 { gap: var(--mico-size-36) !important; }
.xl-gap-40 { gap: var(--mico-size-40) !important; }
.xl-gap-44 { gap: var(--mico-size-44) !important; }
.xl-gap-48 { gap: var(--mico-size-48) !important; }
.xl-gap-52 { gap: var(--mico-size-52) !important; }
.xl-gap-56 { gap: var(--mico-size-56) !important; }
.xl-gap-60 { gap: var(--mico-size-60) !important; }
.xl-gap-64 { gap: var(--mico-size-64) !important; }



/* Block Button */
.xl-btn-block {
  display: var(--mico-display-block);
  width: var(--mico-full);
}
}

/* --mico-breakpoint-lg: 992px; Extra large devices (large screens) */

@media screen and (max-width: 992px) {

  .lg-text-left { text-align: var(--mico-text-align-left) !important; }
  .lg-text-center { text-align: var(--mico-text-align-center) !important; }
  .lg-text-right { text-align: var(--mico-text-align-right) !important; }
  .lg-text-justify { text-align: var(--mico-text-align-justify) !important; }
  .lg-text-start { text-align: var(--mico-text-align-start) !important; }
  .lg-text-end { text-align: var(--mico-text-align-end) !important; }

  .lg-mx-auto { margin-inline: auto !important; }
  .lg-my-auto { margin-block: auto !important; }

  .lg-d-none { display: none !important; }
  .lg-d-inline { display: inline !important; }
  .lg-d-inline-block { display: inline-block !important; }
  .lg-d-inline { display: inline !important; }
  .lg-d-inline-block { display: inline-block !important; }
  .lg-d-block { display: block !important; }
  .lg-d-flex { display: flex !important; }
  .lg-d-inline-flex { display: inline-flex !important; }
  .lg-d-grid { display: grid !important; }
  
  .lg-grid-cols-1 { grid-template-columns: repeat(1, 1fr) !important; }
  .lg-grid-cols-2 { grid-template-columns: repeat(2, 1fr) !important; }
  .lg-grid-cols-3 { grid-template-columns: repeat(3, 1fr) !important; }
  .lg-grid-cols-4 { grid-template-columns: repeat(4, 1fr) !important; }
  .lg-grid-cols-5 { grid-template-columns: repeat(5, 1fr) !important; }
  .lg-grid-cols-6 { grid-template-columns: repeat(6, 1fr) !important; }
  .lg-grid-cols-12 { grid-template-columns: repeat(12, 1fr) !important; }
  
  .lg-col-1 { grid-column: span 1 !important; }
  .lg-col-2 { grid-column: span 2 !important; }
  .lg-col-3 { grid-column: span 3 !important; }
  .lg-col-4 { grid-column: span 4 !important; }
  .lg-col-5 { grid-column: span 5 !important; }
  .lg-col-6 { grid-column: span 6 !important; }
  .lg-col-7 { grid-column: span 7 !important; }
  .lg-col-8 { grid-column: span 8 !important; }
  .lg-col-9 { grid-column: span 9 !important; }
  .lg-col-10 { grid-column: span 10 !important; }
  .lg-col-11 { grid-column: span 11 !important; }
  .lg-col-12 { grid-column: span 12 !important; }


  /* Flexbox */
.lg-flex-row { flex-direction: row !important; }
.lg-flex-column { flex-direction: column !important; }
.lg-flex-row-reverse { flex-direction: row-reverse !important; }
.lg-flex-column-reverse { flex-direction: column-reverse !important; }


.lg-flex-wrap { flex-wrap: wrap !important; }
.lg-flex-nowrap { flex-wrap: nowrap !important; }
.lg-flex-wrap-reverse { flex-wrap: wrap-reverse !important; }


.lg-justify-items-start { justify-items: flex-start !important; }
.lg-justify-items-end { justify-items: flex-end !important; }
.lg-justify-items-center { justify-items: center !important; }

.lg-justify-content-start { justify-content: flex-start !important; }
.lg-justify-content-end { justify-content: flex-end !important; }
.lg-justify-content-center { justify-content: center !important; }
.lg-justify-content-between { justify-content: space-between !important; }
.lg-justify-content-around { justify-content: space-around !important; }
.lg-justify-content-evenly { justify-content: space-evenly !important; }

.lg-align-items-start { align-items: flex-start !important; }
.lg-align-items-end { align-items: flex-end !important; }
.lg-align-items-center { align-items: center !important; }
.lg-align-items-baseline { align-items: baseline !important; }
.lg-align-items-stretch { align-items: stretch !important; }

.lg-align-content-start { align-content: flex-start !important; }
.lg-align-content-end { align-content: flex-end !important; }
.lg-align-content-center { align-content: center !important; }
.lg-align-content-between { align-content: space-between !important; }
.lg-align-content-around { align-content: space-around !important; }
.lg-align-content-stretch { align-content: stretch !important; }

.lg-align-self-auto { align-self: auto !important; }
.lg-align-self-start { align-self: flex-start !important; }
.lg-align-self-end { align-self: flex-end !important; }
.lg-align-self-center { align-self: center !important; }
.lg-align-self-baseline { align-self: baseline !important; }
.lg-align-self-stretch { align-self: stretch !important; }

.lg-flex-grow-0 { flex-grow: 0 !important; }
.lg-flex-grow-1 { flex-grow: 1 !important; }
.lg-flex-shrink-0 { flex-shrink: 0 !important; }
.lg-flex-shrink-1 { flex-shrink: 1 !important; }

.lg-flex-1 { flex: 1 1 0% !important; }
.lg-flex-auto { flex: 1 1 auto !important; }
.lg-flex-initial { flex: 0 1 auto !important; }
.lg-flex-none { flex: none !important; }


  /* Width and Height */
.lg-w-none { width: none !important; }
.lg-w-auto { width: auto !important; }
.lg-w-screen { width: 100vw !important; }
.lg-w-fit { min-width: fit-content !important; }
.lg-w-min { min-width: min-content !important; }
.lg-w-max { min-width: max-content !important; }
.lg-w-10p { width: 10% !important; }
.lg-w-20p { width: 20% !important; }
.lg-w-25p { width: var(--mico-quarter) !important; }
.lg-w-30p { width: 30% !important; }
.lg-w-33p { width: var(--mico-third) !important; }
.lg-w-40p { width: 40% !important; }
.lg-w-50p { width: 50% !important; }
.lg-w-60p { width: 60% !important; }
.lg-w-70p { width: 70% !important; }
.lg-w-80p { width: 80% !important; }
.lg-w-90p { width: 90% !important; }
.lg-w-100p { width: 100% !important; }

.lg-h-none { height: none !important; }
.lg-h-auto { height: auto !important; }
.lg-h-screen { height: 100vh !important; }
.lg-h-10p { height: 10% !important; }
.lg-h-20p { height: 20% !important; }
.xl-h-25p { height: var(--mico-quarter) !important; }
.lg-h-30p { height: 30% !important; }
.xl-h-33p { height: var(--mico-third) !important; }
.lg-h-40p { height: 40% !important; }
.lg-h-50p { height: 50% !important; }
.lg-h-60p { height: 60% !important; }
.lg-h-70p { height: 70% !important; }
.lg-h-80p { height: 80% !important; }
.lg-h-90p { height: 90% !important; }
.lg-h-100p { height: 100% !important; }

  /* Min Width and Height */
.lg-min-w-none { min-width: none !important; }
.lg-min-w-auto { min-width: auto !important; }
.lg-min-w-screen { min-width: 100vw !important; }
.lg-min-w-fit { min-width: fit-content !important; }
.lg-min-w-min { min-width: min-content !important; }
.lg-min-w-max { min-width: max-content !important; }
.lg-min-w-10p { min-width: 10% !important; }
.lg-min-w-20p { min-width: 20% !important; }
.lg-min-w-25p { min-width: var(--mico-quarter) !important; }
.lg-min-w-30p { min-width: 30% !important; }
.lg-min-w-33p { min-width: var(--mico-third) !important; }
.lg-min-w-40p { min-width: 40% !important; }
.lg-min-w-50p { min-width: 50% !important; }
.lg-min-w-60p { min-width: 60% !important; }
.lg-min-w-70p { min-width: 70% !important; }
.lg-min-w-80p { min-width: 80% !important; }
.lg-min-w-90p { min-width: 90% !important; }
.lg-min-w-100p { min-width: 100% !important; }

.lg-min-h-none { min-height: none !important; }
.lg-min-h-auto { min-height: auto !important; }
.lg-min-h-screen { min-height: 100vh !important; }
.lg-min-h-10p { min-height: 10% !important; }
.lg-min-h-20p { min-height: 20% !important; }
.lg-min-h-25p { min-height: var(--mico-quarter) !important; }
.lg-min-h-30p { min-height: 30% !important; }
.lg-min-h-33p { min-height: var(--mico-third) !important; }
.lg-min-h-40p { min-height: 40% !important; }
.lg-min-h-50p { min-height: 50% !important; }
.lg-min-h-60p { min-height: 60% !important; }
.lg-min-h-70p { min-height: 70% !important; }
.lg-min-h-80p { min-height: 80% !important; }
.lg-min-h-90p { min-height: 90% !important; }
.lg-min-h-100p { min-height: 100% !important; }


  /* Max Width and Height */
.lg-max-w-none { max-width: none !important; }
.lg-max-w-auto { max-width: auto !important; }
.lg-max-w-screen { max-width: 100vw !important; }
.lg-max-w-fit { max-width: fit-content !important; }
.lg-max-w-min { max-width: min-content !important; }
.lg-max-w-max { max-width: max-content !important; }
.lg-max-w-10p { max-width: 10% !important; }
.lg-max-w-20p { max-width: 20% !important; }
.lg-max-w-25p { max-width: var(--mico-quarter) !important; }
.lg-max-w-30p { max-width: 30% !important; }
.lg-max-w-33p { max-width: var(--mico-third) !important; }
.lg-max-w-40p { max-width: 40% !important; }
.lg-max-w-50p { max-width: 50% !important; }
.lg-max-w-60p { max-width: 60% !important; }
.lg-max-w-70p { max-width: 70% !important; }
.lg-max-w-80p { max-width: 80% !important; }
.lg-max-w-90p { max-width: 90% !important; }
.lg-max-w-100p { max-width: 100% !important; }

.lg-max-h-none { max-height: none !important; }
.lg-max-h-auto { max-height: auto !important; }
.lg-max-h-screen { max-height: 100vh !important; }
.lg-max-h-10p { max-height: 10% !important; }
.lg-max-h-20p { max-height: 20% !important; }
.lg-max-h-25p { max-height: var(--mico-quarter) !important; }
.lg-max-h-30p { max-height: 30% !important; }
.lg-max-h-33p { max-height: var(--mico-third) !important; }
.lg-max-h-40p { max-height: 40% !important; }
.lg-max-h-50p { max-height: 50% !important; }
.lg-max-h-60p { max-height: 60% !important; }
.lg-max-h-70p { max-height: 70% !important; }
.lg-max-h-80p { max-height: 80% !important; }
.lg-max-h-90p { max-height: 90% !important; }
.lg-max-h-100p { max-height: 100% !important; }

/* Gap */
.lg-gap-0 { gap: var(--mico-size-0) !important; }
.lg-gap-4 { gap: var(--mico-size-4) !important; }
.lg-gap-8 { gap: var(--mico-size-8) !important; }
.lg-gap-12 { gap: var(--mico-size-12) !important; }
.lg-gap-16 { gap: var(--mico-size-16) !important; }
.lg-gap-20 { gap: var(--mico-size-20) !important; }
.lg-gap-24 { gap: var(--mico-size-24) !important; }
.lg-gap-28 { gap: var(--mico-size-28) !important; }
.lg-gap-32 { gap: var(--mico-size-32) !important; }
.lg-gap-36 { gap: var(--mico-size-36) !important; }
.lg-gap-40 { gap: var(--mico-size-40) !important; }
.lg-gap-44 { gap: var(--mico-size-44) !important; }
.lg-gap-48 { gap: var(--mico-size-48) !important; }
.lg-gap-52 { gap: var(--mico-size-52) !important; }
.lg-gap-56 { gap: var(--mico-size-56) !important; }
.lg-gap-60 { gap: var(--mico-size-60) !important; }
.lg-gap-64 { gap: var(--mico-size-64) !important; }



/* Block Button */
.lg-btn-block {
  display: var(--mico-display-block);
  width: var(--mico-full);
}
}

/*  --mico-breakpoint-md: 768px; Medium devices (tablets) */

@media screen and (max-width: 768px) {

  .md-text-left { text-align: var(--mico-text-align-left) !important; }
  .md-text-center { text-align: var(--mico-text-align-center) !important; }
  .md-text-right { text-align: var(--mico-text-align-right) !important; }
  .md-text-justify { text-align: var(--mico-text-align-justify) !important; }
  .md-text-start { text-align: var(--mico-text-align-start) !important; }
  .md-text-end { text-align: var(--mico-text-align-end) !important; }

  .md-mx-auto { margin-inline: auto !important; }
  .md-my-auto { margin-block: auto !important; }

  .md-d-none { display: none !important; }
  .md-d-inline { display: inline !important; }
  .md-d-inline-block { display: inline-block !important; }
  .md-d-block { display: block !important; }
  .md-d-flex { display: flex !important; }
  .md-d-inline-flex { display: inline-flex !important; }
  .md-d-grid { display: grid !important; }
  
  .md-grid-cols-1 { grid-template-columns: repeat(1, 1fr) !important; }
  .md-grid-cols-2 { grid-template-columns: repeat(2, 1fr) !important; }
  .md-grid-cols-3 { grid-template-columns: repeat(3, 1fr) !important; }
  .md-grid-cols-4 { grid-template-columns: repeat(4, 1fr) !important; }
  .md-grid-cols-5 { grid-template-columns: repeat(5, 1fr) !important; }
  .md-grid-cols-6 { grid-template-columns: repeat(6, 1fr) !important; }
  .md-grid-cols-12 { grid-template-columns: repeat(12, 1fr) !important; }
  
  .md-col-1 { grid-column: span 1 !important; }
  .md-col-2 { grid-column: span 2 !important; }
  .md-col-3 { grid-column: span 3 !important; }
  .md-col-4 { grid-column: span 4 !important; }
  .md-col-5 { grid-column: span 5 !important; }
  .md-col-6 { grid-column: span 6 !important; }
  .md-col-7 { grid-column: span 7 !important; }
  .md-col-8 { grid-column: span 8 !important; }
  .md-col-9 { grid-column: span 9 !important; }
  .md-col-10 { grid-column: span 10 !important; }
  .md-col-11 { grid-column: span 11 !important; }
  .md-col-12 { grid-column: span 12 !important; }


  /* Flexbox */
.md-flex-row { flex-direction: row !important; }
.md-flex-column { flex-direction: column !important; }
.md-flex-row-reverse { flex-direction: row-reverse !important; }
.md-flex-column-reverse { flex-direction: column-reverse !important; }


.md-flex-wrap { flex-wrap: wrap !important; }
.md-flex-nowrap { flex-wrap: nowrap !important; }
.md-flex-wrap-reverse { flex-wrap: wrap-reverse !important; }


.md-justify-items-start { justify-items: flex-start !important; }
.md-justify-items-end { justify-items: flex-end !important; }
.md-justify-items-center { justify-items: center !important; }

.md-justify-content-start { justify-content: flex-start !important; }
.md-justify-content-end { justify-content: flex-end !important; }
.md-justify-content-center { justify-content: center !important; }
.md-justify-content-between { justify-content: space-between !important; }
.md-justify-content-around { justify-content: space-around !important; }
.md-justify-content-evenly { justify-content: space-evenly !important; }

.md-align-items-start { align-items: flex-start !important; }
.md-align-items-end { align-items: flex-end !important; }
.md-align-items-center { align-items: center !important; }
.md-align-items-baseline { align-items: baseline !important; }
.md-align-items-stretch { align-items: stretch !important; }

.md-align-content-start { align-content: flex-start !important; }
.md-align-content-end { align-content: flex-end !important; }
.md-align-content-center { align-content: center !important; }
.md-align-content-between { align-content: space-between !important; }
.md-align-content-around { align-content: space-around !important; }
.md-align-content-stretch { align-content: stretch !important; }

.md-align-self-auto { align-self: auto !important; }
.md-align-self-start { align-self: flex-start !important; }
.md-align-self-end { align-self: flex-end !important; }
.md-align-self-center { align-self: center !important; }
.md-align-self-baseline { align-self: baseline !important; }
.md-align-self-stretch { align-self: stretch !important; }

.md-flex-grow-0 { flex-grow: 0 !important; }
.md-flex-grow-1 { flex-grow: 1 !important; }
.md-flex-shrink-0 { flex-shrink: 0 !important; }
.md-flex-shrink-1 { flex-shrink: 1 !important; }

.md-flex-1 { flex: 1 1 0% !important; }
.md-flex-auto { flex: 1 1 auto !important; }
.md-flex-initial { flex: 0 1 auto !important; }
.md-flex-none { flex: none !important; }

  /* Width and Height */
.md-w-none { width: none !important; }
.md-w-auto { width: auto !important; }
.md-w-screen { width: 100vw !important; }
.md-w-fit { min-width: fit-content !important; }
.md-w-min { min-width: min-content !important; }
.md-w-max { min-width: max-content !important; }
.md-w-10p { width: 10% !important; }
.md-w-20p { width: 20% !important; }
.md-w-25p { width: var(--mico-quarter) !important; }
.md-w-30p { width: 30% !important; }
.md-w-33p { width: var(--mico-third) !important; }
.md-w-40p { width: 40% !important; }
.md-w-50p { width: 50% !important; }
.md-w-60p { width: 60% !important; }
.md-w-70p { width: 70% !important; }
.md-w-80p { width: 80% !important; }
.md-w-90p { width: 90% !important; }
.md-w-100p { width: 100% !important; }

.md-h-none { height: none !important; }
.md-h-auto { height: auto !important; }
.md-h-screen { height: 100vh !important; }
.md-h-10p { height: 10% !important; }
.md-h-20p { height: 20% !important; }
.md-h-25p { height: var(--mico-quarter) !important; }
.md-h-30p { height: 30% !important; }
.md-h-33p { height: var(--mico-third) !important; }
.md-h-40p { height: 40% !important; }
.md-h-50p { height: 50% !important; }
.md-h-60p { height: 60% !important; }
.md-h-70p { height: 70% !important; }
.md-h-80p { height: 80% !important; }
.md-h-90p { height: 90% !important; }
.md-h-100p { height: 100% !important; }

  /* Min Width and Height */
.md-min-w-none { min-width: none !important; }
.md-min-w-auto { min-width: auto !important; }
.md-min-w-screen { min-width: 100vw !important; }
.md-min-w-fit { min-width: fit-content !important; }
.md-min-w-min { min-width: min-content !important; }
.md-min-w-max { min-width: max-content !important; }
.md-min-w-10p { min-width: 10% !important; }
.md-min-w-20p { min-width: 20% !important; }
.md-min-w-25p { min-width: var(--mico-quarter) !important; }
.md-min-w-30p { min-width: 30% !important; }
.md-min-w-33p { min-width: var(--mico-third) !important; }
.md-min-w-40p { min-width: 40% !important; }
.md-min-w-50p { min-width: 50% !important; }
.md-min-w-60p { min-width: 60% !important; }
.md-min-w-70p { min-width: 70% !important; }
.md-min-w-80p { min-width: 80% !important; }
.md-min-w-90p { min-width: 90% !important; }
.md-min-w-100p { min-width: 100% !important; }

.md-min-h-none { min-height: none !important; }
.md-min-h-auto { min-height: auto !important; }
.md-min-h-screen { min-height: 100vh !important; }
.md-min-h-10p { min-height: 10% !important; }
.md-min-h-20p { min-height: 20% !important; }
.md-min-h-25p { min-height: var(--mico-quarter) !important; }
.md-min-h-30p { min-height: 30% !important; }
.md-min-h-33p { min-height: var(--mico-third) !important; }
.md-min-h-40p { min-height: 40% !important; }
.md-min-h-50p { min-height: 50% !important; }
.md-min-h-60p { min-height: 60% !important; }
.md-min-h-70p { min-height: 70% !important; }
.md-min-h-80p { min-height: 80% !important; }
.md-min-h-90p { min-height: 90% !important; }
.md-min-h-100p { min-height: 100% !important; }


  /* Max Width and Height */
.md-max-w-none { max-width: none !important; }
.md-max-w-auto { max-width: auto !important; }
.md-max-w-screen { max-width: 100vw !important; }
.md-max-w-fit { max-width: fit-content !important; }
.md-max-w-min { max-width: min-content !important; }
.md-max-w-max { max-width: max-content !important; }
.md-max-w-10p { max-width: 10% !important; }
.md-max-w-20p { max-width: 20% !important; }
.md-max-w-25p { max-width: var(--mico-quarter) !important; }
.md-max-w-30p { max-width: 30% !important; }
.md-max-w-33p { max-width: var(--mico-third) !important; }
.md-max-w-40p { max-width: 40% !important; }
.md-max-w-50p { max-width: 50% !important; }
.md-max-w-60p { max-width: 60% !important; }
.md-max-w-70p { max-width: 70% !important; }
.md-max-w-80p { max-width: 80% !important; }
.md-max-w-90p { max-width: 90% !important; }
.md-max-w-100p { max-width: 100% !important; }

.md-max-h-none { max-height: none !important; }
.md-max-h-auto { max-height: auto !important; }
.md-max-h-screen { max-height: 100vh !important; }
.md-max-h-10p { max-height: 10% !important; }
.md-max-h-20p { max-height: 20% !important; }
.md-max-h-25p { max-height: var(--mico-quarter) !important; }
.md-max-h-30p { max-height: 30% !important; }
.md-max-h-33p { max-height: var(--mico-third) !important; }
.md-max-h-40p { max-height: 40% !important; }
.md-max-h-50p { max-height: 50% !important; }
.md-max-h-60p { max-height: 60% !important; }
.md-max-h-70p { max-height: 70% !important; }
.md-max-h-80p { max-height: 80% !important; }
.md-max-h-90p { max-height: 90% !important; }
.md-max-h-100p { max-height: 100% !important; }

/* Gap */
.md-gap-0 { gap: var(--mico-size-0) !important; }
.md-gap-4 { gap: var(--mico-size-4) !important; }
.md-gap-8 { gap: var(--mico-size-8) !important; }
.md-gap-12 { gap: var(--mico-size-12) !important; }
.md-gap-16 { gap: var(--mico-size-16) !important; }
.md-gap-20 { gap: var(--mico-size-20) !important; }
.md-gap-24 { gap: var(--mico-size-24) !important; }
.md-gap-28 { gap: var(--mico-size-28) !important; }
.md-gap-32 { gap: var(--mico-size-32) !important; }
.md-gap-36 { gap: var(--mico-size-36) !important; }
.md-gap-40 { gap: var(--mico-size-40) !important; }
.md-gap-44 { gap: var(--mico-size-44) !important; }
.md-gap-48 { gap: var(--mico-size-48) !important; }
.md-gap-52 { gap: var(--mico-size-52) !important; }
.md-gap-56 { gap: var(--mico-size-56) !important; }
.md-gap-60 { gap: var(--mico-size-60) !important; }
.md-gap-64 { gap: var(--mico-size-64) !important; }


/* Block Button */
.md-btn-block {
  display: var(--mico-display-block);
  width: var(--mico-full);
}
}

/*  --mico-breakpoint-sm: 576px; Small devices (large phones, portrait tablets) */

@media screen and (max-width: 576px) {

  .sm-text-left { text-align: var(--mico-text-align-left) !important; }
  .sm-text-center { text-align: var(--mico-text-align-center) !important; }
  .sm-text-right { text-align: var(--mico-text-align-right) !important; }
  .sm-text-justify { text-align: var(--mico-text-align-justify) !important; }
  .sm-text-start { text-align: var(--mico-text-align-start) !important; }
  .sm-text-end { text-align: var(--mico-text-align-end) !important; }

  .sm-mx-auto { margin-inline: auto !important; }
  .sm-my-auto { margin-block: auto !important; }

  .sm-d-none { display: none !important; }
  .sm-d-inline { display: inline !important; }
  .sm-d-inline-block { display: inline-block !important; }
  .sm-d-block { display: block !important; }
  .sm-d-flex { display: flex !important; }
  .sm-d-inline-flex { display: inline-flex !important; }
  .sm-d-grid { display: grid !important; }
  
  .sm-grid-cols-1 { grid-template-columns: repeat(1, 1fr) !important; }
  .sm-grid-cols-2 { grid-template-columns: repeat(2, 1fr) !important; }
  .sm-grid-cols-3 { grid-template-columns: repeat(3, 1fr) !important; }
  .sm-grid-cols-4 { grid-template-columns: repeat(4, 1fr) !important; }
  .sm-grid-cols-5 { grid-template-columns: repeat(5, 1fr) !important; }
  .sm-grid-cols-6 { grid-template-columns: repeat(6, 1fr) !important; }
  .sm-grid-cols-12 { grid-template-columns: repeat(12, 1fr) !important; }
  
  .sm-col-1 { grid-column: span 1 !important; }
  .sm-col-2 { grid-column: span 2 !important; }
  .sm-col-3 { grid-column: span 3 !important; }
  .sm-col-4 { grid-column: span 4 !important; }
  .sm-col-5 { grid-column: span 5 !important; }
  .sm-col-6 { grid-column: span 6 !important; }
  .sm-col-7 { grid-column: span 7 !important; }
  .sm-col-8 { grid-column: span 8 !important; }
  .sm-col-9 { grid-column: span 9 !important; }
  .sm-col-10 { grid-column: span 10 !important; }
  .sm-col-11 { grid-column: span 11 !important; }
  .sm-col-12 { grid-column: span 12 !important; }


/* Flexbox */
.sm-flex-row { flex-direction: row !important; }
.sm-flex-column { flex-direction: column !important; }
.sm-flex-row-reverse { flex-direction: row-reverse !important; }
.sm-flex-column-reverse { flex-direction: column-reverse !important; }

.sm-flex-wrap { flex-wrap: wrap !important; }
.sm-flex-nowrap { flex-wrap: nowrap !important; }
.sm-flex-wrap-reverse { flex-wrap: wrap-reverse !important; }

.sm-justify-content-start { justify-content: flex-start !important; }
.sm-justify-content-end { justify-content: flex-end !important; }
.sm-justify-content-center { justify-content: center !important; }
.sm-justify-content-between { justify-content: space-between !important; }
.sm-justify-content-around { justify-content: space-around !important; }
.sm-justify-content-evenly { justify-content: space-evenly !important; }


.sm-justify-items-start { justify-items: flex-start !important; }
.sm-justify-items-end { justify-items: flex-end !important; }
.sm-justify-items-center { justify-items: center !important; }

.sm-align-items-start { align-items: flex-start !important; }
.sm-align-items-end { align-items: flex-end !important; }
.sm-align-items-center { align-items: center !important; }
.sm-align-items-baseline { align-items: baseline !important; }
.sm-align-items-stretch { align-items: stretch !important; }

.sm-align-content-start { align-content: flex-start !important; }
.sm-align-content-end { align-content: flex-end !important; }
.sm-align-content-center { align-content: center !important; }
.sm-align-content-between { align-content: space-between !important; }
.sm-align-content-around { align-content: space-around !important; }
.sm-align-content-stretch { align-content: stretch !important; }

.sm-align-self-auto { align-self: auto !important; }
.sm-align-self-start { align-self: flex-start !important; }
.sm-align-self-end { align-self: flex-end !important; }
.sm-align-self-center { align-self: center !important; }
.sm-align-self-baseline { align-self: baseline !important; }
.sm-align-self-stretch { align-self: stretch !important; }

.sm-flex-grow-0 { flex-grow: 0 !important; }
.sm-flex-grow-1 { flex-grow: 1 !important; }
.sm-flex-shrink-0 { flex-shrink: 0 !important; }
.sm-flex-shrink-1 { flex-shrink: 1 !important; }

.sm-flex-1 { flex: 1 1 0% !important; }
.sm-flex-auto { flex: 1 1 auto !important; }
.sm-flex-initial { flex: 0 1 auto !important; }
.sm-flex-none { flex: none !important; }

  /* Width and Height */
.sm-w-none { width: none !important; }
.sm-w-auto { width: auto !important; }
.sm-w-screen { width: 100vw !important; }
.sm-w-fit { width: fit-content !important; }
.sm-w-min { width: min-content !important; }
.sm-w-max { width: max-content !important; }
.sm-w-10p { width: 10% !important; }
.sm-w-20p { width: 20% !important; }
.sm-w-25p { width: var(--mico-quarter) !important; }
.sm-w-30p { width: 30% !important; }
.sm-w-33p { width: var(--mico-third) !important; }
.sm-w-40p { width: 40% !important; }
.sm-w-50p { width: 50% !important; }
.sm-w-60p { width: 60% !important; }
.sm-w-70p { width: 70% !important; }
.sm-w-80p { width: 80% !important; }
.sm-w-90p { width: 90% !important; }
.sm-w-100p { width: 100% !important; }

.sm-h-none { height: none !important; }
.sm-h-auto { height: auto !important; }
.sm-h-screen { height: 100vh !important; }
.sm-h-10p { height: 10% !important; }
.sm-h-20p { height: 20% !important; }
.sm-h-25p { height: var(--mico-quarter) !important; }
.sm-h-30p { height: 30% !important; }
.sm-h-33p { height: var(--mico-third) !important; }
.sm-h-40p { height: 40% !important; }
.sm-h-50p { height: 50% !important; }
.sm-h-60p { height: 60% !important; }
.sm-h-70p { height: 70% !important; }
.sm-h-80p { height: 80% !important; }
.sm-h-90p { height: 90% !important; }
.sm-h-100p { height: 100% !important; }

  /* Min Width and Height */
.sm-min-w-none { min-width: none !important; }
.sm-min-w-auto { min-width: auto !important; }
.sm-min-w-screen { min-width: 100vw !important; }
.sm-min-w-fit { min-width: fit-content !important; }
.sm-min-w-min { min-width: min-content !important; }
.sm-min-w-max { min-width: max-content !important; }
.sm-min-w-10p { min-width: 10% !important; }
.sm-min-w-20p { min-width: 20% !important; }
.sm-min-w-25p { min-width: var(--mico-quarter) !important; }
.sm-min-w-30p { min-width: 30% !important; }
.sm-min-w-33p { min-width: var(--mico-third) !important; }
.sm-min-w-40p { min-width: 40% !important; }
.sm-min-w-50p { min-width: 50% !important; }
.sm-min-w-60p { min-width: 60% !important; }
.sm-min-w-70p { min-width: 70% !important; }
.sm-min-w-80p { min-width: 80% !important; }
.sm-min-w-90p { min-width: 90% !important; }
.sm-min-w-100p { min-width: 100% !important; }

.sm-min-h-none { min-height: none !important; }
.sm-min-h-auto { min-height: auto !important; }
.sm-min-h-screen { min-height: 100vh !important; }
.sm-min-h-10p { min-height: 10% !important; }
.sm-min-h-20p { min-height: 20% !important; }
.sm-min-h-25p { min-height: var(--mico-quarter) !important; }
.sm-min-h-30p { min-height: 30% !important; }
.sm-min-h-33p { min-height: var(--mico-third) !important; }
.sm-min-h-40p { min-height: 40% !important; }
.sm-min-h-50p { min-height: 50% !important; }
.sm-min-h-60p { min-height: 60% !important; }
.sm-min-h-70p { min-height: 70% !important; }
.sm-min-h-80p { min-height: 80% !important; }
.sm-min-h-90p { min-height: 90% !important; }
.sm-min-h-100p { min-height: 100% !important; }


  /* Max Width and Height */
.sm-max-w-none { max-width: none !important; }
.sm-max-w-auto { max-width: auto !important; }
.sm-max-w-screen { max-width: 100vw !important; }
.sm-max-w-fit { max-width: fit-content !important; }
.sm-max-w-min { max-width: min-content !important; }
.sm-max-w-max { max-width: max-content !important; }
.sm-max-w-10p { max-width: 10% !important; }
.sm-max-w-20p { max-width: 20% !important; }
.sm-max-w-25p { max-width: var(--mico-quarter) !important; }
.sm-max-w-30p { max-width: 30% !important; }
.sm-max-w-33p { max-width: var(--mico-third) !important; }
.sm-max-w-40p { max-width: 40% !important; }
.sm-max-w-50p { max-width: 50% !important; }
.sm-max-w-60p { max-width: 60% !important; }
.sm-max-w-70p { max-width: 70% !important; }
.sm-max-w-80p { max-width: 80% !important; }
.sm-max-w-90p { max-width: 90% !important; }
.sm-max-w-100p { max-width: 100% !important; }

.sm-max-h-none { max-height: none !important; }
.sm-max-h-auto { max-height: auto !important; }
.sm-max-h-screen { max-height: 100vh !important; }
.sm-max-h-10p { max-height: 10% !important; }
.sm-max-h-20p { max-height: 20% !important; }
.sm-max-h-25p { max-height: var(--mico-quarter) !important; }
.sm-max-h-30p { max-height: 30% !important; }
.sm-max-h-33p { max-height: var(--mico-third) !important; }
.sm-max-h-40p { max-height: 40% !important; }
.sm-max-h-50p { max-height: 50% !important; }
.sm-max-h-60p { max-height: 60% !important; }
.sm-max-h-70p { max-height: 70% !important; }
.sm-max-h-80p { max-height: 80% !important; }
.sm-max-h-90p { max-height: 90% !important; }
.sm-max-h-100p { max-height: 100% !important; }

/* Gap */
.sm-gap-0 { gap: var(--mico-size-0) !important; }
.sm-gap-4 { gap: var(--mico-size-4) !important; }
.sm-gap-8 { gap: var(--mico-size-8) !important; }
.sm-gap-12 { gap: var(--mico-size-12) !important; }
.sm-gap-16 { gap: var(--mico-size-16) !important; }
.sm-gap-20 { gap: var(--mico-size-20) !important; }
.sm-gap-24 { gap: var(--mico-size-24) !important; }
.sm-gap-28 { gap: var(--mico-size-28) !important; }
.sm-gap-32 { gap: var(--mico-size-32) !important; }
.sm-gap-36 { gap: var(--mico-size-36) !important; }
.sm-gap-40 { gap: var(--mico-size-40) !important; }
.sm-gap-44 { gap: var(--mico-size-44) !important; }
.sm-gap-48 { gap: var(--mico-size-48) !important; }
.sm-gap-52 { gap: var(--mico-size-52) !important; }
.sm-gap-56 { gap: var(--mico-size-56) !important; }
.sm-gap-60 { gap: var(--mico-size-60) !important; }
.sm-gap-64 { gap: var(--mico-size-64) !important; }

/* Block Button */
.sm-btn-block {
  display: var(--mico-display-block);
  width: var(--mico-full);
}
}

/*  --mico-breakpoint-xs: 320px; * Extra small devices (phones) */

@media screen and (max-width: 320px) {
  
/* ====================================================================== */
/* TYPOGRAPHY UTILITIES                                                    */
/* ====================================================================== */

/**
 * Text Alignment
 */

  .xs-text-left { text-align: var(--mico-text-align-left) !important; }
  .xs-text-center { text-align: var(--mico-text-align-center) !important; }
  .xs-text-right { text-align: var(--mico-text-align-right) !important; }
  .xs-text-justify { text-align: var(--mico-text-align-justify) !important; }
  .xs-text-start { text-align: var(--mico-text-align-start) !important; }
  .xs-text-end { text-align: var(--mico-text-align-end) !important; }

  .xs-mx-auto { margin-inline: auto !important; }
  .xs-my-auto { margin-block: auto !important; }

  .xs-d-none { display: none !important; }
  .xs-d-inline { display: inline !important; }
  .xs-d-inline-block { display: inline-block !important; }
  .xs-d-block { display: block !important; }
  .xs-d-flex { display: flex !important; }
  .xs-d-inline-flex { display: inline-flex !important; }
  .xs-d-grid { display: grid !important; }
  
  .xs-grid-cols-1 { grid-template-columns: repeat(1, 1fr) !important; }
  .xs-grid-cols-2 { grid-template-columns: repeat(2, 1fr) !important; }
  .xs-grid-cols-3 { grid-template-columns: repeat(3, 1fr) !important; }
  .xs-grid-cols-4 { grid-template-columns: repeat(4, 1fr) !important; }
  .xs-grid-cols-5 { grid-template-columns: repeat(5, 1fr) !important; }
  .xs-grid-cols-6 { grid-template-columns: repeat(6, 1fr) !important; }
  .xs-grid-cols-12 { grid-template-columns: repeat(12, 1fr) !important; }
  
  .xs-col-1 { grid-column: span 1 !important; }
  .xs-col-2 { grid-column: span 2 !important; }
  .xs-col-3 { grid-column: span 3 !important; }
  .xs-col-4 { grid-column: span 4 !important; }
  .xs-col-5 { grid-column: span 5 !important; }
  .xs-col-6 { grid-column: span 6 !important; }
  .xs-col-7 { grid-column: span 7 !important; }
  .xs-col-8 { grid-column: span 8 !important; }
  .xs-col-9 { grid-column: span 9 !important; }
  .xs-col-10 { grid-column: span 10 !important; }
  .xs-col-11 { grid-column: span 11 !important; }
  .xs-col-12 { grid-column: span 12 !important; }


  /* Flexbox */
.xs-flex-row { flex-direction: row !important; }
.xs-flex-column { flex-direction: column !important; }
.xs-flex-row-reverse { flex-direction: row-reverse !important; }
.xs-flex-column-reverse { flex-direction: column-reverse !important; }

.xs-flex-wrap { flex-wrap: wrap !important; }
.xs-flex-nowrap { flex-wrap: nowrap !important; }
.xs-flex-wrap-reverse { flex-wrap: wrap-reverse !important; }

.xs-justify-content-start { justify-content: flex-start !important; }
.xs-justify-content-end { justify-content: flex-end !important; }
.xs-justify-content-center { justify-content: center !important; }
.xs-justify-content-between { justify-content: space-between !important; }
.xs-justify-content-around { justify-content: space-around !important; }
.xs-justify-content-evenly { justify-content: space-evenly !important; }

.xs-justify-items-start { justify-items: flex-start !important; }
.xs-justify-items-end { justify-items: flex-end !important; }
.xs-justify-items-center { justify-items: center !important; }

.xs-align-items-start { align-items: flex-start !important; }
.xs-align-items-end { align-items: flex-end !important; }
.xs-align-items-center { align-items: center !important; }
.xs-align-items-baseline { align-items: baseline !important; }
.xs-align-items-stretch { align-items: stretch !important; }

.xs-align-content-start { align-content: flex-start !important; }
.xs-align-content-end { align-content: flex-end !important; }
.xs-align-content-center { align-content: center !important; }
.xs-align-content-between { align-content: space-between !important; }
.xs-align-content-around { align-content: space-around !important; }
.xs-align-content-stretch { align-content: stretch !important; }

.xs-align-self-auto { align-self: auto !important; }
.xs-align-self-start { align-self: flex-start !important; }
.xs-align-self-end { align-self: flex-end !important; }
.xs-align-self-center { align-self: center !important; }
.xs-align-self-baseline { align-self: baseline !important; }
.xs-align-self-stretch { align-self: stretch !important; }

.xs-flex-grow-0 { flex-grow: 0 !important; }
.xs-flex-grow-1 { flex-grow: 1 !important; }
.xs-flex-shrink-0 { flex-shrink: 0 !important; }
.xs-flex-shrink-1 { flex-shrink: 1 !important; }

.xs-flex-1 { flex: 1 1 0% !important; }
.xs-flex-auto { flex: 1 1 auto !important; }
.xs-flex-initial { flex: 0 1 auto !important; }
.xs-flex-none { flex: none !important; }

/* Gap */
.xs-gap-0 { gap: var(--mico-size-0) !important; }
.xs-gap-4 { gap: var(--mico-size-4) !important; }
.xs-gap-8 { gap: var(--mico-size-8) !important; }
.xs-gap-12 { gap: var(--mico-size-12) !important; }
.xs-gap-16 { gap: var(--mico-size-16) !important; }
.xs-gap-20 { gap: var(--mico-size-20) !important; }
.xs-gap-24 { gap: var(--mico-size-24) !important; }
.xs-gap-28 { gap: var(--mico-size-28) !important; }
.xs-gap-32 { gap: var(--mico-size-32) !important; }
.xs-gap-36 { gap: var(--mico-size-36) !important; }
.xs-gap-40 { gap: var(--mico-size-40) !important; }
.xs-gap-44 { gap: var(--mico-size-44) !important; }
.xs-gap-48 { gap: var(--mico-size-48) !important; }
.xs-gap-52 { gap: var(--mico-size-52) !important; }
.xs-gap-56 { gap: var(--mico-size-56) !important; }
.xs-gap-60 { gap: var(--mico-size-60) !important; }
.xs-gap-64 { gap: var(--mico-size-64) !important; }

  /* Width and Height */
.xs-w-none { width: none !important; }
.xs-w-auto { width: auto !important; }
.xs-w-screen { width: 100vw !important; }
.xs-w-fit { width: fit-content !important; }
.xs-w-min { width: min-content !important; }
.xs-w-max { width: max-content !important; }
.xs-w-10p { width: 10% !important; }
.xs-w-20p { width: 20% !important; }
.xs-w-25p { width: var(--mico-quarter) !important; }
.xs-w-30p { width: 30% !important; }
.xs-w-33p { width: var(--mico-third) !important; }
.xs-w-40p { width: 40% !important; }
.xs-w-50p { width: 50% !important; }
.xs-w-60p { width: 60% !important; }
.xs-w-70p { width: 70% !important; }
.xs-w-80p { width: 80% !important; }
.xs-w-90p { width: 90% !important; }
.xs-w-100p { width: 100% !important; }

.xs-h-none { height: none !important; }
.xs-h-auto { height: auto !important; }
.xs-h-screen { height: 100vh !important; }
.xs-h-10p { height: 10% !important; }
.xs-h-20p { height: 20% !important; }
.xs-h-25p { height: var(--mico-quarter) !important; }
.xs-h-30p { height: 30% !important; }
.xs-h-33p { height: var(--mico-third) !important; }
.xs-h-40p { height: 40% !important; }
.xs-h-50p { height: 50% !important; }
.xs-h-60p { height: 60% !important; }
.xs-h-70p { height: 70% !important; }
.xs-h-80p { height: 80% !important; }
.xs-h-90p { height: 90% !important; }
.xs-h-100p { height: 100% !important; }

  /*Min Width and Height */
.xs-min-w-none { min-width: none !important; }
.xs-min-w-auto { min-width: auto !important; }
.xs-min-w-screen { min-width: 100vw !important; }
.xs-min-w-fit { min-width: fit-content !important; }
.xs-min-w-min { min-width: min-content !important; }
.xs-min-w-max { min-width: max-content !important; }
.xs-min-w-10p { min-width: 10% !important; }
.xs-min-w-20p { min-width: 20% !important; }
.xs-min-w-25p { min-width: var(--mico-quarter) !important; }
.xs-min-w-30p { min-width: 30% !important; }
.xs-min-w-33p { min-width: var(--mico-third) !important; }
.xs-min-w-40p { min-width: 40% !important; }
.xs-min-w-50p { min-width: 50% !important; }
.xs-min-w-60p { min-width: 60% !important; }
.xs-min-w-70p { min-width: 70% !important; }
.xs-min-w-80p { min-width: 80% !important; }
.xs-min-w-90p { min-width: 90% !important; }
.xs-min-w-100p { min-width: 100% !important; }

.xs-min-h-none { min-height: none !important; }
.xs-min-h-auto { min-height: auto !important; }
.xs-min-h-screen { min-height: 100vh !important; }
.xs-min-h-10p { min-height: 10% !important; }
.xs-min-h-20p { min-height: 20% !important; }
.xs-min-h-25p { min-height: var(--mico-quarter) !important; }
.xs-min-h-30p { min-height: 30% !important; }
.xs-min-h-33p { min-height: var(--mico-third) !important; }
.xs-min-h-40p { min-height: 40% !important; }
.xs-min-h-50p { min-height: 50% !important; }
.xs-min-h-60p { min-height: 60% !important; }
.xs-min-h-70p { min-height: 70% !important; }
.xs-min-h-80p { min-height: 80% !important; }
.xs-min-h-90p { min-height: 90% !important; }
.xs-min-h-100p { min-height: 100% !important; }

  /*Max Width and Height */
.xs-max-w-none { max-width: none !important; }
.xs-max-w-auto { max-width: auto !important; }
.xs-max-w-screen { max-width: 100vw !important; }
.xs-max-w-fit { max-width: fit-content; }
.xs-max-w-min { max-width: min-content; }
.xs-max-w-max { max-width: max-content; }
.xs-max-w-10p { max-width: 10% !important; }
.xs-max-w-20p { max-width: 20% !important; }
.xs-max-w-25p { max-width: var(--mico-quarter) !important; }
.xs-max-w-30p { max-width: 30% !important; }
.xs-max-w-33p { max-width: var(--mico-third) !important; }
.xs-max-w-40p { max-width: 40% !important; }
.xs-max-w-50p { max-width: 50% !important; }
.xs-max-w-60p { max-width: 60% !important; }
.xs-max-w-70p { max-width: 70% !important; }
.xs-max-w-80p { max-width: 80% !important; }
.xs-max-w-90p { max-width: 90% !important; }
.xs-max-w-100p { max-width: 100% !important; }

.xs-max-h-none { max-height: none !important; }
.xs-max-h-auto { max-height: auto !important; }
.xs-max-h-screen { max-height: 100vh !important; }
.xs-max-h-10p { max-height: 10% !important; }
.xs-max-h-20p { max-height: 20% !important; }
.xs-max-h-25p { max-height: var(--mico-quarter) !important; }
.xs-max-h-30p { max-height: 30% !important; }
.xs-max-h-33p { max-height: var(--mico-third) !important; }
.xs-max-h-40p { max-height: 40% !important; }
.xs-max-h-50p { max-height: 50% !important; }
.xs-max-h-60p { max-height: 60% !important; }
.xs-max-h-70p { max-height: 70% !important; }
.xs-max-h-80p { max-height: 80% !important; }
.xs-max-h-90p { max-height: 90% !important; }
.xs-max-h-100p { max-height: 100% !important; }


/* Block Button */
.xs-btn-block {
  display: var(--mico-display-block);
  width: var(--mico-full);
}

}

/* Presets */

@media (max-width: 1440px) {
    #div_block-26-2,#div_block-92-2 {
        flex-wrap: nowrap;
    }
}

@media (max-width: 1280px) {
    #div_block-26-2,#div_block-92-2 {
        flex-wrap: wrap;
    }
}

@media (max-width: 992px) {

#div_block-45-2{
margin-top: 0 !important;
}
}

/* Accessibility */

/* Mico Accessibility Styles */

/* These styles ensure that the framework meets WCAG 2.1 AA standards */

/* Screen reader only text - hides content visually but keeps it accessible to screen readers */

.sr-only,
.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* Make the element visible when it's focused */

.sr-only-focusable:not(:focus),
.visually-hidden-focusable:not(:focus) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* Skip link - allows keyboard users to skip to main content */

.skip-link {
  position: absolute;
  top: -40px;
  left: 0;
  background: var(--mico-color-accent);
  color: var(--mico-color-white);
  padding: 8px;
  z-index: 100;
  transition: all .11s ease;
}

.skip-link:focus {
  top: 0;
}

/* Focus styles */

:focus {
  outline: 1px solid var(--mico-color-accent);
  outline-offset: 2px;
  transition: all .11s ease;
}

.focusable:focus {
  outline: 1px solid var(--mico-color-accent);
  outline-offset: 2px;
  transition: all .11s ease;
}

/* Remove focus outline for mouse users, but keep for keyboard navigation */

.js-focus-visible :focus:not(.focus-visible) {
  outline: none;
}

/* High contrast mode adjustments */

@media (prefers-contrast: high) {
  :root {
    --mico-color-primary: oklch(0.2 0.01 270);
    --mico-color-secondary: oklch(0.2 0.01 270);
    --mico-color-accent: oklch(0.2 0.01 270);
    --mico-color-background: oklch(0.98 0.005 270);
    --mico-color-text: oklch(0.2 0.01 270);
  }

  /* Ensure all text has sufficient contrast */
  body {
    color: var(--mico-color-black);
    background-color: var(--mico-color-white);
  }

  /* Enhance borders for better visibility */
  button,
  input,
  select,
  textarea,
  .btn,
  .card,
  .alert {
    border: 1px solid var(--mico-color-black) !important;
  }

  /* Ensure links are underlined */
  a {
    text-decoration: underline !important;
  }

  /* Enhance focus states */
  :focus {
    outline: 3px solid var(--mico-color-black) !important;
    outline-offset: 3px !important;
  }
}

/* Reduced motion preferences */

@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }

  .animate,
  .animate-fade-in,
  .animate-slide-in,
  .animate-pulse,
  [class*="animate-"] {
    animation: none !important;
    transition: none !important;
  }
}

/* Ensure proper color contrast for form elements */

input,
select,
textarea {
  background-color: var(--mico-color-white);
  color: var(--mico-color-black);
  border: 1px solid var(--mico-color-gray-3xdark); /* WCAG AA compliant */
}

/* Ensure form labels are visible */

label {
  display: inline-block;
  margin-bottom: 0.5rem;
}

/* Ensure error messages are properly styled for accessibility */

.error,
[aria-invalid="true"] {
  border-color: var(--mico-color-error) !important;
}

.error-message {
  color: var(--mico-color-error);
  margin-top: 0.25rem;
  font-size: 0.875rem;
}

/* Ensure proper focus for interactive elements */

button:focus,
input:focus,
select:focus,
textarea:focus,
[role="button"]:focus,
[role="checkbox"]:focus,
[role="radio"]:focus,
[role="tab"]:focus,
[role="menuitem"]:focus {
  outline: 1px solid var(--mico-color-accent);
  outline-offset: 2px;
  z-index: 1;
}

/* Ensure proper styling for disabled elements */

button:disabled,
input:disabled,
select:disabled,
textarea:disabled,
[aria-disabled="true"] {
  opacity: 0.6;
  cursor: not-allowed;
}

/* Ensure proper ARIA states are visually represented */

[aria-expanded="true"] .icon-expand {
  transform: rotate(180deg);
}

[aria-selected="true"] {
  background-color: var(--mico-color-primary-2xlight);
  color: var(--mico-color-primary-5xdark);
}

[aria-current="page"] {
  font-weight: bold;
  text-decoration: underline;
}

/* Ensure proper keyboard focus indication for custom controls */

[role="button"],
[role="checkbox"],
[role="radio"],
[role="tab"],
[role="menuitem"] {
  cursor: pointer;
}